@model LabelNgInput
@if (Model.Url == null)
{
<p class="@Model.Classes" *ngIf="!Loc.data.@(Model.EntityPropertyName)" @Html.Raw(Model.Attributes)>
    {{@Html.Raw(Model.NgModelName + "." + Model.MemberName + (Model.Pipe != null ? " | " + Model.Pipe : ""))}}
</p>
<p class="@Model.Classes" *ngIf="Loc.data.@(Model.EntityPropertyName)" @Html.Raw(Model.Attributes)>
    {{@Html.Raw("Loc.data." + Model.EntityPropertyName + (Model.Pipe != null ? " | " + Model.Pipe : ""))}}
</p>
}
else
{
<a class="@Model.Classes" *ngIf="!Loc.data.@(Model.EntityPropertyName)" [routerLink]="@Html.Raw(Model.Url)" @if (Model.Blank) { @Html.Raw("target=\"_blank\"") } @Html.Raw(Model.Attributes)>
    {{@Html.Raw(Model.NgModelName + "." + Model.MemberName + (Model.Pipe != null ? " | " + Model.Pipe : ""))}}
</a>
<a class="@Model.Classes" *ngIf="Loc.data.@(Model.EntityPropertyName)" [routerLink]="@Html.Raw(Model.Url)" @if (Model.Blank) { @Html.Raw("target=\"_blank\"") } @Html.Raw(Model.Attributes)>
    {{@Html.Raw("Loc.data." + Model.EntityPropertyName + (Model.Pipe != null ? " | " + Model.Pipe : ""))}}
</a>
}
