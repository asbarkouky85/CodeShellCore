{"version":3,"sources":["..\\..\\./ClientApp/app/Auth/Roles/RoleCreate.html","..\\..\\./ClientApp/app/Auth/AuthModule.ts","..\\..\\./ClientApp/app/Auth/Roles/RoleEdit.ts","..\\..\\./Core/BaseApp/Auth/Roles/RoleEditBase.ts","..\\..\\./Core/BaseApp/Auth/Http.ts","..\\..\\./Core/BaseApp/Auth/Http/UsersService.ts","..\\..\\./Core/BaseApp/Auth/Http/RolesService.ts","..\\..\\./Core/BaseApp/Auth/Models.ts","..\\..\\./Core/BaseApp/Auth/Services/PrivilegeService.ts","..\\..\\./ClientApp/app/Auth/Roles/RoleEdit.html","..\\..\\./ClientApp/app/Auth/Roles/RoleList.ts","..\\..\\./Core/BaseApp/Auth/Roles/RoleListBase.ts","..\\..\\./ClientApp/app/Auth/Roles/RoleList.html","..\\..\\./ClientApp/app/Auth/Roles/RoleCreate.ts","..\\..\\./ClientApp/app/Auth/Roles/RolesModule.ts","..\\..\\./ClientApp/app/Auth/Users/UsersModule.ts","..\\..\\./ClientApp/app/Auth/Users/UserList.ts","..\\..\\./Core/BaseApp/Auth/Users/UserListBase.ts","..\\..\\./ClientApp/app/Auth/Users/UserList.html","..\\..\\./ClientApp/app/Auth/Users/UserCreate.ts","..\\..\\./Core/BaseApp/Auth/Users/UserEditBase.ts","..\\..\\./ClientApp/app/Auth/Users/UserCreate.html","..\\..\\./ClientApp/app/Auth/Users/UserEdit.ts","..\\..\\./ClientApp/app/Auth/Users/UserEdit.html","..\\..\\./ClientApp/app/Testing/TestingModule.ts","..\\..\\./ClientApp/app/Testing/TestPage.ts","..\\..\\./Core/BaseApp/Testing/TestBase.ts","..\\..\\./ClientApp/app/Testing/TestPage.html"],"names":[],"mappings":"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","file":"ClientApp.css","sourcesContent":["module.exports = \"<div class=\\\"page-header\\\" [ngClass]=\\\"IsEmbedded?'section-header':'container-fluid'\\\" *ngIf=\\\"!HideHeader\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-5 col-xs-12\\\" *ngIf=\\\"!IsEmbedded\\\">\\r\\n            <h2>{{'Pages.Roles__RoleCreate' | translate }}<span *ngIf=\\\"HeaderExtra\\\"> - {{HeaderExtra}}</span></h2>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-7 col-xs-12\\\" *ngIf=\\\"!IsEmbedded\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n                <div class=\\\"col-md-12 col-xs-12 padTop padBottom\\\">\\r\\n                    <div class=\\\"pull-last btn-group\\\">\\r\\n\\r\\n                        \\r\\n                        \\r\\n    <button class=\\\"btn btn-info margin-sides\\\"\\r\\n            (click)=\\\"Refresh()\\\"\\r\\n            \\r\\n            >\\r\\n        <i class=\\\"fa fa-redo\\\"></i> \\r\\n    </button>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"IsEmbedded\\\" class=\\\"container-fluid\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-8\\\">\\r\\n                    {{'Pages.Roles__RoleCreate' | translate }}<span *ngIf=\\\"HeaderExtra\\\"> - {{HeaderExtra}}</span>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-4\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"!IsEmbedded\\\">\\r\\n\\r\\n        <ol class=\\\"breadcrumb\\\">\\r\\n            <li>\\r\\n                <a routerLink=\\\"'/'\\\">{{'Words.Main' | translate }}</a>\\r\\n            </li>\\r\\n            <li>\\r\\n                {{'Pages.Roles__RoleCreate' | translate }}\\r\\n            </li>\\r\\n        </ol>\\r\\n    </div>\\r\\n</div><div [ngClass]=\\\"IsEmbedded?'panel panel-default embedded':'animated fadeInRight'\\\">\\r\\n\\r\\n    <div [ngClass]=\\\"IsEmbedded?'panel-body':'container-fluid content-block'\\\">\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"UseLocalization\\\">\\r\\n            <div class=\\\"col-xs-12 col-md-6 col-xs-offset-0 col-md-offset-6 padBottom\\\">\\r\\n                <div class=\\\"btn-group btn-group-sm pull-last\\\">\\r\\n                        <button class=\\\"btn btn-sm\\\" [ngClass]=\\\"CurrentLang=='ar'?'btn-primary':'btn-default'\\\" (click)=\\\"CurrentLang='ar'\\\">\\r\\n                            {{'Words.ar' | translate }}\\r\\n                        </button>\\r\\n                        <button class=\\\"btn btn-sm\\\" [ngClass]=\\\"CurrentLang=='en'?'btn-primary':'btn-default'\\\" (click)=\\\"CurrentLang='en'\\\">\\r\\n                            {{'Words.en' | translate }}\\r\\n                        </button>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        \\r\\n\\r\\n\\r\\n<form #Form=\\\"ngForm\\\">\\r\\n    \\r\\n<div class=\\\"row form-group \\\"\\r\\n     id=\\\"FG_entity_name\\\"\\r\\n     #FG_entity_name=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label class=\\\"col-sm-3 control-label\\\">\\r\\n        {{'Columns.Role__Name' | translate }}\\r\\n<span style=\\\"color:red\\\" > * </span>    </label>\\r\\n    <div class=\\\"col-sm-9\\\">\\r\\n        <input type=\\\"text\\\"\\r\\n       class=\\\"form-control \\\"\\r\\n       placeholder=\\\"{{'Columns.Role__Name' | translate }}\\\"\\r\\n       name=\\\"Form__entity_name\\\"\\r\\n       [(ngModel)]=\\\"model.entity.name\\\"\\r\\n       title=\\\"{{'Columns.Role__Name' | translate }}\\\"\\r\\n       [li-watch]=\\\"model\\\"\\r\\n\\r\\n       \\r\\n       required  >\\r\\n    <p *ngIf=\\\"!FG_entity_name.Write\\\">{{FG_entity_name.Value}}</p>\\r\\n\\r\\n\\r\\n        <span *ngIf=\\\"Form.controls['Form__entity_name'] && Form.controls['Form__entity_name'].invalid && (Form.controls['Form__entity_name'].dirty || Form.controls['Form__entity_name'].touched)\\\">\\r<small *ngIf=\\\"Form.controls['Form__entity_name'].errors!.required\\\" class=\\\"form-text text-danger\\\">{{'Messages.field_required' | translate : {p0:'Columns.Role__Name' | translate } }}</small>\\r\\n</span>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n    \\r\\n<div class=\\\"row form-group \\\"\\r\\n     id=\\\"FG_entity_description\\\"\\r\\n     #FG_entity_description=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label class=\\\"col-sm-3 control-label\\\">\\r\\n        {{'Columns.Role__Description' | translate }}\\r\\n    </label>\\r\\n    <div class=\\\"col-sm-9\\\">\\r\\n        \\r\\n<textarea class=\\\"form-control \\\"\\r\\n          placeholder=\\\"{{'Columns.Role__Description' | translate }}\\\"\\r\\n          name=\\\"Form__entity_description\\\"\\r\\n          [(ngModel)]=\\\"model.entity.description\\\"\\r\\n          maxlength=\\\"300\\\"  ></textarea>\\r\\n\\r\\n        <span *ngIf=\\\"Form.controls['Form__entity_description'] && Form.controls['Form__entity_description'].invalid && (Form.controls['Form__entity_description'].dirty || Form.controls['Form__entity_description'].touched)\\\">\\r<small *ngIf=\\\"Form.controls['Form__entity_description'].errors!.maxlength\\\" class=\\\"form-text text-danger\\\">{{'Messages.invalid_max_length' | translate : {p0:'300'} }}</small>\\r\\n</span>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n</form>\\r\\n\\r\\n<div  id=\\\"PrivilegesControl\\\" #PrivilegesControl>\\n\\r\\n<label class=\\\"section-header\\\">{{'Words.Privileges' | translate }}</label>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <ul class=\\\"nav nav-tabs\\\">\\r\\n            <li *ngFor=\\\"let res of Lookups.domains\\\" [ngClass]=\\\"res.Selected?'active':null\\\">\\r\\n                <a (click)=\\\"Priv.Select(res)\\\">{{ 'Words.'+res.name | translate }}</a>\\r\\n            </li>\\r\\n        </ul>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n<form #Form=\\\"ngForm\\\" >\\n        <div *ngFor=\\\"let dom of Lookups.domains\\\">\\r\\n            <div *ngIf=\\\"dom.Selected\\\" class=\\\"col-md-12\\\">\\r\\n                <table class=\\\"table table-striped text-center\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th style=\\\"width:300px;\\\">{{'Words.Resource' | translate }}</th>\\r\\n                                <th class=\\\"cursorPointer\\\" [ngClass]=\\\"GetHeaderClass('available')\\\"  >\\r\\n        {{'Words.available' | translate }}\\r\\n        <i class=\\\"fa fa-sort\\\" (click)=\\\"SortBy('available')\\\"></i>\\r\\n    </th>\\r\\n\\r\\n                                <th class=\\\"cursorPointer\\\" [ngClass]=\\\"GetHeaderClass('canViewDetails')\\\"  >\\r\\n        {{'Words.canViewDetails' | translate }}\\r\\n        <i class=\\\"fa fa-sort\\\" (click)=\\\"SortBy('canViewDetails')\\\"></i>\\r\\n    </th>\\r\\n\\r\\n                                <th class=\\\"cursorPointer\\\" [ngClass]=\\\"GetHeaderClass('canUpdate')\\\"  >\\r\\n        {{'Words.canUpdate' | translate }}\\r\\n        <i class=\\\"fa fa-sort\\\" (click)=\\\"SortBy('canUpdate')\\\"></i>\\r\\n    </th>\\r\\n\\r\\n                                <th class=\\\"cursorPointer\\\" [ngClass]=\\\"GetHeaderClass('canInsert')\\\"  >\\r\\n        {{'Words.canInsert' | translate }}\\r\\n        <i class=\\\"fa fa-sort\\\" (click)=\\\"SortBy('canInsert')\\\"></i>\\r\\n    </th>\\r\\n\\r\\n                                <th class=\\\"cursorPointer\\\" [ngClass]=\\\"GetHeaderClass('canDelete')\\\"  >\\r\\n        {{'Words.canDelete' | translate }}\\r\\n        <i class=\\\"fa fa-sort\\\" (click)=\\\"SortBy('canDelete')\\\"></i>\\r\\n    </th>\\r\\n\\r\\n\\r\\n                            <th>{{'Words.Other' | translate }}</th>\\r\\n                                <th class=\\\"cursorPointer\\\" [ngClass]=\\\"GetHeaderClass('CollectionId')\\\"  >\\r\\n        {{'Columns.RoleResource__CollectionId' | translate }}\\r\\n        <i class=\\\"fa fa-sort\\\" (click)=\\\"SortBy('CollectionId')\\\"></i>\\r\\n    </th>\\r\\n\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let r of dom.resources;let i = index\\\" (change)=\\\"Priv.ItemChanged(r)\\\">\\r\\n                            <td>{{ 'Words.'+ r.name | translate }}</td>\\r\\n                            <td  >\\r\\n    <label class=\\\"chiller_cb\\\">\\r\\n    \\r\\n    <input type=\\\"checkbox\\\"\\r\\n           [id]=\\\"'available'+i\\\"\\r\\n           [name]=\\\"'available'+i\\\"\\r\\n           [(ngModel)]=\\\"r.available\\\"\\r\\n           [li-watch]=\\\"r.Tag\\\"\\r\\n            >\\r\\n    <span></span>\\r\\n</label>\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        \\r\\n    </div>\\r\\n</td>\\r\\n                            <td  >\\r\\n    <label class=\\\"chiller_cb\\\">\\r\\n    \\r\\n    <input type=\\\"checkbox\\\"\\r\\n           [id]=\\\"'canViewDetails'+i\\\"\\r\\n           [name]=\\\"'canViewDetails'+i\\\"\\r\\n           [(ngModel)]=\\\"r.Tag.canViewDetails\\\"\\r\\n           [li-watch]=\\\"r.Tag\\\"\\r\\n            [disabled]=\\\"!r.available\\\" >\\r\\n    <span></span>\\r\\n</label>\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        \\r\\n    </div>\\r\\n</td>\\r\\n                            <td  >\\r\\n    <label class=\\\"chiller_cb\\\">\\r\\n    \\r\\n    <input type=\\\"checkbox\\\"\\r\\n           [id]=\\\"'canUpdate'+i\\\"\\r\\n           [name]=\\\"'canUpdate'+i\\\"\\r\\n           [(ngModel)]=\\\"r.Tag.canUpdate\\\"\\r\\n           [li-watch]=\\\"r.Tag\\\"\\r\\n            [disabled]=\\\"!r.available\\\" >\\r\\n    <span></span>\\r\\n</label>\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        \\r\\n    </div>\\r\\n</td>\\r\\n                            <td  >\\r\\n    <label class=\\\"chiller_cb\\\">\\r\\n    \\r\\n    <input type=\\\"checkbox\\\"\\r\\n           [id]=\\\"'canInsert'+i\\\"\\r\\n           [name]=\\\"'canInsert'+i\\\"\\r\\n           [(ngModel)]=\\\"r.Tag.canInsert\\\"\\r\\n           [li-watch]=\\\"r.Tag\\\"\\r\\n            [disabled]=\\\"!r.available\\\" >\\r\\n    <span></span>\\r\\n</label>\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        \\r\\n    </div>\\r\\n</td>\\r\\n                            <td  >\\r\\n    <label class=\\\"chiller_cb\\\">\\r\\n    \\r\\n    <input type=\\\"checkbox\\\"\\r\\n           [id]=\\\"'canDelete'+i\\\"\\r\\n           [name]=\\\"'canDelete'+i\\\"\\r\\n           [(ngModel)]=\\\"r.Tag.canDelete\\\"\\r\\n           [li-watch]=\\\"r.Tag\\\"\\r\\n            [disabled]=\\\"!r.available\\\" >\\r\\n    <span></span>\\r\\n</label>\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        \\r\\n    </div>\\r\\n</td>\\r\\n\\r\\n                            <td>\\r\\n                                <div class=\\\"form-group\\\" *ngFor=\\\"let ac of r.actions\\\">\\r\\n                                    <div class=\\\"row col-md-12\\\">\\r\\n                                        <div class=\\\"col-md-2\\\">\\r\\n                                            <label class=\\\"chiller_cb\\\">\\r\\n                                                <input type=\\\"checkbox\\\" [id]=\\\"'ac-'+ac.id\\\" [(ngModel)]=\\\"ac.Tag.selected\\\" (change)=\\\"Priv.ActionChanged(ac.Tag)\\\" />\\r\\n                                                <span></span>\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                        <label class=\\\"col-md-10\\\" [for]=\\\"'ac-'+ac.id\\\">{{ 'Words.'+ac.name | translate }}</label>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </td>\\r\\n                            <td  >\\r\\n    \\r\\n<select class=\\\"form-control\\\"\\r\\n        name=\\\"Form__collectionId{{i}}\\\" \\r\\n        [li-watch]=\\\"r\\\"\\r\\n        [(ngModel)]=\\\"r.collectionId\\\"\\r\\n        required  >\\r\\n    <option *ngFor=\\\"let item of r.collections\\\" [ngValue]=\\\"item.id\\\">{{item.name}}</option>\\r\\n</select>\\r\\n\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        <div class=\\\"cell-validation\\\" *ngIf=\\\"Form.controls['Form__collectionId'+i+''] && Form.controls['Form__collectionId'+i+''].invalid && Form.controls['Form__collectionId'+i+''].touched\\\">\\r\\n    <i class=\\\"fa fa-exclamation-circle redColor\\\"></i>\\r\\n    <div class=\\\"messages\\\">\\r\\n        <small *ngIf=\\\"Form.controls['Form__collectionId'+i+''].errors!.required\\\" class=\\\"form-text text-danger\\\">{{'Messages.field_required' | translate : {p0:'Columns.RoleResource__CollectionId' | translate } }}</small>\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n    </div>\\r\\n</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n        </div>\\r\\n</form>\\r\\n</div></div>\\r\\n\\r\\n\\r\\n        \\r\\n        <div class=\\\"row submit-buttons\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"pull-last\\\">\\r\\n                    \\r\\n        <button class=\\\"btn btn-primary\\\"\\r\\n            [disabled]=\\\"!CanSubmit\\\"\\r\\n            (click)=\\\"Submit()\\\">\\r\\n        {{'Words.Save' | translate }}\\r\\n    </button>\\r\\n\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\n<div style='display:none' #lookupOptionsContainer values='{\\\"domains\\\":\\\"C0\\\",\\\"r.collections\\\":\\\"C0\\\"}'></div>\\n<div style='display:none' #viewParamsContainer values='{\\\"ModelType\\\":null,\\\"AddUrl\\\":null,\\\"EditUrl\\\":null,\\\"DetailsUrl\\\":null,\\\"ListUrl\\\":null,\\\"Fields\\\":[],\\\"Other\\\":{}}'></div>\";","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { CodeShellModule } from \"codeshell/codeShellModule\";\r\nimport { SharedModule } from \"../Shared/SharedModule\";\r\nimport { Registry } from \"codeshell/core\";\r\nimport { AuthFilter, ResourceActions } from \"codeshell/security\";\r\n\r\nimport { ServerConfigBase } from \"codeshell/core\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\n\r\n\r\n@NgModule({\r\n    declarations: [],\r\n    exports: [],\r\n    imports: [\r\n\t\tSharedModule,\r\n        RouterModule.forChild([\r\n{ path:\"Roles\", loadChildren: function() { return new Promise(function (resolve, reject) {  (require as any).ensure([], function (require: any) {    resolve(require('.\\\\Roles\\\\RolesModule')['RolesModule']);  }, function(e: any) {    reject({ loadChunkError: true, details: e });  });}) } },\n\t{ path:\"Users\", loadChildren: function() { return new Promise(function (resolve, reject) {  (require as any).ensure([], function (require: any) {    resolve(require('.\\\\Users\\\\UsersModule')['UsersModule']);  }, function(e: any) {    reject({ loadChunkError: true, details: e });  });}) } },\n\t\r\n\t\t])\r\n    ]\r\n})\r\nexport class AuthModule {\r\n\r\n    constructor(trans: TranslateService, conf: ServerConfigBase) {\r\n        trans.setDefaultLang(conf.Locale);\r\n        trans.use(conf.Locale);\r\n    }\r\n}\r\n\r\n","import { Component } from \"@angular/core\";\r\nimport { RoleEditBase } from \"BaseApp/Auth/Roles/RoleEditBase\";\r\n\r\n@Component({ template: require('./RoleEdit.html'), selector : \"roleEdit\" })\r\nexport class RoleEdit extends RoleEditBase {\r\n\tpublic GetPageId() : number { return 2014381785000; }\r\n\tpublic get CollectionId(): string | null { return null; }\r\n}","import { Injectable } from \"@angular/core\";\r\n\r\nimport { Shell } from \"codeshell/core\";\r\nimport { ListItem } from \"codeshell/helpers\";\r\nimport { DTOEditComponentBase } from \"codeshell/baseComponents\";\r\n\r\nimport { RolesService } from \"./../Http\";\r\nimport { Perm } from \"./../Models\";\r\nimport { PrivilegeService } from \"./../Services/PrivilegeService\";\r\n\r\n@Injectable()\r\nexport abstract class RoleEditBase extends DTOEditComponentBase {\r\n\r\n    Service = new RolesService();\r\n\r\n    public Privileges: Perm[] = [];\r\n    public ResourceActions: Perm[] = [];\r\n    public Priv: PrivilegeService = new PrivilegeService([], [], [], 0);\r\n\r\n    DefaultModel(): any {\r\n        return {\r\n            entity: {\r\n                roleResources: [],\r\n                roleResourceActions: []\r\n            }\r\n        };\r\n    }\r\n\r\n    protected OnReady() {\r\n        \r\n        for (let priv of this.model.entity.roleResources) {\r\n            this.Privileges.push(Object.assign(new Perm, priv));\r\n        }\r\n        for (let priv of this.model.entity.roleResourceActions) {\r\n            this.ResourceActions.push(Object.assign(new ListItem, priv));\r\n        }\r\n        \r\n        this.Priv = new PrivilegeService(this.Lookups.domains, this.Privileges, this.ResourceActions, this.model.entity.id);\r\n\r\n    }\r\n\r\n    Submit() {\r\n        this.model.entity.roleResources = ListItem.GetChangedItems(this.Privileges);\r\n        this.model.entity.roleResourceActions = ListItem.GetChangedItems(this.ResourceActions);\r\n        super.Submit();\r\n    }\r\n}","export * from \"./Http/UsersService\";\r\nexport * from \"./Http/RolesService\";\r\n","import { EntityHttpService } from \"codeshell/http\";\r\nimport { SubmitResult } from \"codeshell/helpers\";\r\n\r\nexport class UsersService extends EntityHttpService {\r\n    protected get BaseUrl(): string {\r\n        return \"/apiAction/Users\";\r\n    }\r\n    public GetTenantApps(): Promise<any> {\r\n        return this.Get(\"GetTenantApps\");\r\n    }\r\n\r\n    public GetUserRole(userId: number): Promise<any> {\r\n        return this.Get(\"GetUserRole\", userId);\r\n    }\r\n\r\n    public CheckIsUserExist(model: any): Promise<SubmitResult> {\r\n        return this.Post(\"CheckUserexist\", model);\r\n    }\r\n\r\n    public ChangePassword(model: any): Promise<SubmitResult> {\r\n        return this.Save(\"ChangePassword\", model);\r\n    }\r\n}","import { EntityHttpService } from \"codeshell/http\";\r\n\r\nexport class RolesService extends EntityHttpService {\r\n    protected get BaseUrl(): string {\r\n        return \"/apiAction/Roles\";\r\n    }\r\n}","import { IDictionary, ListItem, TmpFileData } from \"codeshell/helpers\";\r\nimport { UserDTO } from \"codeshell/security\";\r\n\r\n\r\nexport class UserRole {\r\n    roleId: number=0;\r\n    userId: number=0;\r\n}\r\n\r\nexport class User{\r\n    id: number = 0;\r\n    tenantId: number = 0;\r\n    roles: ListItem[] = [];\r\n    parties: ListItem[] = [];\r\n    email?: string;\r\n    mobile?:string;\r\n    name?: string;\r\n    userType: number = 0;\r\n    logonName?: string;\r\n    password?: string;\r\n    passwordConfim?: string;\r\n    role?: any;\r\n    customerId?: number;\r\n    appId?: number;\r\n    personId?: number;\r\n    photoFile?: TmpFileData;\r\n    gender?: number;\r\n}\r\n\r\nexport class FMSUserDTO extends UserDTO{\r\n    parties?: number[];\r\n    customerLogo?: string;\r\n    profilePicture?: string;\r\n\r\n}\r\n\r\nexport class RoleResourceAction extends ListItem {\r\n    resourceActionId: number=0;\r\n    roleId: number=0;\r\n    state: string = \"Detached\";\r\n}\r\n\r\nexport class Perm extends ListItem{\r\n\r\n    public resourceId: number=0;\r\n    public roleId: number=0;\r\n    public canViewDetails: boolean = false;\r\n    public canUpdate: boolean = false;\r\n    public canInsert: boolean = false;\r\n    public canDelete: boolean = false;\r\n\r\n    SetAll(set: boolean) {\r\n        this.canDelete = set;\r\n        this.canInsert = set;\r\n        this.canUpdate = set;\r\n        this.canViewDetails = set;\r\n    }\r\n}\r\n\r\n","import { Perm } from \"../Models\";\r\nimport { ListItem } from \"codeshell/helpers\";\r\n\r\nexport class PrivilegeService {\r\n\r\n    Domains: any[];\r\n    Privileges: Perm[];\r\n    ResourceActions: ListItem[];\r\n\r\n    constructor(domains: any[], privileges: Perm[], resourceActions: ListItem[], roleId: number) {\r\n        this.Domains = domains;\r\n        this.Privileges = privileges;\r\n        this.ResourceActions = resourceActions;\r\n        let s = true;\r\n        for (let domain of domains) {\r\n            domain.Selected = s;\r\n            s = false;\r\n            for (let resource of domain.resources) {\r\n                let item = privileges.find(e => e.resourceId == resource.id);\r\n                resource.available = item != null;\r\n\r\n                if (item == null) {\r\n                    item = Object.assign(\r\n                        new Perm, {\r\n                            roleId: roleId,\r\n                            resourceId: resource.id,\r\n                            state: \"Detached\"\r\n                        });\r\n                }\r\n\r\n                for (let action of resource.actions)\r\n                {\r\n                    let ac = resourceActions.find(e => (e as any).resourceActionId == action.id);\r\n                    if (ac == null) {\r\n                        ac = Object.assign(new ListItem, {\r\n                            resourceActionId: action.id,\r\n                            roleId: roleId,\r\n                            state: \"Detached\"\r\n                        });\r\n                    } else {\r\n                        ac.selected = true;\r\n                    }\r\n                    action.Tag = ac;\r\n                    \r\n                }\r\n                resource.Tag = item;\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    public ItemChanged(r: any) {\r\n        let priv: Perm = r.Tag;\r\n        if (!r.available) {\r\n            priv.SetAll(false);\r\n            priv.RemoveFrom(this.Privileges);\r\n        } else {\r\n            if (priv.state == \"Detached\" || priv.state == \"Removed\") {\r\n                priv.SetAll(true);\r\n                priv.AddTo(this.Privileges);\r\n            } else {\r\n\r\n                priv.SetModified();\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    ActionChanged(item: ListItem) {\r\n        \r\n        if (item.selected) {\r\n            item.AddTo(this.ResourceActions);\r\n        } else {\r\n            item.RemoveFrom(this.ResourceActions);\r\n        }\r\n        \r\n    }\r\n\r\n    public Select(ob: any) {\r\n        for (let domain of this.Domains) {\r\n            domain.Selected = false;\r\n        }\r\n        ob.Selected = true;\r\n    }\r\n}","module.exports = \"<div class=\\\"page-header\\\" [ngClass]=\\\"IsEmbedded?'section-header':'container-fluid'\\\" *ngIf=\\\"!HideHeader\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-5 col-xs-12\\\" *ngIf=\\\"!IsEmbedded\\\">\\r\\n            <h2>{{'Pages.Roles__RoleEdit' | translate }}<span *ngIf=\\\"HeaderExtra\\\"> - {{HeaderExtra}}</span></h2>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-7 col-xs-12\\\" *ngIf=\\\"!IsEmbedded\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n                <div class=\\\"col-md-12 col-xs-12 padTop padBottom\\\">\\r\\n                    <div class=\\\"pull-last btn-group\\\">\\r\\n\\r\\n                        \\r\\n                        \\r\\n    <button class=\\\"btn btn-info margin-sides\\\"\\r\\n            (click)=\\\"Refresh()\\\"\\r\\n            \\r\\n            >\\r\\n        <i class=\\\"fa fa-redo\\\"></i> \\r\\n    </button>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"IsEmbedded\\\" class=\\\"container-fluid\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-8\\\">\\r\\n                    {{'Pages.Roles__RoleEdit' | translate }}<span *ngIf=\\\"HeaderExtra\\\"> - {{HeaderExtra}}</span>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-4\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"!IsEmbedded\\\">\\r\\n\\r\\n        <ol class=\\\"breadcrumb\\\">\\r\\n            <li>\\r\\n                <a routerLink=\\\"'/'\\\">{{'Words.Main' | translate }}</a>\\r\\n            </li>\\r\\n            <li>\\r\\n                {{'Pages.Roles__RoleEdit' | translate }}\\r\\n            </li>\\r\\n        </ol>\\r\\n    </div>\\r\\n</div><div [ngClass]=\\\"IsEmbedded?'panel panel-default embedded':'animated fadeInRight'\\\">\\r\\n\\r\\n    <div [ngClass]=\\\"IsEmbedded?'panel-body':'container-fluid content-block'\\\">\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"UseLocalization\\\">\\r\\n            <div class=\\\"col-xs-12 col-md-6 col-xs-offset-0 col-md-offset-6 padBottom\\\">\\r\\n                <div class=\\\"btn-group btn-group-sm pull-last\\\">\\r\\n                        <button class=\\\"btn btn-sm\\\" [ngClass]=\\\"CurrentLang=='ar'?'btn-primary':'btn-default'\\\" (click)=\\\"CurrentLang='ar'\\\">\\r\\n                            {{'Words.ar' | translate }}\\r\\n                        </button>\\r\\n                        <button class=\\\"btn btn-sm\\\" [ngClass]=\\\"CurrentLang=='en'?'btn-primary':'btn-default'\\\" (click)=\\\"CurrentLang='en'\\\">\\r\\n                            {{'Words.en' | translate }}\\r\\n                        </button>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        \\r\\n\\r\\n\\r\\n<form #Form=\\\"ngForm\\\">\\r\\n    \\r\\n<div class=\\\"row form-group \\\"\\r\\n     id=\\\"FG_entity_name\\\"\\r\\n     #FG_entity_name=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label class=\\\"col-sm-3 control-label\\\">\\r\\n        {{'Columns.Role__Name' | translate }}\\r\\n<span style=\\\"color:red\\\" > * </span>    </label>\\r\\n    <div class=\\\"col-sm-9\\\">\\r\\n        <input type=\\\"text\\\"\\r\\n       class=\\\"form-control \\\"\\r\\n       placeholder=\\\"{{'Columns.Role__Name' | translate }}\\\"\\r\\n       name=\\\"Form__entity_name\\\"\\r\\n       [(ngModel)]=\\\"model.entity.name\\\"\\r\\n       title=\\\"{{'Columns.Role__Name' | translate }}\\\"\\r\\n       [li-watch]=\\\"model\\\"\\r\\n\\r\\n       \\r\\n       required  >\\r\\n    <p *ngIf=\\\"!FG_entity_name.Write\\\">{{FG_entity_name.Value}}</p>\\r\\n\\r\\n\\r\\n        <span *ngIf=\\\"Form.controls['Form__entity_name'] && Form.controls['Form__entity_name'].invalid && (Form.controls['Form__entity_name'].dirty || Form.controls['Form__entity_name'].touched)\\\">\\r<small *ngIf=\\\"Form.controls['Form__entity_name'].errors!.required\\\" class=\\\"form-text text-danger\\\">{{'Messages.field_required' | translate : {p0:'Columns.Role__Name' | translate } }}</small>\\r\\n</span>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n    \\r\\n<div class=\\\"row form-group \\\"\\r\\n     id=\\\"FG_entity_description\\\"\\r\\n     #FG_entity_description=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label class=\\\"col-sm-3 control-label\\\">\\r\\n        {{'Columns.Role__Description' | translate }}\\r\\n    </label>\\r\\n    <div class=\\\"col-sm-9\\\">\\r\\n        \\r\\n<textarea class=\\\"form-control \\\"\\r\\n          placeholder=\\\"{{'Columns.Role__Description' | translate }}\\\"\\r\\n          name=\\\"Form__entity_description\\\"\\r\\n          [(ngModel)]=\\\"model.entity.description\\\"\\r\\n          maxlength=\\\"300\\\"  ></textarea>\\r\\n\\r\\n        <span *ngIf=\\\"Form.controls['Form__entity_description'] && Form.controls['Form__entity_description'].invalid && (Form.controls['Form__entity_description'].dirty || Form.controls['Form__entity_description'].touched)\\\">\\r<small *ngIf=\\\"Form.controls['Form__entity_description'].errors!.maxlength\\\" class=\\\"form-text text-danger\\\">{{'Messages.invalid_max_length' | translate : {p0:'300'} }}</small>\\r\\n</span>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n</form>\\r\\n\\r\\n<div  id=\\\"PrivilegesControl\\\" #PrivilegesControl>\\n\\r\\n<label class=\\\"section-header\\\">{{'Words.Privileges' | translate }}</label>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <ul class=\\\"nav nav-tabs\\\">\\r\\n            <li *ngFor=\\\"let res of Lookups.domains\\\" [ngClass]=\\\"res.Selected?'active':null\\\">\\r\\n                <a (click)=\\\"Priv.Select(res)\\\">{{ 'Words.'+res.name | translate }}</a>\\r\\n            </li>\\r\\n        </ul>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n<form #Form=\\\"ngForm\\\" >\\n        <div *ngFor=\\\"let dom of Lookups.domains\\\">\\r\\n            <div *ngIf=\\\"dom.Selected\\\" class=\\\"col-md-12\\\">\\r\\n                <table class=\\\"table table-striped text-center\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th style=\\\"width:300px;\\\">{{'Words.Resource' | translate }}</th>\\r\\n                                <th class=\\\"cursorPointer\\\" [ngClass]=\\\"GetHeaderClass('available')\\\"  >\\r\\n        {{'Words.available' | translate }}\\r\\n        <i class=\\\"fa fa-sort\\\" (click)=\\\"SortBy('available')\\\"></i>\\r\\n    </th>\\r\\n\\r\\n                                <th class=\\\"cursorPointer\\\" [ngClass]=\\\"GetHeaderClass('canViewDetails')\\\"  >\\r\\n        {{'Words.canViewDetails' | translate }}\\r\\n        <i class=\\\"fa fa-sort\\\" (click)=\\\"SortBy('canViewDetails')\\\"></i>\\r\\n    </th>\\r\\n\\r\\n                                <th class=\\\"cursorPointer\\\" [ngClass]=\\\"GetHeaderClass('canUpdate')\\\"  >\\r\\n        {{'Words.canUpdate' | translate }}\\r\\n        <i class=\\\"fa fa-sort\\\" (click)=\\\"SortBy('canUpdate')\\\"></i>\\r\\n    </th>\\r\\n\\r\\n                                <th class=\\\"cursorPointer\\\" [ngClass]=\\\"GetHeaderClass('canInsert')\\\"  >\\r\\n        {{'Words.canInsert' | translate }}\\r\\n        <i class=\\\"fa fa-sort\\\" (click)=\\\"SortBy('canInsert')\\\"></i>\\r\\n    </th>\\r\\n\\r\\n                                <th class=\\\"cursorPointer\\\" [ngClass]=\\\"GetHeaderClass('canDelete')\\\"  >\\r\\n        {{'Words.canDelete' | translate }}\\r\\n        <i class=\\\"fa fa-sort\\\" (click)=\\\"SortBy('canDelete')\\\"></i>\\r\\n    </th>\\r\\n\\r\\n\\r\\n                            <th>{{'Words.Other' | translate }}</th>\\r\\n                                <th class=\\\"cursorPointer\\\" [ngClass]=\\\"GetHeaderClass('CollectionId')\\\"  >\\r\\n        {{'Columns.RoleResource__CollectionId' | translate }}\\r\\n        <i class=\\\"fa fa-sort\\\" (click)=\\\"SortBy('CollectionId')\\\"></i>\\r\\n    </th>\\r\\n\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let r of dom.resources;let i = index\\\" (change)=\\\"Priv.ItemChanged(r)\\\">\\r\\n                            <td>{{ 'Words.'+ r.name | translate }}</td>\\r\\n                            <td  >\\r\\n    <label class=\\\"chiller_cb\\\">\\r\\n    \\r\\n    <input type=\\\"checkbox\\\"\\r\\n           [id]=\\\"'available'+i\\\"\\r\\n           [name]=\\\"'available'+i\\\"\\r\\n           [(ngModel)]=\\\"r.available\\\"\\r\\n           [li-watch]=\\\"r\\\"\\r\\n            >\\r\\n    <span></span>\\r\\n</label>\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        \\r\\n    </div>\\r\\n</td>\\r\\n                            <td  >\\r\\n    <label class=\\\"chiller_cb\\\">\\r\\n    \\r\\n    <input type=\\\"checkbox\\\"\\r\\n           [id]=\\\"'canViewDetails'+i\\\"\\r\\n           [name]=\\\"'canViewDetails'+i\\\"\\r\\n           [(ngModel)]=\\\"r.Tag.canViewDetails\\\"\\r\\n           [li-watch]=\\\"r\\\"\\r\\n            [disabled]=\\\"!r.available\\\" >\\r\\n    <span></span>\\r\\n</label>\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        \\r\\n    </div>\\r\\n</td>\\r\\n                            <td  >\\r\\n    <label class=\\\"chiller_cb\\\">\\r\\n    \\r\\n    <input type=\\\"checkbox\\\"\\r\\n           [id]=\\\"'canUpdate'+i\\\"\\r\\n           [name]=\\\"'canUpdate'+i\\\"\\r\\n           [(ngModel)]=\\\"r.Tag.canUpdate\\\"\\r\\n           [li-watch]=\\\"r\\\"\\r\\n            [disabled]=\\\"!r.available\\\" >\\r\\n    <span></span>\\r\\n</label>\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        \\r\\n    </div>\\r\\n</td>\\r\\n                            <td  >\\r\\n    <label class=\\\"chiller_cb\\\">\\r\\n    \\r\\n    <input type=\\\"checkbox\\\"\\r\\n           [id]=\\\"'canInsert'+i\\\"\\r\\n           [name]=\\\"'canInsert'+i\\\"\\r\\n           [(ngModel)]=\\\"r.Tag.canInsert\\\"\\r\\n           [li-watch]=\\\"r\\\"\\r\\n            [disabled]=\\\"!r.available\\\" >\\r\\n    <span></span>\\r\\n</label>\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        \\r\\n    </div>\\r\\n</td>\\r\\n                            <td  >\\r\\n    <label class=\\\"chiller_cb\\\">\\r\\n    \\r\\n    <input type=\\\"checkbox\\\"\\r\\n           [id]=\\\"'canDelete'+i\\\"\\r\\n           [name]=\\\"'canDelete'+i\\\"\\r\\n           [(ngModel)]=\\\"r.Tag.canDelete\\\"\\r\\n           [li-watch]=\\\"r\\\"\\r\\n            [disabled]=\\\"!r.available\\\" >\\r\\n    <span></span>\\r\\n</label>\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        \\r\\n    </div>\\r\\n</td>\\r\\n\\r\\n                            <td>\\r\\n                                <div class=\\\"form-group\\\" *ngFor=\\\"let ac of r.actions\\\">\\r\\n                                    <div class=\\\"row col-md-12\\\">\\r\\n                                        <div class=\\\"col-md-2\\\">\\r\\n                                            <label class=\\\"chiller_cb\\\">\\r\\n                                                <input type=\\\"checkbox\\\" [id]=\\\"'ac-'+ac.id\\\" [(ngModel)]=\\\"ac.Tag.selected\\\" (change)=\\\"Priv.ActionChanged(ac.Tag)\\\" />\\r\\n                                                <span></span>\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                        <label class=\\\"col-md-10\\\" [for]=\\\"'ac-'+ac.id\\\">{{ 'Words.'+ac.name | translate }}</label>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </td>\\r\\n                            <td  >\\r\\n    \\r\\n<select class=\\\"form-control\\\"\\r\\n        name=\\\"Form__collectionId{{i}}\\\" \\r\\n        [li-watch]=\\\"r\\\"\\r\\n        [(ngModel)]=\\\"r.collectionId\\\"\\r\\n        required  >\\r\\n    <option *ngFor=\\\"let item of r.collections\\\" [ngValue]=\\\"item.id\\\">{{item.name}}</option>\\r\\n</select>\\r\\n\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        <div class=\\\"cell-validation\\\" *ngIf=\\\"Form.controls['Form__collectionId'+i+''] && Form.controls['Form__collectionId'+i+''].invalid && Form.controls['Form__collectionId'+i+''].touched\\\">\\r\\n    <i class=\\\"fa fa-exclamation-circle redColor\\\"></i>\\r\\n    <div class=\\\"messages\\\">\\r\\n        <small *ngIf=\\\"Form.controls['Form__collectionId'+i+''].errors!.required\\\" class=\\\"form-text text-danger\\\">{{'Messages.field_required' | translate : {p0:'Columns.RoleResource__CollectionId' | translate } }}</small>\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n    </div>\\r\\n</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n        </div>\\r\\n</form>\\r\\n</div></div>\\r\\n\\r\\n\\r\\n        \\r\\n        <div class=\\\"row submit-buttons\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"pull-last\\\">\\r\\n                    \\r\\n        <button class=\\\"btn btn-primary\\\"\\r\\n            [disabled]=\\\"!CanSubmit\\\"\\r\\n            (click)=\\\"Submit()\\\">\\r\\n        {{'Words.Save' | translate }}\\r\\n    </button>\\r\\n\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\n<div style='display:none' #lookupOptionsContainer values='{\\\"domains\\\":\\\"C0\\\",\\\"r.collections\\\":\\\"C0\\\"}'></div>\\n<div style='display:none' #viewParamsContainer values='{\\\"ModelType\\\":null,\\\"AddUrl\\\":null,\\\"EditUrl\\\":null,\\\"DetailsUrl\\\":null,\\\"ListUrl\\\":null,\\\"Fields\\\":[],\\\"Other\\\":{}}'></div>\";","import { Component } from \"@angular/core\";\r\nimport { RoleListBase } from \"BaseApp/Auth/Roles/RoleListBase\";\r\n\r\n@Component({ template: require('./RoleList.html'), selector : \"roleList\" })\r\nexport class RoleList extends RoleListBase {\r\n\tpublic GetPageId() : number { return 2014381811000; }\r\n\tpublic get CollectionId(): string | null { return null; }\r\n}","import { ListComponentBase } from \"codeshell/baseComponents\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { RolesService } from \"../Http\";\r\nimport { Shell } from \"codeshell/core\";\r\n\r\n@Injectable()\r\nexport abstract class RoleListBase extends ListComponentBase {\r\n    Service = new RolesService();\r\n}","module.exports = \"<div class=\\\"page-header\\\" [ngClass]=\\\"IsEmbedded?'section-header':'container-fluid'\\\" *ngIf=\\\"!HideHeader\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-5 col-xs-12\\\" *ngIf=\\\"!IsEmbedded\\\">\\r\\n            <h2>{{'Pages.Roles__RoleList' | translate }}<span *ngIf=\\\"HeaderExtra\\\"> - {{HeaderExtra}}</span></h2>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-7 col-xs-12\\\" *ngIf=\\\"!IsEmbedded\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n                <div class=\\\"col-md-12 col-xs-12 padTop padBottom\\\">\\r\\n                    <div class=\\\"pull-last btn-group\\\">\\r\\n\\r\\n                        \\r\\n    <a class=\\\"btn btn-success\\\"\\r\\n       [routerLink]=\\\"'/Auth/Roles/RoleCreate'\\\"\\r\\n        *ngIf=\\\"Permission.insert\\\"\\r\\n       >\\r\\n        <i class=\\\"fa fa-plus\\\"></i> {{'Words.AddEntity' | translate : {p0:'Words.Role' | translate } }}\\r\\n    </a>\\r\\n\\r\\n                        \\r\\n    <button class=\\\"btn btn-info margin-sides\\\"\\r\\n            (click)=\\\"Refresh()\\\"\\r\\n            \\r\\n            >\\r\\n        <i class=\\\"fa fa-redo\\\"></i> \\r\\n    </button>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"IsEmbedded\\\" class=\\\"container-fluid\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-8\\\">\\r\\n                    {{'Pages.Roles__RoleList' | translate }}<span *ngIf=\\\"HeaderExtra\\\"> - {{HeaderExtra}}</span>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-4\\\">\\r\\n\\r\\n    <a class=\\\"btn btn-success buttonGra-sm\\\"\\r\\n       [routerLink]=\\\"'/Auth/Roles/RoleCreate'\\\"\\r\\n        *ngIf=\\\"Permission.insert\\\"\\r\\n       >\\r\\n        <i class=\\\"fa fa-plus\\\"></i> {{'Words.AddEntity' | translate : {p0:'Words.Role' | translate } }}\\r\\n    </a>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"!IsEmbedded\\\">\\r\\n\\r\\n        <ol class=\\\"breadcrumb\\\">\\r\\n            <li>\\r\\n                <a routerLink=\\\"'/'\\\">{{'Words.Main' | translate }}</a>\\r\\n            </li>\\r\\n            <li>\\r\\n                {{'Pages.Roles__RoleList' | translate }}\\r\\n            </li>\\r\\n        </ol>\\r\\n    </div>\\r\\n</div>\\r\\n<div [ngClass]=\\\"IsEmbedded?'panel panel-default embedded body':'animated fadeInRight'\\\">\\r\\n    <div [ngClass]=\\\"IsEmbedded?'panel-body':'container-fluid content-block'\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-4\\\" style=\\\"padding: 10px 24px;color:#9B9B9B\\\">\\r\\n                <span><b>{{'Words.Count' | translate }}</b> : <span style=\\\"color:#9B9B9B\\\">{{totalCount}}</span></span>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-8\\\">\\r\\n                <search-group (termChange)=\\\"HeaderSearch($event)\\\"></search-group>\\r\\n            </div>\\r\\n        </div>\\r\\n        <paginate [showing]=\\\"options.Showing\\\" [total-count]=\\\"totalCount\\\" [max-pages]=\\\"10\\\" [(currentPage)]=\\\"pageIndex\\\" (pageChange)=\\\"PageSelected($event)\\\"></paginate>\\r\\n\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n            \\r\\n<table class=\\\"table table-striped\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n                <th class=\\\"cursorPointer\\\" [ngClass]=\\\"GetHeaderClass('Name')\\\"  >\\r\\n        {{'Columns.Role__Name' | translate }}\\r\\n        <i class=\\\"fa fa-sort\\\" (click)=\\\"SortBy('Name')\\\"></i>\\r\\n    </th>\\r\\n\\r\\n            <th></th>\\r\\n        </tr>\\r\\n\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let model of list\\\">\\r\\n            <td  >\\r\\n    {{model.name}}\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        \\r\\n    </div>\\r\\n</td>\\r\\n            <td><div class=\\\"btn-group btnResponsive \\\">\\r\\n            <a *ngIf=\\\"Permission.update\\\" class=\\\"btn btn-primary btn-sm\\\" [routerLink]=\\\"'/Auth/Roles/RoleEdit/' +model.id\\\">\\r\\n                <i class=\\\"fa fa-pen\\\"></i>\\r\\n            </a>\\r\\n\\r\\n\\r\\n                <a *ngIf=\\\"Permission.delete\\\" class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"Delete(model,model.id)\\\">\\r\\n                <i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            </a>\\r\\n\\r\\n</div></td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <paginate [showing]=\\\"options.Showing\\\" [total-count]=\\\"totalCount\\\" [max-pages]=\\\"10\\\" [(currentPage)]=\\\"pageIndex\\\" (pageChange)=\\\"PageSelected($event)\\\"></paginate>\\r\\n    </div>\\r\\n\\r\\n</div>\\n<div style='display:none' #lookupOptionsContainer values=''></div>\\n<div style='display:none' #viewParamsContainer values='{\\\"ModelType\\\":null,\\\"AddUrl\\\":\\\"/Auth/Roles/RoleCreate\\\",\\\"EditUrl\\\":\\\"/Auth/Roles/RoleEdit\\\",\\\"DetailsUrl\\\":null,\\\"ListUrl\\\":null,\\\"Fields\\\":[],\\\"Other\\\":{}}'></div>\";","import { Component } from \"@angular/core\";\r\nimport { RoleEditBase } from \"BaseApp/Auth/Roles/RoleEditBase\";\r\n\r\n@Component({ template: require('./RoleCreate.html'), selector : \"roleCreate\" })\r\nexport class RoleCreate extends RoleEditBase {\r\n\tpublic GetPageId() : number { return 2014381971000; }\r\n\tpublic get CollectionId(): string | null { return null; }\r\n}","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { CodeShellModule } from \"codeshell/codeShellModule\";\r\nimport { SharedModule } from \"../../Shared/SharedModule\";\r\nimport { Registry } from \"codeshell/core\";\r\nimport { AuthFilter, ResourceActions } from \"codeshell/security\";\r\n\r\nimport { ServerConfigBase } from \"codeshell/core\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { RoleEdit } from \"./RoleEdit\";\nimport { RoleList } from \"./RoleList\";\nimport { RoleCreate } from \"./RoleCreate\";\n\r\n\r\n@NgModule({\r\n    declarations: [RoleEdit,RoleList,RoleCreate,],\r\n    exports: [RoleEdit,RoleList,RoleCreate,],\r\n    imports: [\r\n\t\tSharedModule,\r\n        RouterModule.forChild([\r\n\t\t\t﻿{ path : \"RoleEdit/:id\", component : RoleEdit, canActivate: [AuthFilter], data: { name : \"Roles__RoleEdit\", navigate: false, resource:\"\", action: \"allowAll\", apps:null }},\n\t\t\t﻿{ path : \"RoleList\", component : RoleList, canActivate: [AuthFilter], data: { name : \"Roles__RoleList\", navigate: false, resource:\"\", action: \"allowAll\", apps:null }},\n\t\t\t﻿{ path : \"RoleCreate\", component : RoleCreate, canActivate: [AuthFilter], data: { name : \"Roles__RoleCreate\", navigate: false, resource:\"\", action: \"allowAll\", apps:null }},\n\r\n\t\t])\r\n    ]\r\n})\r\nexport class RolesModule {\r\n\r\n    constructor(trans: TranslateService, conf: ServerConfigBase) {\r\n        trans.setDefaultLang(conf.Locale);\r\n        trans.use(conf.Locale);\r\n    }\r\n}\r\n\r\nRegistry.Register(\"Auth/Roles/RoleEdit\", RoleEdit);\nRegistry.Register(\"Auth/Roles/RoleList\", RoleList);\nRegistry.Register(\"Auth/Roles/RoleCreate\", RoleCreate);\n","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { CodeShellModule } from \"codeshell/codeShellModule\";\r\nimport { SharedModule } from \"../../Shared/SharedModule\";\r\nimport { Registry } from \"codeshell/core\";\r\nimport { AuthFilter, ResourceActions } from \"codeshell/security\";\r\n\r\nimport { ServerConfigBase } from \"codeshell/core\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { UserList } from \"./UserList\";\nimport { UserCreate } from \"./UserCreate\";\nimport { UserEdit } from \"./UserEdit\";\n\r\n\r\n@NgModule({\r\n    declarations: [UserList,UserCreate,UserEdit,],\r\n    exports: [UserList,UserCreate,UserEdit,],\r\n    imports: [\r\n\t\tSharedModule,\r\n        RouterModule.forChild([\r\n\t\t\t﻿{ path : \"UserList\", component : UserList, canActivate: [AuthFilter], data: { name : \"Users__UserList\", navigate: false, resource:\"\", action: \"allowAll\", apps:null }},\n\t\t\t﻿{ path : \"UserCreate\", component : UserCreate, canActivate: [AuthFilter], data: { name : \"Users__UserCreate\", navigate: false, resource:\"\", action: \"allowAll\", apps:null }},\n\t\t\t﻿{ path : \"UserEdit/:id\", component : UserEdit, canActivate: [AuthFilter], data: { name : \"Users__UserEdit\", navigate: false, resource:\"\", action: \"allowAll\", apps:null }},\n\r\n\t\t])\r\n    ]\r\n})\r\nexport class UsersModule {\r\n\r\n    constructor(trans: TranslateService, conf: ServerConfigBase) {\r\n        trans.setDefaultLang(conf.Locale);\r\n        trans.use(conf.Locale);\r\n    }\r\n}\r\n\r\nRegistry.Register(\"Auth/Users/UserList\", UserList);\nRegistry.Register(\"Auth/Users/UserCreate\", UserCreate);\nRegistry.Register(\"Auth/Users/UserEdit\", UserEdit);\n","import { Component } from \"@angular/core\";\r\nimport { UserListBase } from \"BaseApp/Auth/Users/UserListBase\";\r\n\r\n@Component({ template: require('./UserList.html'), selector : \"userList\" })\r\nexport class UserList extends UserListBase {\r\n\tpublic GetPageId() : number { return 2013762020000; }\r\n\tpublic get CollectionId(): string | null { return null; }\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { UsersService } from \"./../Http/UsersService\";\r\nimport { Shell } from \"codeshell/core\";\r\nimport { ListComponentBase } from \"codeshell/baseComponents\";\r\n\r\n@Injectable()\r\nexport abstract class UserListBase extends ListComponentBase {\r\n    Service = new UsersService;\r\n}","module.exports = \"<div class=\\\"page-header\\\" [ngClass]=\\\"IsEmbedded?'section-header':'container-fluid'\\\" *ngIf=\\\"!HideHeader\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-5 col-xs-12\\\" *ngIf=\\\"!IsEmbedded\\\">\\r\\n            <h2>{{'Pages.Users__UserList' | translate }}<span *ngIf=\\\"HeaderExtra\\\"> - {{HeaderExtra}}</span></h2>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-7 col-xs-12\\\" *ngIf=\\\"!IsEmbedded\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n                <div class=\\\"col-md-12 col-xs-12 padTop padBottom\\\">\\r\\n                    <div class=\\\"pull-last btn-group\\\">\\r\\n\\r\\n                        \\r\\n    <a class=\\\"btn btn-success\\\"\\r\\n       [routerLink]=\\\"'/Auth/Users/UserCreate'\\\"\\r\\n        *ngIf=\\\"Permission.insert\\\"\\r\\n       >\\r\\n        <i class=\\\"fa fa-plus\\\"></i> {{'Words.AddEntity' | translate : {p0:'Words.User' | translate } }}\\r\\n    </a>\\r\\n\\r\\n                        \\r\\n    <button class=\\\"btn btn-info margin-sides\\\"\\r\\n            (click)=\\\"Refresh()\\\"\\r\\n            \\r\\n            >\\r\\n        <i class=\\\"fa fa-redo\\\"></i> \\r\\n    </button>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"IsEmbedded\\\" class=\\\"container-fluid\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-8\\\">\\r\\n                    {{'Pages.Users__UserList' | translate }}<span *ngIf=\\\"HeaderExtra\\\"> - {{HeaderExtra}}</span>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-4\\\">\\r\\n\\r\\n    <a class=\\\"btn btn-success buttonGra-sm\\\"\\r\\n       [routerLink]=\\\"'/Auth/Users/UserCreate'\\\"\\r\\n        *ngIf=\\\"Permission.insert\\\"\\r\\n       >\\r\\n        <i class=\\\"fa fa-plus\\\"></i> {{'Words.AddEntity' | translate : {p0:'Words.User' | translate } }}\\r\\n    </a>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"!IsEmbedded\\\">\\r\\n\\r\\n        <ol class=\\\"breadcrumb\\\">\\r\\n            <li>\\r\\n                <a routerLink=\\\"'/'\\\">{{'Words.Main' | translate }}</a>\\r\\n            </li>\\r\\n            <li>\\r\\n                {{'Pages.Users__UserList' | translate }}\\r\\n            </li>\\r\\n        </ol>\\r\\n    </div>\\r\\n</div>\\r\\n<div [ngClass]=\\\"IsEmbedded?'panel panel-default embedded body':'animated fadeInRight'\\\">\\r\\n    <div [ngClass]=\\\"IsEmbedded?'panel-body':'container-fluid content-block'\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-4\\\" style=\\\"padding: 10px 24px;color:#9B9B9B\\\">\\r\\n                <span><b>{{'Words.Count' | translate }}</b> : <span style=\\\"color:#9B9B9B\\\">{{totalCount}}</span></span>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-8\\\">\\r\\n                <search-group (termChange)=\\\"HeaderSearch($event)\\\"></search-group>\\r\\n            </div>\\r\\n        </div>\\r\\n        <paginate [showing]=\\\"options.Showing\\\" [total-count]=\\\"totalCount\\\" [max-pages]=\\\"10\\\" [(currentPage)]=\\\"pageIndex\\\" (pageChange)=\\\"PageSelected($event)\\\"></paginate>\\r\\n\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n            \\r\\n\\r\\n\\r\\n<table class=\\\"table table-striped\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n                <th class=\\\"cursorPointer\\\" [ngClass]=\\\"GetHeaderClass('Name')\\\"  >\\r\\n        {{'Columns.User__Name' | translate }}\\r\\n        <i class=\\\"fa fa-sort\\\" (click)=\\\"SortBy('Name')\\\"></i>\\r\\n    </th>\\r\\n\\r\\n                <th class=\\\"cursorPointer\\\" [ngClass]=\\\"GetHeaderClass('LogonName')\\\"  >\\r\\n        {{'Columns.User__LogonName' | translate }}\\r\\n        <i class=\\\"fa fa-sort\\\" (click)=\\\"SortBy('LogonName')\\\"></i>\\r\\n    </th>\\r\\n\\r\\n                <th class=\\\"cursorPointer\\\" [ngClass]=\\\"GetHeaderClass('BirthDate')\\\"  >\\r\\n        {{'Columns.User__BirthDate' | translate }}\\r\\n        <i class=\\\"fa fa-sort\\\" (click)=\\\"SortBy('BirthDate')\\\"></i>\\r\\n    </th>\\r\\n\\r\\n                <th class=\\\"cursorPointer\\\" [ngClass]=\\\"GetHeaderClass('Email')\\\"  >\\r\\n        {{'Columns.User__Email' | translate }}\\r\\n        <i class=\\\"fa fa-sort\\\" (click)=\\\"SortBy('Email')\\\"></i>\\r\\n    </th>\\r\\n\\r\\n                <th class=\\\"cursorPointer\\\" [ngClass]=\\\"GetHeaderClass('Mobile')\\\"  >\\r\\n        {{'Columns.User__Mobile' | translate }}\\r\\n        <i class=\\\"fa fa-sort\\\" (click)=\\\"SortBy('Mobile')\\\"></i>\\r\\n    </th>\\r\\n\\r\\n                <th class=\\\"cursorPointer\\\" [ngClass]=\\\"GetHeaderClass('AppName')\\\"  >\\r\\n        {{'Columns.User__AppName' | translate }}\\r\\n        <i class=\\\"fa fa-sort\\\" (click)=\\\"SortBy('AppName')\\\"></i>\\r\\n    </th>\\r\\n\\r\\n                <th class=\\\"cursorPointer\\\" [ngClass]=\\\"GetHeaderClass('CreatedOn')\\\"  >\\r\\n        {{'Columns.User__CreatedOn' | translate }}\\r\\n        <i class=\\\"fa fa-sort\\\" (click)=\\\"SortBy('CreatedOn')\\\"></i>\\r\\n    </th>\\r\\n\\r\\n            <th></th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let model of list\\\">\\r\\n            <td  >\\r\\n    {{model.name}}\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        \\r\\n    </div>\\r\\n</td>\\r\\n            <td  >\\r\\n    {{model.logonName}}\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        \\r\\n    </div>\\r\\n</td>\\r\\n            <td  >\\r\\n    {{model.birthDate | date : &#x27;dd/MM/yyyy&#x27;}}\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        \\r\\n    </div>\\r\\n</td>\\r\\n            <td  >\\r\\n    {{model.email}}\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        \\r\\n    </div>\\r\\n</td>\\r\\n            <td  >\\r\\n    {{model.mobile}}\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        \\r\\n    </div>\\r\\n</td>\\r\\n            <td  >\\r\\n    {{model.appName}}\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        \\r\\n    </div>\\r\\n</td>\\r\\n            <td  >\\r\\n    {{model.createdOn}}\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        \\r\\n    </div>\\r\\n</td>\\r\\n            <td>\\r\\n                <div class=\\\"btn-group btnResponsive \\\">\\r\\n            <a *ngIf=\\\"Permission.update\\\" class=\\\"btn btn-primary btn-sm\\\" [routerLink]=\\\"'/Auth/Users/UserEdit/' +model.id\\\">\\r\\n                <i class=\\\"fa fa-pen\\\"></i>\\r\\n            </a>\\r\\n\\r\\n\\r\\n                <a *ngIf=\\\"Permission.delete\\\" class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"Delete(model,model.id)\\\">\\r\\n                <i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            </a>\\r\\n\\r\\n</div>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <paginate [showing]=\\\"options.Showing\\\" [total-count]=\\\"totalCount\\\" [max-pages]=\\\"10\\\" [(currentPage)]=\\\"pageIndex\\\" (pageChange)=\\\"PageSelected($event)\\\"></paginate>\\r\\n    </div>\\r\\n\\r\\n</div>\\n<div style='display:none' #lookupOptionsContainer values=''></div>\\n<div style='display:none' #viewParamsContainer values='{\\\"ModelType\\\":null,\\\"AddUrl\\\":\\\"/Auth/Users/UserCreate\\\",\\\"EditUrl\\\":\\\"/Auth/Users/UserEdit\\\",\\\"DetailsUrl\\\":null,\\\"ListUrl\\\":null,\\\"Fields\\\":[],\\\"Other\\\":{}}'></div>\";","import { Component } from \"@angular/core\";\r\nimport { UserEditBase } from \"BaseApp/Auth/Users/UserEditBase\";\r\n\r\n@Component({ template: require('./UserCreate.html'), selector : \"userCreate\" })\r\nexport class UserCreate extends UserEditBase {\r\n\tpublic GetPageId() : number { return 2013762066000; }\r\n\tpublic get CollectionId(): string | null { return null; }\r\n}","import { Injectable, ViewChild } from \"@angular/core\";\r\nimport { ListItem, Tagged, DTO, SubmitResult } from \"codeshell/helpers\";\r\nimport { Shell } from \"codeshell/core\";\r\n\r\nimport { UsersService } from \"../Http\";\r\nimport { User, Perm } from \"../Models\";\r\nimport { PrivilegeService } from \"../Services/PrivilegeService\";\r\nimport { DTOEditComponentBase } from \"codeshell/baseComponents\";\r\nimport { FilesHttpService } from \"codeshell/http\";\r\n\r\n@Injectable()\r\nexport abstract class UserEditBase extends DTOEditComponentBase {\r\n\r\n    Files = new FilesHttpService(\"\");\r\n    Service = new UsersService;\r\n    photo?: string;\r\n    model: DTO<User> = new DTO<User>();\r\n    Privileges: Perm[] = [];\r\n    ResourceActions: ListItem[] = [];\r\n    Priv: PrivilegeService = new PrivilegeService([], [], [], 0);\r\n    PreventCreateSubmit: boolean = false;\r\n    isEditProfile: boolean = false;\r\n\r\n    DefaultModel() {\r\n        var mod = { entity: new User() };\r\n        mod.entity.tenantId = Shell.Session.User.tenantId;\r\n        return mod;\r\n    }\r\n\r\n    protected async LoadLookupsAsync(opts: any): Promise<any> {\r\n        let l: any = await super.LoadLookupsAsync(opts);\r\n\r\n        if (l.roles)\r\n            l.roles = Tagged.CastList(l.roles);\r\n\r\n        return l;\r\n    }\r\n\r\n    protected async GetModelFromServerAsync(id: number): Promise<any> {\r\n        \r\n        if (this.isEditProfile) {\r\n            id = Shell.Session.User.id;\r\n        }\r\n        this.model = await super.GetModelFromServerAsync(id);\r\n\r\n        for (var i in this.model.entity.roles)\r\n            this.model.entity.roles[i] = ListItem.FromDB(this.model.entity.roles[i]);\r\n\r\n        return this.model;\r\n    }\r\n\r\n\r\n    protected StartComponent() {\r\n        this.isEditProfile = this.GetParameterAsBoolean(\"EditProfile\");\r\n        console.log(\"a7a\");\r\n        if (this.isEditProfile) {\r\n            this.IsNew = false;\r\n            var id = Shell.Session.User.id;\r\n            this.Fill(id);\r\n        } else {\r\n            super.StartComponent();\r\n        }\r\n        \r\n    }\r\n\r\n    Upload = (files: FileList) => this.Files.PostFiles(\"Upload\",files);\r\n\r\n    protected OnReady() {\r\n\r\n        if (this.Lookups.roles) {\r\n\r\n            this.Lookups.roles = Tagged.JoinLists({\r\n                Source: this.model.entity.roles,\r\n                Data: this.Lookups.roles,\r\n                Comparer: (d, s) => d.id == s.roleId,\r\n                CreateNew: d => {\r\n                    return { roleId: d.id, userId: this.model.entity.id };\r\n                }\r\n            });\r\n        }\r\n\r\n        this.Priv = new PrivilegeService([], [], [], 0);\r\n        if (this.Lookups.domains != undefined) {\r\n\r\n            this.Service.GetUserRole(this.model.entity.id).then(res => {\r\n                this.model.entity.role = res;\r\n\r\n                this.Privileges = [];\r\n                this.ResourceActions = [];\r\n                for (let priv of this.model.entity.role.roleResources) {\r\n                    this.Privileges.push(Object.assign(new Perm, priv));\r\n                }\r\n                for (let priv of this.model.entity.role.roleResourceActions) {\r\n                    var s: ListItem = Object.assign(new ListItem, priv);\r\n                    s.selected = true;\r\n                    this.ResourceActions.push(s);\r\n                }\r\n                this.Priv = new PrivilegeService(this.Lookups.domains, this.Privileges, this.ResourceActions, res.id);\r\n            });\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    SubmitAsync(): Promise<SubmitResult> {\r\n        if (this.PreventCreateSubmit && this.IsNew) {\r\n            this.Show = false;\r\n            return Promise.resolve(new SubmitResult());\r\n        }\r\n\r\n        if (this.model.entity.role != undefined) {\r\n            this.model.entity.role.roleResourceActions = ListItem.GetChangedItems(this.ResourceActions);\r\n            this.model.entity.role.roleResources = ListItem.GetChangedItems(this.Privileges);\r\n        }\r\n\r\n        if (this.IsNew) {\r\n            this.model.entity.tenantId = Shell.Session.User.tenantId;\r\n        }\r\n        return super.SubmitAsync();\r\n    }\r\n\r\n}","module.exports = \"<div class=\\\"page-header\\\" [ngClass]=\\\"IsEmbedded?'section-header':'container-fluid'\\\" *ngIf=\\\"!HideHeader\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-5 col-xs-12\\\" *ngIf=\\\"!IsEmbedded\\\">\\r\\n            <h2>{{'Pages.Users__UserCreate' | translate }}<span *ngIf=\\\"HeaderExtra\\\"> - {{HeaderExtra}}</span></h2>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-7 col-xs-12\\\" *ngIf=\\\"!IsEmbedded\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n                <div class=\\\"col-md-12 col-xs-12 padTop padBottom\\\">\\r\\n                    <div class=\\\"pull-last btn-group\\\">\\r\\n\\r\\n                        \\r\\n                        \\r\\n    <button class=\\\"btn btn-info margin-sides\\\"\\r\\n            (click)=\\\"Refresh()\\\"\\r\\n            \\r\\n            >\\r\\n        <i class=\\\"fa fa-redo\\\"></i> \\r\\n    </button>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"IsEmbedded\\\" class=\\\"container-fluid\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-8\\\">\\r\\n                    {{'Pages.Users__UserCreate' | translate }}<span *ngIf=\\\"HeaderExtra\\\"> - {{HeaderExtra}}</span>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-4\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"!IsEmbedded\\\">\\r\\n\\r\\n        <ol class=\\\"breadcrumb\\\">\\r\\n            <li>\\r\\n                <a routerLink=\\\"'/'\\\">{{'Words.Main' | translate }}</a>\\r\\n            </li>\\r\\n                <li>\\r\\n                    <a routerLink=\\\"/Auth/Users/UserList\\\">{{'Pages.Users__UserList' | translate }}</a>\\r\\n                </li>\\r\\n            <li>\\r\\n                {{'Pages.Users__UserCreate' | translate }}\\r\\n            </li>\\r\\n        </ol>\\r\\n    </div>\\r\\n</div><div [ngClass]=\\\"IsEmbedded?'panel panel-default embedded':'animated fadeInRight'\\\">\\r\\n\\r\\n    <div [ngClass]=\\\"IsEmbedded?'panel-body':'container-fluid content-block'\\\">\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"UseLocalization\\\">\\r\\n            <div class=\\\"col-xs-12 col-md-6 col-xs-offset-0 col-md-offset-6 padBottom\\\">\\r\\n                <div class=\\\"btn-group btn-group-sm pull-last\\\">\\r\\n                        <button class=\\\"btn btn-sm\\\" [ngClass]=\\\"CurrentLang=='ar'?'btn-primary':'btn-default'\\\" (click)=\\\"CurrentLang='ar'\\\">\\r\\n                            {{'Words.ar' | translate }}\\r\\n                        </button>\\r\\n                        <button class=\\\"btn btn-sm\\\" [ngClass]=\\\"CurrentLang=='en'?'btn-primary':'btn-default'\\\" (click)=\\\"CurrentLang='en'\\\">\\r\\n                            {{'Words.en' | translate }}\\r\\n                        </button>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        \\r\\n<form #Form=\\\"ngForm\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        \\r\\n<div class=\\\"form-group col-md-12 \\\"\\r\\n     id=\\\"FG_entity_name\\\"\\r\\n     #FG_entity_name=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label>{{'Columns.User__Name' | translate }} <span style=\\\"color:red\\\">*</span></label>\\r\\n    <input type=\\\"text\\\"\\r\\n       class=\\\"form-control \\\"\\r\\n       placeholder=\\\"{{'Columns.User__Name' | translate }}\\\"\\r\\n       name=\\\"Form__entity_name\\\"\\r\\n       [(ngModel)]=\\\"model.entity.name\\\"\\r\\n       title=\\\"{{'Columns.User__Name' | translate }}\\\"\\r\\n       [li-watch]=\\\"model\\\"\\r\\n\\r\\n       \\r\\n       required  >\\r\\n    <p *ngIf=\\\"!FG_entity_name.Write\\\">{{FG_entity_name.Value}}</p>\\r\\n\\r\\n\\r\\n    <span *ngIf=\\\"Form.controls['Form__entity_name'] && Form.controls['Form__entity_name'].invalid && (Form.controls['Form__entity_name'].dirty || Form.controls['Form__entity_name'].touched)\\\">\\r<small *ngIf=\\\"Form.controls['Form__entity_name'].errors!.required\\\" class=\\\"form-text text-danger\\\">{{'Messages.field_required' | translate : {p0:'Columns.User__Name' | translate } }}</small>\\r\\n</span>\\r\\n</div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        \\r\\n<div class=\\\"form-group col-md-6 \\\"\\r\\n     id=\\\"FG_entity_logonName\\\"\\r\\n     #FG_entity_logonName=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label>{{'Columns.User__LogonName' | translate }} <span style=\\\"color:red\\\">*</span></label>\\r\\n    <input type=\\\"text\\\"\\r\\n       class=\\\"form-control \\\"\\r\\n       placeholder=\\\"{{'Columns.User__LogonName' | translate }}\\\"\\r\\n       name=\\\"Form__entity_logonName\\\"\\r\\n       [(ngModel)]=\\\"model.entity.logonName\\\"\\r\\n       title=\\\"{{'Columns.User__LogonName' | translate }}\\\"\\r\\n       [li-watch]=\\\"model\\\"\\r\\n\\r\\n       \\r\\n       required [pattern]=\\\"'[_a-zA-Z][_a-zA-Z0-9_.]{2,30}'\\\" is-unique [data-service]=\\\"Service\\\" [item-id]=\\\"model.entity.id\\\" column-id=\\\"LogonName\\\"  >\\r\\n    <p *ngIf=\\\"!FG_entity_logonName.Write\\\">{{FG_entity_logonName.Value}}</p>\\r\\n\\r\\n\\r\\n    <span *ngIf=\\\"Form.controls['Form__entity_logonName'] && Form.controls['Form__entity_logonName'].invalid && (Form.controls['Form__entity_logonName'].dirty || Form.controls['Form__entity_logonName'].touched)\\\">\\r<small *ngIf=\\\"Form.controls['Form__entity_logonName'].errors!.required\\\" class=\\\"form-text text-danger\\\">{{'Messages.field_required' | translate : {p0:'Columns.User__LogonName' | translate } }}</small>\\r\\n<small *ngIf=\\\"Form.controls['Form__entity_logonName'].errors!.pattern\\\" class=\\\"form-text text-danger\\\">{{'Messages.invalid_field' | translate : {p0:'Columns.User__LogonName' | translate } }}</small>\\r\\n<small *ngIf=\\\"Form.controls['Form__entity_logonName'].errors!.unique\\\" class=\\\"form-text text-danger\\\">{{'Messages.field_exists' | translate : {p0:'Columns.User__LogonName' | translate } }}</small>\\r\\n</span>\\r\\n</div>\\r\\n\\r\\n        \\r\\n<div class=\\\"form-group col-md-6 \\\"\\r\\n     id=\\\"FG_entity_appId\\\"\\r\\n     #FG_entity_appId=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label>{{'Columns.User__AppId' | translate }} </label>\\r\\n    \\r\\n<select class=\\\"form-control\\\"\\r\\n        name=\\\"Form__entity_appId\\\" \\r\\n        [li-watch]=\\\"model\\\"\\r\\n        [(ngModel)]=\\\"model.entity.appId\\\"\\r\\n         >\\r\\n        <option [ngValue]=\\\"null\\\">--({{'Words.Empty' | translate }})--</option>\\r\\n    <option *ngFor=\\\"let item of Lookups.apps\\\" [ngValue]=\\\"item.id\\\">{{item.name}}</option>\\r\\n</select>\\r\\n    <p *ngIf=\\\"!FG_entity_appId.Write\\\">{{FG_entity_appId.Value}}</p>\\r\\n\\r\\n    \\r\\n</div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        \\r\\n<div class=\\\"form-group col-md-6 \\\"\\r\\n     id=\\\"FG_entity_password\\\"\\r\\n     #FG_entity_password=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label>{{'Columns.User__Password' | translate }} <span style=\\\"color:red\\\">*</span></label>\\r\\n    <input type=\\\"password\\\"\\r\\n       class=\\\"form-control \\\"\\r\\n       placeholder=\\\"{{'Columns.User__Password' | translate }}\\\"\\r\\n       name=\\\"Form__entity_password\\\"\\r\\n       [(ngModel)]=\\\"model.entity.password\\\"\\r\\n       title=\\\"{{'Columns.User__Password' | translate }}\\\"\\r\\n       [li-watch]=\\\"model\\\"\\r\\n\\r\\n       \\r\\n       [required]=\\\"IsNew\\\" maxlength=\\\"20\\\" minlength=\\\"5\\\"  autocomplete=\\\"new-password\\\" >\\r\\n    <p *ngIf=\\\"!FG_entity_password.Write\\\">{{FG_entity_password.Value}}</p>\\r\\n\\r\\n\\r\\n    <span *ngIf=\\\"Form.controls['Form__entity_password'] && Form.controls['Form__entity_password'].invalid && (Form.controls['Form__entity_password'].dirty || Form.controls['Form__entity_password'].touched)\\\">\\r<small *ngIf=\\\"Form.controls['Form__entity_password'].errors!.required\\\" class=\\\"form-text text-danger\\\">{{'Messages.field_required' | translate : {p0:'Columns.User__Password' | translate } }}</small>\\r\\n<small *ngIf=\\\"Form.controls['Form__entity_password'].errors!.minlength\\\" class=\\\"form-text text-danger\\\">{{'Messages.invalid_min_and_max_length' | translate : {p0:'20',p1:'5'} }}</small>\\r\\n<small *ngIf=\\\"Form.controls['Form__entity_password'].errors!.maxlength\\\" class=\\\"form-text text-danger\\\">{{'Messages.invalid_min_and_max_length' | translate : {p0:'20',p1:'5'} }}</small>\\r\\n</span>\\r\\n</div>\\r\\n\\r\\n        \\r\\n<div class=\\\"form-group col-md-6 \\\"\\r\\n     id=\\\"FG_entity_passwordConfim\\\"\\r\\n     #FG_entity_passwordConfim=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label>{{'Columns.User__PasswordConfim' | translate }} <span style=\\\"color:red\\\">*</span></label>\\r\\n    <input type=\\\"password\\\"\\r\\n       class=\\\"form-control \\\"\\r\\n       placeholder=\\\"{{'Columns.User__PasswordConfim' | translate }}\\\"\\r\\n       name=\\\"Form__entity_passwordConfim\\\"\\r\\n       [(ngModel)]=\\\"model.entity.passwordConfim\\\"\\r\\n       title=\\\"{{'Columns.User__PasswordConfim' | translate }}\\\"\\r\\n       [li-watch]=\\\"model\\\"\\r\\n\\r\\n       \\r\\n       [required]=\\\"model.entity.password!=null\\\" maxlength=\\\"20\\\" minlength=\\\"5\\\" [pattern]=\\\"model.entity.password\\\"  >\\r\\n    <p *ngIf=\\\"!FG_entity_passwordConfim.Write\\\">{{FG_entity_passwordConfim.Value}}</p>\\r\\n\\r\\n\\r\\n    <span *ngIf=\\\"Form.controls['Form__entity_passwordConfim'] && Form.controls['Form__entity_passwordConfim'].invalid && (Form.controls['Form__entity_passwordConfim'].dirty || Form.controls['Form__entity_passwordConfim'].touched)\\\">\\r<small *ngIf=\\\"Form.controls['Form__entity_passwordConfim'].errors!.required\\\" class=\\\"form-text text-danger\\\">{{'Messages.field_required' | translate : {p0:'Columns.User__PasswordConfim' | translate } }}</small>\\r\\n<small *ngIf=\\\"Form.controls['Form__entity_passwordConfim'].errors!.minlength\\\" class=\\\"form-text text-danger\\\">{{'Messages.invalid_min_and_max_length' | translate : {p0:'20',p1:'5'} }}</small>\\r\\n<small *ngIf=\\\"Form.controls['Form__entity_passwordConfim'].errors!.maxlength\\\" class=\\\"form-text text-danger\\\">{{'Messages.invalid_min_and_max_length' | translate : {p0:'20',p1:'5'} }}</small>\\r\\n<small *ngIf=\\\"Form.controls['Form__entity_passwordConfim'].errors!.pattern\\\" class=\\\"form-text text-danger\\\">{{'Messages.invalid_field' | translate : {p0:'Columns.User__PasswordConfim' | translate } }}</small>\\r\\n</span>\\r\\n</div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        \\r\\n<div class=\\\"form-group col-md-6 \\\"\\r\\n     id=\\\"FG_entity_photo\\\"\\r\\n     #FG_entity_photo=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label>{{'Columns.User__Photo' | translate }} <span style=\\\"color:red\\\">*</span></label>\\r\\n    \\r\\n<div class=\\\"input-group\\\">\\r\\n    <label class=\\\"form-control\\\">\\r\\n        <a *ngIf=\\\"model.entity.photo\\\"\\r\\n           class=\\\"file-link\\\"\\r\\n           target=\\\"_blank\\\"\\r\\n           [routerLink]=\\\"model.entity.photo.url\\\">\\r\\n            {{model.entity.photo.name}}\\r\\n        </a>\\r\\n    </label>\\r\\n\\r\\n            <div class=\\\"input-group-btn\\\">\\r\\n                <label class=\\\"btn btn-primary\\\">\\r\\n                    <input name=\\\"photo_field\\\"\\r\\n                           type=\\\"file\\\"\\r\\n                           [(ngModel)]=\\\"photo_field\\\"\\r\\n                           [file-uploader]=\\\"Upload\\\"\\r\\n                           [(fileData)]=\\\"model.entity.photo\\\"\\r\\n                           required  \\r\\n                           style=\\\"display:none\\\">\\r\\n                    <i class=\\\"fa fa-upload\\\"></i>\\r\\n                </label>\\r\\n            </div>\\r\\n</div>\\r\\n\\r\\n    <span *ngIf=\\\"Form.controls['photo_field'] && Form.controls['photo_field'].invalid && (Form.controls['photo_field'].dirty || Form.controls['photo_field'].touched)\\\">\\r<small *ngIf=\\\"Form.controls['photo_field'].errors!.required\\\" class=\\\"form-text text-danger\\\">{{'Messages.field_required' | translate : {p0:'Columns.User__Photo' | translate } }}</small>\\r\\n</span>\\r\\n</div>\\r\\n\\r\\n    </div>\\r\\n</form>\\r\\n<hr />\\r\\n\\r\\n<div class=\\\"row form-group\\\">\\r\\n<div  class=\\\"col-md-6\\\" id=\\\"UserRoles\\\" #UserRoles>\\n        <label class=\\\"section-header\\\">{{'Words.UserRoles' | translate }}</label>\\r\\n    <div class=\\\"list-view\\\">\\r\\n        <div>\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of Lookups.roles\\\">\\r\\n                        <td width=\\\"25px\\\">\\r\\n                            <label class=\\\"chiller_cb\\\">\\r\\n                                <input [id]=\\\"'Form__entity_roles_'+item.id\\\"\\r\\n                                       type=\\\"checkbox\\\" [name]=\\\"'Form__entity_roles_'+item.id\\\" [(ngModel)]=\\\"item.Tag.selected\\\"                                       (change)=\\\"item.Tag.ApplyTo(model.entity.roles)\\\"\\r\\n                                       >\\r\\n                                <span></span>\\r\\n                            </label>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            {{ item.name }}\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div></div></div>\\r\\n<hr />\\r\\n<div class=\\\"row form-group\\\">\\r\\n<div  class=\\\"col-md-12\\\" id=\\\"UserPrivileges\\\" #UserPrivileges>\\n\\r\\n<label class=\\\"section-header\\\">{{'Words.Privileges' | translate }}</label>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <ul class=\\\"nav nav-tabs\\\">\\r\\n            <li *ngFor=\\\"let res of Lookups.domains\\\" [ngClass]=\\\"res.Selected?'active':null\\\">\\r\\n                <a (click)=\\\"Priv.Select(res)\\\">{{ 'Words.'+res.name | translate }}</a>\\r\\n            </li>\\r\\n        </ul>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n<form #Form=\\\"ngForm\\\" >\\n        <div *ngFor=\\\"let dom of Lookups.domains\\\">\\r\\n            <div *ngIf=\\\"dom.Selected\\\" class=\\\"col-md-12\\\">\\r\\n                <table class=\\\"table table-striped text-center\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th style=\\\"width:300px;\\\">{{'Words.Resource' | translate }}</th>\\r\\n                                <th class=\\\"cursorPointer\\\" [ngClass]=\\\"GetHeaderClass('available')\\\"  >\\r\\n        {{'Words.available' | translate }}\\r\\n        <i class=\\\"fa fa-sort\\\" (click)=\\\"SortBy('available')\\\"></i>\\r\\n    </th>\\r\\n\\r\\n                                <th class=\\\"cursorPointer\\\" [ngClass]=\\\"GetHeaderClass('canViewDetails')\\\"  >\\r\\n        {{'Words.canViewDetails' | translate }}\\r\\n        <i class=\\\"fa fa-sort\\\" (click)=\\\"SortBy('canViewDetails')\\\"></i>\\r\\n    </th>\\r\\n\\r\\n                                <th class=\\\"cursorPointer\\\" [ngClass]=\\\"GetHeaderClass('canUpdate')\\\"  >\\r\\n        {{'Words.canUpdate' | translate }}\\r\\n        <i class=\\\"fa fa-sort\\\" (click)=\\\"SortBy('canUpdate')\\\"></i>\\r\\n    </th>\\r\\n\\r\\n                                <th class=\\\"cursorPointer\\\" [ngClass]=\\\"GetHeaderClass('canInsert')\\\"  >\\r\\n        {{'Words.canInsert' | translate }}\\r\\n        <i class=\\\"fa fa-sort\\\" (click)=\\\"SortBy('canInsert')\\\"></i>\\r\\n    </th>\\r\\n\\r\\n                                <th class=\\\"cursorPointer\\\" [ngClass]=\\\"GetHeaderClass('canDelete')\\\"  >\\r\\n        {{'Words.canDelete' | translate }}\\r\\n        <i class=\\\"fa fa-sort\\\" (click)=\\\"SortBy('canDelete')\\\"></i>\\r\\n    </th>\\r\\n\\r\\n\\r\\n                            <th>{{'Words.Other' | translate }}</th>\\r\\n                                <th class=\\\"cursorPointer\\\" [ngClass]=\\\"GetHeaderClass('CollectionId')\\\"  >\\r\\n        {{'Columns.RoleResource__CollectionId' | translate }}\\r\\n        <i class=\\\"fa fa-sort\\\" (click)=\\\"SortBy('CollectionId')\\\"></i>\\r\\n    </th>\\r\\n\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let r of dom.resources;let i = index\\\" (change)=\\\"Priv.ItemChanged(r)\\\">\\r\\n                            <td>{{ 'Words.'+ r.name | translate }}</td>\\r\\n                            <td  >\\r\\n    <label class=\\\"chiller_cb\\\">\\r\\n    \\r\\n    <input type=\\\"checkbox\\\"\\r\\n           [id]=\\\"'available'+i\\\"\\r\\n           [name]=\\\"'available'+i\\\"\\r\\n           [(ngModel)]=\\\"r.available\\\"\\r\\n           [li-watch]=\\\"r.Tag\\\"\\r\\n            >\\r\\n    <span></span>\\r\\n</label>\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        \\r\\n    </div>\\r\\n</td>\\r\\n                            <td  >\\r\\n    <label class=\\\"chiller_cb\\\">\\r\\n    \\r\\n    <input type=\\\"checkbox\\\"\\r\\n           [id]=\\\"'canViewDetails'+i\\\"\\r\\n           [name]=\\\"'canViewDetails'+i\\\"\\r\\n           [(ngModel)]=\\\"r.Tag.canViewDetails\\\"\\r\\n           [li-watch]=\\\"r.Tag\\\"\\r\\n            [disabled]=\\\"!r.available\\\" >\\r\\n    <span></span>\\r\\n</label>\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        \\r\\n    </div>\\r\\n</td>\\r\\n                            <td  >\\r\\n    <label class=\\\"chiller_cb\\\">\\r\\n    \\r\\n    <input type=\\\"checkbox\\\"\\r\\n           [id]=\\\"'canUpdate'+i\\\"\\r\\n           [name]=\\\"'canUpdate'+i\\\"\\r\\n           [(ngModel)]=\\\"r.Tag.canUpdate\\\"\\r\\n           [li-watch]=\\\"r.Tag\\\"\\r\\n            [disabled]=\\\"!r.available\\\" >\\r\\n    <span></span>\\r\\n</label>\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        \\r\\n    </div>\\r\\n</td>\\r\\n                            <td  >\\r\\n    <label class=\\\"chiller_cb\\\">\\r\\n    \\r\\n    <input type=\\\"checkbox\\\"\\r\\n           [id]=\\\"'canInsert'+i\\\"\\r\\n           [name]=\\\"'canInsert'+i\\\"\\r\\n           [(ngModel)]=\\\"r.Tag.canInsert\\\"\\r\\n           [li-watch]=\\\"r.Tag\\\"\\r\\n            [disabled]=\\\"!r.available\\\" >\\r\\n    <span></span>\\r\\n</label>\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        \\r\\n    </div>\\r\\n</td>\\r\\n                            <td  >\\r\\n    <label class=\\\"chiller_cb\\\">\\r\\n    \\r\\n    <input type=\\\"checkbox\\\"\\r\\n           [id]=\\\"'canDelete'+i\\\"\\r\\n           [name]=\\\"'canDelete'+i\\\"\\r\\n           [(ngModel)]=\\\"r.Tag.canDelete\\\"\\r\\n           [li-watch]=\\\"r.Tag\\\"\\r\\n            [disabled]=\\\"!r.available\\\" >\\r\\n    <span></span>\\r\\n</label>\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        \\r\\n    </div>\\r\\n</td>\\r\\n\\r\\n                            <td>\\r\\n                                <div class=\\\"form-group\\\" *ngFor=\\\"let ac of r.actions\\\">\\r\\n                                    <div class=\\\"row col-md-12\\\">\\r\\n                                        <div class=\\\"col-md-2\\\">\\r\\n                                            <label class=\\\"chiller_cb\\\">\\r\\n                                                <input type=\\\"checkbox\\\" [id]=\\\"'ac-'+ac.id\\\" [(ngModel)]=\\\"ac.Tag.selected\\\" (change)=\\\"Priv.ActionChanged(ac.Tag)\\\" />\\r\\n                                                <span></span>\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                        <label class=\\\"col-md-10\\\" [for]=\\\"'ac-'+ac.id\\\">{{ 'Words.'+ac.name | translate }}</label>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </td>\\r\\n                            <td  >\\r\\n    \\r\\n<select class=\\\"form-control\\\"\\r\\n        name=\\\"Form__collectionId{{i}}\\\" \\r\\n        [li-watch]=\\\"r\\\"\\r\\n        [(ngModel)]=\\\"r.collectionId\\\"\\r\\n        required  >\\r\\n    <option *ngFor=\\\"let item of r.collections\\\" [ngValue]=\\\"item.id\\\">{{item.name}}</option>\\r\\n</select>\\r\\n\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        <div class=\\\"cell-validation\\\" *ngIf=\\\"Form.controls['Form__collectionId'+i+''] && Form.controls['Form__collectionId'+i+''].invalid && Form.controls['Form__collectionId'+i+''].touched\\\">\\r\\n    <i class=\\\"fa fa-exclamation-circle redColor\\\"></i>\\r\\n    <div class=\\\"messages\\\">\\r\\n        <small *ngIf=\\\"Form.controls['Form__collectionId'+i+''].errors!.required\\\" class=\\\"form-text text-danger\\\">{{'Messages.field_required' | translate : {p0:'Columns.RoleResource__CollectionId' | translate } }}</small>\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n    </div>\\r\\n</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n        </div>\\r\\n</form>\\r\\n</div></div></div>\\r\\n\\r\\n\\r\\n\\r\\n        \\r\\n        <div class=\\\"row submit-buttons\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"pull-last\\\">\\r\\n                    \\r\\n        <button class=\\\"btn btn-primary\\\"\\r\\n            [disabled]=\\\"!CanSubmit\\\"\\r\\n            (click)=\\\"Submit()\\\">\\r\\n        {{'Words.Save' | translate }}\\r\\n    </button>\\r\\n\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\n<div style='display:none' #lookupOptionsContainer values='{\\\"apps\\\":\\\"C0\\\",\\\"roles\\\":\\\"C0\\\",\\\"domains\\\":\\\"C0\\\",\\\"r.collections\\\":\\\"C0\\\"}'></div>\\n<div style='display:none' #viewParamsContainer values='{\\\"ModelType\\\":null,\\\"AddUrl\\\":null,\\\"EditUrl\\\":null,\\\"DetailsUrl\\\":null,\\\"ListUrl\\\":\\\"/Auth/Users/UserList\\\",\\\"Fields\\\":[],\\\"Other\\\":{}}'></div>\";","import { Component } from \"@angular/core\";\r\nimport { UserEditBase } from \"BaseApp/Auth/Users/UserEditBase\";\r\n\r\n@Component({ template: require('./UserEdit.html'), selector : \"userEdit\" })\r\nexport class UserEdit extends UserEditBase {\r\n\tpublic GetPageId() : number { return 2013762160000; }\r\n\tpublic get CollectionId(): string | null { return null; }\r\n}","module.exports = \"<div class=\\\"page-header\\\" [ngClass]=\\\"IsEmbedded?'section-header':'container-fluid'\\\" *ngIf=\\\"!HideHeader\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-5 col-xs-12\\\" *ngIf=\\\"!IsEmbedded\\\">\\r\\n            <h2>{{'Pages.Users__UserEdit' | translate }}<span *ngIf=\\\"HeaderExtra\\\"> - {{HeaderExtra}}</span></h2>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-7 col-xs-12\\\" *ngIf=\\\"!IsEmbedded\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n                <div class=\\\"col-md-12 col-xs-12 padTop padBottom\\\">\\r\\n                    <div class=\\\"pull-last btn-group\\\">\\r\\n\\r\\n                        \\r\\n                        \\r\\n    <button class=\\\"btn btn-info margin-sides\\\"\\r\\n            (click)=\\\"Refresh()\\\"\\r\\n            \\r\\n            >\\r\\n        <i class=\\\"fa fa-redo\\\"></i> \\r\\n    </button>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"IsEmbedded\\\" class=\\\"container-fluid\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-8\\\">\\r\\n                    {{'Pages.Users__UserEdit' | translate }}<span *ngIf=\\\"HeaderExtra\\\"> - {{HeaderExtra}}</span>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-4\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"!IsEmbedded\\\">\\r\\n\\r\\n        <ol class=\\\"breadcrumb\\\">\\r\\n            <li>\\r\\n                <a routerLink=\\\"'/'\\\">{{'Words.Main' | translate }}</a>\\r\\n            </li>\\r\\n                <li>\\r\\n                    <a routerLink=\\\"/Auth/Users/UserList\\\">{{'Pages.Users__UserList' | translate }}</a>\\r\\n                </li>\\r\\n            <li>\\r\\n                {{'Pages.Users__UserEdit' | translate }}\\r\\n            </li>\\r\\n        </ol>\\r\\n    </div>\\r\\n</div><div [ngClass]=\\\"IsEmbedded?'panel panel-default embedded':'animated fadeInRight'\\\">\\r\\n\\r\\n    <div [ngClass]=\\\"IsEmbedded?'panel-body':'container-fluid content-block'\\\">\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"UseLocalization\\\">\\r\\n            <div class=\\\"col-xs-12 col-md-6 col-xs-offset-0 col-md-offset-6 padBottom\\\">\\r\\n                <div class=\\\"btn-group btn-group-sm pull-last\\\">\\r\\n                        <button class=\\\"btn btn-sm\\\" [ngClass]=\\\"CurrentLang=='ar'?'btn-primary':'btn-default'\\\" (click)=\\\"CurrentLang='ar'\\\">\\r\\n                            {{'Words.ar' | translate }}\\r\\n                        </button>\\r\\n                        <button class=\\\"btn btn-sm\\\" [ngClass]=\\\"CurrentLang=='en'?'btn-primary':'btn-default'\\\" (click)=\\\"CurrentLang='en'\\\">\\r\\n                            {{'Words.en' | translate }}\\r\\n                        </button>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        \\r\\n<form #Form=\\\"ngForm\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        \\r\\n<div class=\\\"form-group col-md-12 \\\"\\r\\n     id=\\\"FG_entity_name\\\"\\r\\n     #FG_entity_name=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label>{{'Columns.User__Name' | translate }} <span style=\\\"color:red\\\">*</span></label>\\r\\n    <input type=\\\"text\\\"\\r\\n       class=\\\"form-control \\\"\\r\\n       placeholder=\\\"{{'Columns.User__Name' | translate }}\\\"\\r\\n       name=\\\"Form__entity_name\\\"\\r\\n       [(ngModel)]=\\\"model.entity.name\\\"\\r\\n       title=\\\"{{'Columns.User__Name' | translate }}\\\"\\r\\n       [li-watch]=\\\"model\\\"\\r\\n\\r\\n       \\r\\n       required  >\\r\\n    <p *ngIf=\\\"!FG_entity_name.Write\\\">{{FG_entity_name.Value}}</p>\\r\\n\\r\\n\\r\\n    <span *ngIf=\\\"Form.controls['Form__entity_name'] && Form.controls['Form__entity_name'].invalid && (Form.controls['Form__entity_name'].dirty || Form.controls['Form__entity_name'].touched)\\\">\\r\\n<small *ngIf=\\\"Form.controls['Form__entity_name'].errors!.required\\\" class=\\\"form-text text-danger\\\">{{'Messages.field_required' | translate : {p0:'Columns.User__Name' | translate } }}</small>\\r\\n</span>\\r\\n</div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        \\r\\n<div class=\\\"form-group col-md-6 \\\"\\r\\n     id=\\\"FG_entity_logonName\\\"\\r\\n     #FG_entity_logonName=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label>{{'Columns.User__LogonName' | translate }} <span style=\\\"color:red\\\">*</span></label>\\r\\n    <input type=\\\"text\\\"\\r\\n       class=\\\"form-control \\\"\\r\\n       placeholder=\\\"{{'Columns.User__LogonName' | translate }}\\\"\\r\\n       name=\\\"Form__entity_logonName\\\"\\r\\n       [(ngModel)]=\\\"model.entity.logonName\\\"\\r\\n       title=\\\"{{'Columns.User__LogonName' | translate }}\\\"\\r\\n       [li-watch]=\\\"model\\\"\\r\\n\\r\\n       \\r\\n       required [pattern]=\\\"'[_a-zA-Z][_a-zA-Z0-9_.]{2,30}'\\\" is-unique [data-service]=\\\"Service\\\" [item-id]=\\\"model.entity.id\\\" column-id=\\\"LogonName\\\"  >\\r\\n    <p *ngIf=\\\"!FG_entity_logonName.Write\\\">{{FG_entity_logonName.Value}}</p>\\r\\n\\r\\n\\r\\n    <span *ngIf=\\\"Form.controls['Form__entity_logonName'] && Form.controls['Form__entity_logonName'].invalid && (Form.controls['Form__entity_logonName'].dirty || Form.controls['Form__entity_logonName'].touched)\\\">\\r\\n<small *ngIf=\\\"Form.controls['Form__entity_logonName'].errors!.required\\\" class=\\\"form-text text-danger\\\">{{'Messages.field_required' | translate : {p0:'Columns.User__LogonName' | translate } }}</small>\\r\\n<small *ngIf=\\\"Form.controls['Form__entity_logonName'].errors!.pattern\\\" class=\\\"form-text text-danger\\\">{{'Messages.invalid_field' | translate : {p0:'Columns.User__LogonName' | translate } }}</small>\\r\\n<small *ngIf=\\\"Form.controls['Form__entity_logonName'].errors!.unique\\\" class=\\\"form-text text-danger\\\">{{'Messages.field_exists' | translate : {p0:'Columns.User__LogonName' | translate } }}</small>\\r\\n</span>\\r\\n</div>\\r\\n\\r\\n        \\r\\n<div class=\\\"form-group col-md-6 \\\"\\r\\n     id=\\\"FG_entity_appId\\\"\\r\\n     #FG_entity_appId=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label>{{'Columns.User__AppId' | translate }} </label>\\r\\n    \\r\\n<select class=\\\"form-control\\\"\\r\\n        name=\\\"Form__entity_appId\\\" \\r\\n        [li-watch]=\\\"model\\\"\\r\\n        [(ngModel)]=\\\"model.entity.appId\\\"\\r\\n         >\\r\\n        <option [ngValue]=\\\"null\\\">--({{'Words.Empty' | translate }})--</option>\\r\\n    <option *ngFor=\\\"let item of Lookups.apps\\\" [ngValue]=\\\"item.id\\\">{{item.name}}</option>\\r\\n</select>\\r\\n    <p *ngIf=\\\"!FG_entity_appId.Write\\\">{{FG_entity_appId.Value}}</p>\\r\\n\\r\\n    \\r\\n</div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        \\r\\n<div class=\\\"form-group col-md-6 \\\"\\r\\n     id=\\\"FG_entity_password\\\"\\r\\n     #FG_entity_password=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label>{{'Columns.User__Password' | translate }} <span style=\\\"color:red\\\">*</span></label>\\r\\n    <input type=\\\"password\\\"\\r\\n       class=\\\"form-control \\\"\\r\\n       placeholder=\\\"{{'Columns.User__Password' | translate }}\\\"\\r\\n       name=\\\"Form__entity_password\\\"\\r\\n       [(ngModel)]=\\\"model.entity.password\\\"\\r\\n       title=\\\"{{'Columns.User__Password' | translate }}\\\"\\r\\n       [li-watch]=\\\"model\\\"\\r\\n\\r\\n       \\r\\n       [required]=\\\"IsNew\\\" maxlength=\\\"20\\\" minlength=\\\"5\\\"  autocomplete=\\\"new-password\\\" >\\r\\n    <p *ngIf=\\\"!FG_entity_password.Write\\\">{{FG_entity_password.Value}}</p>\\r\\n\\r\\n\\r\\n    <span *ngIf=\\\"Form.controls['Form__entity_password'] && Form.controls['Form__entity_password'].invalid && (Form.controls['Form__entity_password'].dirty || Form.controls['Form__entity_password'].touched)\\\">\\r\\n<small *ngIf=\\\"Form.controls['Form__entity_password'].errors!.required\\\" class=\\\"form-text text-danger\\\">{{'Messages.field_required' | translate : {p0:'Columns.User__Password' | translate } }}</small>\\r\\n<small *ngIf=\\\"Form.controls['Form__entity_password'].errors!.minlength\\\" class=\\\"form-text text-danger\\\">{{'Messages.invalid_min_and_max_length' | translate : {p0:'20',p1:'5'} }}</small>\\r\\n<small *ngIf=\\\"Form.controls['Form__entity_password'].errors!.maxlength\\\" class=\\\"form-text text-danger\\\">{{'Messages.invalid_min_and_max_length' | translate : {p0:'20',p1:'5'} }}</small>\\r\\n</span>\\r\\n</div>\\r\\n\\r\\n        \\r\\n<div class=\\\"form-group col-md-6 \\\"\\r\\n     id=\\\"FG_entity_passwordConfim\\\"\\r\\n     #FG_entity_passwordConfim=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label>{{'Columns.User__PasswordConfim' | translate }} <span style=\\\"color:red\\\">*</span></label>\\r\\n    <input type=\\\"password\\\"\\r\\n       class=\\\"form-control \\\"\\r\\n       placeholder=\\\"{{'Columns.User__PasswordConfim' | translate }}\\\"\\r\\n       name=\\\"Form__entity_passwordConfim\\\"\\r\\n       [(ngModel)]=\\\"model.entity.passwordConfim\\\"\\r\\n       title=\\\"{{'Columns.User__PasswordConfim' | translate }}\\\"\\r\\n       [li-watch]=\\\"model\\\"\\r\\n\\r\\n       \\r\\n       [required]=\\\"model.entity.password!=null\\\" maxlength=\\\"20\\\" minlength=\\\"5\\\" [pattern]=\\\"model.entity.password\\\"  >\\r\\n    <p *ngIf=\\\"!FG_entity_passwordConfim.Write\\\">{{FG_entity_passwordConfim.Value}}</p>\\r\\n\\r\\n\\r\\n    <span *ngIf=\\\"Form.controls['Form__entity_passwordConfim'] && Form.controls['Form__entity_passwordConfim'].invalid && (Form.controls['Form__entity_passwordConfim'].dirty || Form.controls['Form__entity_passwordConfim'].touched)\\\">\\r\\n<small *ngIf=\\\"Form.controls['Form__entity_passwordConfim'].errors!.required\\\" class=\\\"form-text text-danger\\\">{{'Messages.field_required' | translate : {p0:'Columns.User__PasswordConfim' | translate } }}</small>\\r\\n<small *ngIf=\\\"Form.controls['Form__entity_passwordConfim'].errors!.minlength\\\" class=\\\"form-text text-danger\\\">{{'Messages.invalid_min_and_max_length' | translate : {p0:'20',p1:'5'} }}</small>\\r\\n<small *ngIf=\\\"Form.controls['Form__entity_passwordConfim'].errors!.maxlength\\\" class=\\\"form-text text-danger\\\">{{'Messages.invalid_min_and_max_length' | translate : {p0:'20',p1:'5'} }}</small>\\r\\n<small *ngIf=\\\"Form.controls['Form__entity_passwordConfim'].errors!.pattern\\\" class=\\\"form-text text-danger\\\">{{'Messages.invalid_field' | translate : {p0:'Columns.User__PasswordConfim' | translate } }}</small>\\r\\n</span>\\r\\n</div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        \\r\\n<div class=\\\"form-group col-md-6 \\\"\\r\\n     id=\\\"FG_entity_photo\\\"\\r\\n     #FG_entity_photo=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label>{{'Columns.User__Photo' | translate }} <span style=\\\"color:red\\\">*</span></label>\\r\\n    \\r\\n<div class=\\\"input-group\\\">\\r\\n    <label class=\\\"form-control\\\">\\r\\n        <a *ngIf=\\\"model.entity.photo\\\"\\r\\n           class=\\\"file-link\\\"\\r\\n           target=\\\"_blank\\\"\\r\\n           [routerLink]=\\\"model.entity.photo.url\\\">\\r\\n            {{model.entity.photo.name}}\\r\\n        </a>\\r\\n    </label>\\r\\n\\r\\n            <div class=\\\"input-group-btn\\\">\\r\\n                <label class=\\\"btn btn-primary\\\">\\r\\n                    <input name=\\\"photo_field\\\"\\r\\n                           type=\\\"file\\\"\\r\\n                           [(ngModel)]=\\\"photo_field\\\"\\r\\n                           [file-uploader]=\\\"Upload\\\"\\r\\n                           [(fileData)]=\\\"model.entity.photo\\\"\\r\\n                           required  \\r\\n                           style=\\\"display:none\\\">\\r\\n                    <i class=\\\"fa fa-upload\\\"></i>\\r\\n                </label>\\r\\n            </div>\\r\\n</div>\\r\\n\\r\\n    <span *ngIf=\\\"Form.controls['photo_field'] && Form.controls['photo_field'].invalid && (Form.controls['photo_field'].dirty || Form.controls['photo_field'].touched)\\\">\\r\\n<small *ngIf=\\\"Form.controls['photo_field'].errors!.required\\\" class=\\\"form-text text-danger\\\">{{'Messages.field_required' | translate : {p0:'Columns.User__Photo' | translate } }}</small>\\r\\n</span>\\r\\n</div>\\r\\n\\r\\n    </div>\\r\\n</form>\\r\\n<hr />\\r\\n\\r\\n<div class=\\\"row form-group\\\">\\r\\n<div  class=\\\"col-md-6\\\" id=\\\"UserRoles\\\" #UserRoles>\\r\\n        <label class=\\\"section-header\\\">{{'Words.UserRoles' | translate }}</label>\\r\\n    <div class=\\\"list-view\\\">\\r\\n        <div>\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of Lookups.roles\\\">\\r\\n                        <td width=\\\"25px\\\">\\r\\n                            <label class=\\\"chiller_cb\\\">\\r\\n                                <input [id]=\\\"'Form__entity_roles_'+item.id\\\"\\r\\n                                       type=\\\"checkbox\\\" [name]=\\\"'Form__entity_roles_'+item.id\\\" [(ngModel)]=\\\"item.Tag.selected\\\"                                       (change)=\\\"item.Tag.ApplyTo(model.entity.roles)\\\"\\r\\n                                       >\\r\\n                                <span></span>\\r\\n                            </label>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                            {{ item.name }}\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div></div></div>\\r\\n<hr />\\r\\n<div class=\\\"row form-group\\\">\\r\\n<div  class=\\\"col-md-12\\\" id=\\\"UserPrivileges\\\" #UserPrivileges>\\r\\n\\r\\n<label class=\\\"section-header\\\">{{'Words.Privileges' | translate }}</label>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <ul class=\\\"nav nav-tabs\\\">\\r\\n            <li *ngFor=\\\"let res of Lookups.domains\\\" [ngClass]=\\\"res.Selected?'active':null\\\">\\r\\n                <a (click)=\\\"Priv.Select(res)\\\">{{ 'Words.'+res.name | translate }}</a>\\r\\n            </li>\\r\\n        </ul>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n<form #Form=\\\"ngForm\\\" >\\r\\n        <div *ngFor=\\\"let dom of Lookups.domains\\\">\\r\\n            <div *ngIf=\\\"dom.Selected\\\" class=\\\"col-md-12\\\">\\r\\n                <table class=\\\"table table-striped text-center\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th style=\\\"width:300px;\\\">{{'Words.Resource' | translate }}</th>\\r\\n                                <th class=\\\"cursorPointer\\\" [ngClass]=\\\"GetHeaderClass('available')\\\"  >\\r\\n        {{'Words.available' | translate }}\\r\\n        <i class=\\\"fa fa-sort\\\" (click)=\\\"SortBy('available')\\\"></i>\\r\\n    </th>\\r\\n\\r\\n                                <th class=\\\"cursorPointer\\\" [ngClass]=\\\"GetHeaderClass('canViewDetails')\\\"  >\\r\\n        {{'Words.canViewDetails' | translate }}\\r\\n        <i class=\\\"fa fa-sort\\\" (click)=\\\"SortBy('canViewDetails')\\\"></i>\\r\\n    </th>\\r\\n\\r\\n                                <th class=\\\"cursorPointer\\\" [ngClass]=\\\"GetHeaderClass('canUpdate')\\\"  >\\r\\n        {{'Words.canUpdate' | translate }}\\r\\n        <i class=\\\"fa fa-sort\\\" (click)=\\\"SortBy('canUpdate')\\\"></i>\\r\\n    </th>\\r\\n\\r\\n                                <th class=\\\"cursorPointer\\\" [ngClass]=\\\"GetHeaderClass('canInsert')\\\"  >\\r\\n        {{'Words.canInsert' | translate }}\\r\\n        <i class=\\\"fa fa-sort\\\" (click)=\\\"SortBy('canInsert')\\\"></i>\\r\\n    </th>\\r\\n\\r\\n                                <th class=\\\"cursorPointer\\\" [ngClass]=\\\"GetHeaderClass('canDelete')\\\"  >\\r\\n        {{'Words.canDelete' | translate }}\\r\\n        <i class=\\\"fa fa-sort\\\" (click)=\\\"SortBy('canDelete')\\\"></i>\\r\\n    </th>\\r\\n\\r\\n\\r\\n                            <th>{{'Words.Other' | translate }}</th>\\r\\n                                <th class=\\\"cursorPointer\\\" [ngClass]=\\\"GetHeaderClass('CollectionId')\\\"  >\\r\\n        {{'Columns.RoleResource__CollectionId' | translate }}\\r\\n        <i class=\\\"fa fa-sort\\\" (click)=\\\"SortBy('CollectionId')\\\"></i>\\r\\n    </th>\\r\\n\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let r of dom.resources;let i = index\\\" (change)=\\\"Priv.ItemChanged(r)\\\">\\r\\n                            <td>{{ 'Words.'+ r.name | translate }}</td>\\r\\n                            <td  >\\r\\n    <label class=\\\"chiller_cb\\\">\\r\\n    \\r\\n    <input type=\\\"checkbox\\\"\\r\\n           [id]=\\\"'available'+i\\\"\\r\\n           [name]=\\\"'available'+i\\\"\\r\\n           [(ngModel)]=\\\"r.available\\\"\\r\\n           [li-watch]=\\\"r.Tag\\\"\\r\\n            >\\r\\n    <span></span>\\r\\n</label>\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        \\r\\n    </div>\\r\\n</td>\\r\\n                            <td  >\\r\\n    <label class=\\\"chiller_cb\\\">\\r\\n    \\r\\n    <input type=\\\"checkbox\\\"\\r\\n           [id]=\\\"'canViewDetails'+i\\\"\\r\\n           [name]=\\\"'canViewDetails'+i\\\"\\r\\n           [(ngModel)]=\\\"r.Tag.canViewDetails\\\"\\r\\n           [li-watch]=\\\"r.Tag\\\"\\r\\n            [disabled]=\\\"!r.available\\\" >\\r\\n    <span></span>\\r\\n</label>\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        \\r\\n    </div>\\r\\n</td>\\r\\n                            <td  >\\r\\n    <label class=\\\"chiller_cb\\\">\\r\\n    \\r\\n    <input type=\\\"checkbox\\\"\\r\\n           [id]=\\\"'canUpdate'+i\\\"\\r\\n           [name]=\\\"'canUpdate'+i\\\"\\r\\n           [(ngModel)]=\\\"r.Tag.canUpdate\\\"\\r\\n           [li-watch]=\\\"r.Tag\\\"\\r\\n            [disabled]=\\\"!r.available\\\" >\\r\\n    <span></span>\\r\\n</label>\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        \\r\\n    </div>\\r\\n</td>\\r\\n                            <td  >\\r\\n    <label class=\\\"chiller_cb\\\">\\r\\n    \\r\\n    <input type=\\\"checkbox\\\"\\r\\n           [id]=\\\"'canInsert'+i\\\"\\r\\n           [name]=\\\"'canInsert'+i\\\"\\r\\n           [(ngModel)]=\\\"r.Tag.canInsert\\\"\\r\\n           [li-watch]=\\\"r.Tag\\\"\\r\\n            [disabled]=\\\"!r.available\\\" >\\r\\n    <span></span>\\r\\n</label>\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        \\r\\n    </div>\\r\\n</td>\\r\\n                            <td  >\\r\\n    <label class=\\\"chiller_cb\\\">\\r\\n    \\r\\n    <input type=\\\"checkbox\\\"\\r\\n           [id]=\\\"'canDelete'+i\\\"\\r\\n           [name]=\\\"'canDelete'+i\\\"\\r\\n           [(ngModel)]=\\\"r.Tag.canDelete\\\"\\r\\n           [li-watch]=\\\"r.Tag\\\"\\r\\n            [disabled]=\\\"!r.available\\\" >\\r\\n    <span></span>\\r\\n</label>\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        \\r\\n    </div>\\r\\n</td>\\r\\n\\r\\n                            <td>\\r\\n                                <div class=\\\"form-group\\\" *ngFor=\\\"let ac of r.actions\\\">\\r\\n                                    <div class=\\\"row col-md-12\\\">\\r\\n                                        <div class=\\\"col-md-2\\\">\\r\\n                                            <label class=\\\"chiller_cb\\\">\\r\\n                                                <input type=\\\"checkbox\\\" [id]=\\\"'ac-'+ac.id\\\" [(ngModel)]=\\\"ac.Tag.selected\\\" (change)=\\\"Priv.ActionChanged(ac.Tag)\\\" />\\r\\n                                                <span></span>\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                        <label class=\\\"col-md-10\\\" [for]=\\\"'ac-'+ac.id\\\">{{ 'Words.'+ac.name | translate }}</label>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </td>\\r\\n                            <td  >\\r\\n    \\r\\n<select class=\\\"form-control\\\"\\r\\n        name=\\\"Form__collectionId{{i}}\\\" \\r\\n        [li-watch]=\\\"r\\\"\\r\\n        [(ngModel)]=\\\"r.collectionId\\\"\\r\\n        required  >\\r\\n    <option *ngFor=\\\"let item of r.collections\\\" [ngValue]=\\\"item.id\\\">{{item.name}}</option>\\r\\n</select>\\r\\n\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        <div class=\\\"cell-validation\\\" *ngIf=\\\"Form.controls['Form__collectionId'+i+''] && Form.controls['Form__collectionId'+i+''].invalid && Form.controls['Form__collectionId'+i+''].touched\\\">\\r\\n    <i class=\\\"fa fa-exclamation-circle redColor\\\"></i>\\r\\n    <div class=\\\"messages\\\">\\r\\n        <small *ngIf=\\\"Form.controls['Form__collectionId'+i+''].errors!.required\\\" class=\\\"form-text text-danger\\\">{{'Messages.field_required' | translate : {p0:'Columns.RoleResource__CollectionId' | translate } }}</small>\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n    </div>\\r\\n</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n        </div>\\r\\n</form>\\r\\n</div></div></div>\\r\\n\\r\\n\\r\\n\\r\\n        \\r\\n        <div class=\\\"row submit-buttons\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"pull-last\\\">\\r\\n                    \\r\\n        <button class=\\\"btn btn-primary\\\"\\r\\n            [disabled]=\\\"!CanSubmit\\\"\\r\\n            (click)=\\\"Submit()\\\">\\r\\n        {{'Words.Save' | translate }}\\r\\n    </button>\\r\\n\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div style='display:none' #lookupOptionsContainer values='{\\\"apps\\\":\\\"C0\\\",\\\"roles\\\":\\\"C0\\\",\\\"domains\\\":\\\"C0\\\",\\\"r.collections\\\":\\\"C0\\\"}'></div>\\r\\n<div style='display:none' #viewParamsContainer values='{\\\"ModelType\\\":null,\\\"AddUrl\\\":null,\\\"EditUrl\\\":null,\\\"DetailsUrl\\\":null,\\\"ListUrl\\\":\\\"/Auth/Users/UserList\\\",\\\"Fields\\\":[],\\\"Other\\\":{}}'></div>\";","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { CodeShellModule } from \"codeshell/codeShellModule\";\r\nimport { SharedModule } from \"../Shared/SharedModule\";\r\nimport { Registry } from \"codeshell/core\";\r\nimport { AuthFilter, ResourceActions } from \"codeshell/security\";\r\n\r\nimport { ServerConfigBase } from \"codeshell/core\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { TestPage } from \"./TestPage\";\n\r\n\r\n@NgModule({\r\n    declarations: [TestPage,],\r\n    exports: [TestPage,],\r\n    imports: [\r\n\t\tSharedModule,\r\n        RouterModule.forChild([\r\n\t\t\t﻿{ path : \"TestPage\", component : TestPage, canActivate: [AuthFilter], data: { name : \"Testing__TestPage\", navigate: false, resource:\"\", action: \"allowAll\", apps:null }},\n\r\n\t\t])\r\n    ]\r\n})\r\nexport class TestingModule {\r\n\r\n    constructor(trans: TranslateService, conf: ServerConfigBase) {\r\n        trans.setDefaultLang(conf.Locale);\r\n        trans.use(conf.Locale);\r\n    }\r\n}\r\n\r\nRegistry.Register(\"Testing/TestPage\", TestPage);\n","import { Component } from \"@angular/core\";\r\nimport { TestBase } from \"BaseApp/Testing/TestBase\";\r\n\r\n@Component({ template: require('./TestPage.html'), selector : \"testPage\" })\r\nexport class TestPage extends TestBase {\r\n\tpublic GetPageId() : number { return 2013773514000; }\r\n}","import { BaseComponent } from \"codeshell/baseComponents\";\r\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport abstract class TestBase extends BaseComponent {\r\n\t\r\n}","module.exports = \"<div class=\\\"page-header\\\" [ngClass]=\\\"IsEmbedded?'section-header':'container-fluid'\\\" *ngIf=\\\"!HideHeader\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-5 col-xs-12\\\" *ngIf=\\\"!IsEmbedded\\\">\\r\\n            <h2>{{'Pages.Testing__TestPage' | translate }}<span *ngIf=\\\"HeaderExtra\\\"> - {{HeaderExtra}}</span></h2>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-7 col-xs-12\\\" *ngIf=\\\"!IsEmbedded\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n                <div class=\\\"col-md-12 col-xs-12 padTop padBottom\\\">\\r\\n                    <div class=\\\"pull-last btn-group\\\">\\r\\n\\r\\n                        \\r\\n                        \\r\\n    <button class=\\\"btn btn-info margin-sides\\\"\\r\\n            (click)=\\\"Refresh()\\\"\\r\\n            \\r\\n            >\\r\\n        <i class=\\\"fa fa-redo\\\"></i> \\r\\n    </button>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"IsEmbedded\\\" class=\\\"container-fluid\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-8\\\">\\r\\n                    {{'Pages.Testing__TestPage' | translate }}<span *ngIf=\\\"HeaderExtra\\\"> - {{HeaderExtra}}</span>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-4\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"!IsEmbedded\\\">\\r\\n\\r\\n        <ol class=\\\"breadcrumb\\\">\\r\\n            <li>\\r\\n                <a routerLink=\\\"'/'\\\">{{'Words.Main' | translate }}</a>\\r\\n            </li>\\r\\n            <li>\\r\\n                {{'Pages.Testing__TestPage' | translate }}\\r\\n            </li>\\r\\n        </ol>\\r\\n    </div>\\r\\n</div><div [ngClass]=\\\"IsEmbedded?'panel panel-default embedded':'animated fadeInRight'\\\">\\r\\n\\r\\n    <div [ngClass]=\\\"IsEmbedded?'panel-body':'container-fluid content-block'\\\">\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"UseLocalization\\\">\\r\\n            <div class=\\\"col-xs-12 col-md-6 col-xs-offset-0 col-md-offset-6 padBottom\\\">\\r\\n                <div class=\\\"btn-group btn-group-sm pull-last\\\">\\r\\n                        <button class=\\\"btn btn-sm\\\" [ngClass]=\\\"CurrentLang=='ar'?'btn-primary':'btn-default'\\\" (click)=\\\"CurrentLang='ar'\\\">\\r\\n                            {{'Words.ar' | translate }}\\r\\n                        </button>\\r\\n                        <button class=\\\"btn btn-sm\\\" [ngClass]=\\\"CurrentLang=='en'?'btn-primary':'btn-default'\\\" (click)=\\\"CurrentLang='en'\\\">\\r\\n                            {{'Words.en' | translate }}\\r\\n                        </button>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        <form #Form=\\\"ngForm\\\" >\\n\\r\\n<div class=\\\"row form-group\\\"\\r\\n     id=\\\"FG_description\\\"\\r\\n     #FG_description=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label class=\\\"col-sm-3 control-label\\\">\\r\\n        {{'Columns.Role__Description' | translate }}\\r\\n    </label>\\r\\n    <div class=\\\"col-sm-9\\\">\\r\\n        <quill-editor  [modules]=\\\"quillConfig\\\"              [(ngModel)]=\\\"model.description\\\"\\r\\n              name=\\\"Form__description\\\"\\r\\n              placeholder=\\\"{{'Columns.Role__Description' | translate }}\\\"\\r\\n               ></quill-editor>\\r\\n\\r\\n        \\r\\n    </div>\\r\\n</div>\\r\\n</form>\\r\\n\\r\\n        \\r\\n        <div class=\\\"row submit-buttons\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"pull-last\\\">\\r\\n                    \\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\n<div style='display:none' #lookupOptionsContainer values=''></div>\\n<div style='display:none' #viewParamsContainer values='{\\\"ModelType\\\":null,\\\"AddUrl\\\":null,\\\"EditUrl\\\":null,\\\"DetailsUrl\\\":null,\\\"ListUrl\\\":null,\\\"Fields\\\":[],\\\"Other\\\":{}}'></div>\";"],"sourceRoot":""}