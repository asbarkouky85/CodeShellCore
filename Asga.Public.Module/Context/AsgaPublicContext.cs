using System;using CodeShellCore.EntityFramework;
using Microsoft.EntityFrameworkCore;using Microsoft.EntityFrameworkCore.Metadata;namespace Asga.Public{    public partial class AsgaPublicContext : CodeShellDbContext<AsgaPublicContext>    {        public AsgaPublicContext(DbContextOptions<AsgaPublicContext> options)            : base(options)        {        }        public virtual DbSet<Attachment> Attachments { get; set; }        public virtual DbSet<HomeSlide> HomeSlides { get; set; }        public virtual DbSet<Message> Messages { get; set; }        public virtual DbSet<MessageType> MessageTypes { get; set; }        public virtual DbSet<PublicContent> PublicContents { get; set; }        protected override void OnModelCreating(ModelBuilder modelBuilder)        {            modelBuilder.Entity<Attachment>(entity =>            {                entity.Property(e => e.EntityType).IsUnicode(false);                entity.Property(e => e.FileType).IsUnicode(false);            });            modelBuilder.Entity<Message>(entity =>            {                entity.Property(e => e.Email).IsUnicode(false);                entity.Property(e => e.Phone).IsUnicode(false);                entity.Property(e => e.ReferenceEntity).IsUnicode(false);                entity.HasOne(d => d.MessageType)                    .WithMany(p => p.Messages)                    .HasForeignKey(d => d.MessageTypeId)                    .OnDelete(DeleteBehavior.ClientSetNull)                    .HasConstraintName("FK_Messages_MessageTypes");            });            modelBuilder.Entity<MessageType>(entity =>            {                entity.Property(e => e.Id).ValueGeneratedNever();            });            modelBuilder.Entity<PublicContent>(entity =>            {                entity.Property(e => e.Code).IsUnicode(false);                entity.Property(e => e.Locale).IsUnicode(false);            });        }    }}