using System;using System.Collections.Generic;using System.ComponentModel.DataAnnotations;using System.ComponentModel.DataAnnotations.Schema;namespace Asga.Auth{    [Table("Users", Schema = "Auth")]    public partial class User : Asga.AsgaModelBase, Asga.IAsgaModel    {        public User()        {            TenantAppUsers = new HashSet<TenantAppUser>();            UserParties = new HashSet<UserParty>();            UserRoles = new HashSet<UserRole>();        }        public long Id { get; set; }        [StringLength(150)]        public string DisplayName { get; set; }        [StringLength(50)]        public string LogonName { get; set; }        [StringLength(100)]        public string Password { get; set; }        public long? CustomerId { get; set; }        public int UserType { get; set; }        [StringLength(100)]        public string FirstName { get; set; }        [StringLength(100)]        public string LastName { get; set; }        [StringLength(300)]        public string Photo { get; set; }        public bool? Gender { get; set; }        [Column(TypeName = "datetime")]        public DateTime? BirthDate { get; set; }        public bool IsActive { get; set; }        [Column(TypeName = "datetime")]        public DateTime? CreatedOn { get; set; }        [Column(TypeName = "datetime")]        public DateTime? UpdatedOn { get; set; }        public long? CreatedBy { get; set; }        public long? UpdatedBy { get; set; }        public long? TenantId { get; set; }        [StringLength(200)]        public string Email { get; set; }        public bool IsDeleted { get; set; }        public string CustomerLogo { get; set; }        [ForeignKey("TenantId")]        [InverseProperty("Users")]		[System.Runtime.Serialization.IgnoreDataMember]        public Tenant Tenant { get; set; }        [InverseProperty("User")]        public ICollection<TenantAppUser> TenantAppUsers { get; set; }        [InverseProperty("User")]        public ICollection<UserParty> UserParties { get; set; }        [InverseProperty("User")]        public ICollection<UserRole> UserRoles { get; set; }    }}