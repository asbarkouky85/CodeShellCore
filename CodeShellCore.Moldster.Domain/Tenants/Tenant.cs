using CodeShellCore.Data.Lookups;
using CodeShellCore.Files;
using CodeShellCore.Moldster.Localization;
using CodeShellCore.Moldster.Pages;
using CodeShellCore.Moldster.Resources;
using System;using System.Collections.Generic;using System.ComponentModel.DataAnnotations;using System.ComponentModel.DataAnnotations.Schema;namespace CodeShellCore.Moldster.Tenants{    public partial class Tenant : MoldsterModelBase, IMoldsterModel,INamed<long>    {        public Tenant()        {            Apps = new HashSet<App>();            CustomTexts = new HashSet<CustomText>();            Pages = new HashSet<Page>();            ResourceActions = new HashSet<ResourceAction>();        }        public long Id { get; set; }        [Required]        [StringLength(100)]        public string Code { get; set; }        [Required]        [StringLength(200)]        public string Name { get; set; }        [Column(TypeName = "ntext")]        public string Description { get; set; }        [Column(TypeName = "datetime")]        public DateTime? CreatedOn { get; set; }        [Column(TypeName = "datetime")]        public DateTime? UpdatedOn { get; set; }        [Column(TypeName = "text")]        public string ConnectionString { get; set; }        public long? CreatedBy { get; set; }        public long? UpdatedBy { get; set; }        public bool IsActive { get; set; }        [StringLength(300)]        public string Logo { get; set; }        [StringLength(300)]        public string MainComponentBase { get; set; }        [StringLength(100)]        public string BaseStyle { get; set; }        [StringLength(100)]        public string Version { get; set; }        public long? ParentId { get; set; }        public bool UseParentUI { get; set; }        [InverseProperty("Tenant")]        public ICollection<App> Apps { get; set; }        [InverseProperty("Tenant")]        public ICollection<CustomText> CustomTexts { get; set; }        [InverseProperty("Tenant")]        public ICollection<Page> Pages { get; set; }        [InverseProperty("Tenant")]        public ICollection<ResourceAction> ResourceActions { get; set; }    }}