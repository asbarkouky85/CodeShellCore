{"version":3,"sources":["..\\..\\./ClientApp/app/PageCategories/PageCategoriesTreeList.ts","..\\..\\./ClientApp/app/Tenants/TenantsModule.ts","..\\..\\./Core/Example/Tenants/TenantListBase.ts","..\\..\\./Core/Example/Http/ServerGenerationService.ts","..\\..\\./ClientApp/app/Tenants/TenantList.html","..\\..\\./ClientApp/app/Tenants/TenantCreate.ts","..\\..\\./Core/Example/Tenants/TenantCreateBase.ts","..\\..\\./Core/Example/Http/SqlCommandsService.ts","..\\..\\./Core/Example/Http/ConfigPagesService.ts","..\\..\\./ClientApp/app/Tenants/TenantCreate.html","..\\..\\./ClientApp/app/Tenants/TenantDetails.ts","..\\..\\./ClientApp/app/Tenants/TenantDetails.html","..\\..\\./ClientApp/app/Domains/DomainsModule.ts","..\\..\\./ClientApp/app/Pages/PagesModule.ts","..\\..\\./ClientApp/app/Pages/PageTreeList.ts","..\\..\\./Core/Example/Pages/PageTreeListBase.ts","..\\..\\./Core/Example/TenantComponentBase.ts","..\\..\\./ClientApp/app/Pages/PageTreeList.html","..\\..\\./ClientApp/app/Pages/PageCreate.ts","..\\..\\./Core/Example/Pages/PageCreateBase.ts","..\\..\\./ClientApp/app/Pages/PageCreate.html","..\\..\\./ClientApp/app/Pages/PageEdit.ts","..\\..\\./ClientApp/app/Pages/PageEdit.html","..\\..\\./ClientApp/app/PageCategories/PageCategoriesModule.ts","..\\..\\./ClientApp/app/Tenants/TenantList.ts","..\\..\\./Core/Example/PageCategories/PageCategoriesTreeListBase.ts","..\\..\\./ClientApp/app/PageCategories/PageCategoriesTreeList.html","..\\..\\./ClientApp/app/PageCategories/PageCategoryEdit.ts","..\\..\\./Core/Example/PageCategories/PageCategoryEditBase.ts","..\\..\\./ClientApp/app/PageCategories/PageCategoryEdit.html","..\\..\\./ClientApp/app/NavigationGroups/NavigationGroupsModule.ts","..\\..\\./ClientApp/app/NavigationGroups/NavGroupPages.ts","..\\..\\./Core/Example/NavigationGroups/NavGroupPagesBase.ts","..\\..\\./ClientApp/app/NavigationGroups/NavGroupPages.html","..\\..\\./ClientApp/app/PageControls/PageControlsModule.ts","..\\..\\./ClientApp/app/PageControls/PageCustomization.ts","..\\..\\./Core/Example/PageControls/PageControlListBase.ts","..\\..\\./Core/Example/Enumerations.ts","..\\..\\./ClientApp/app/PageControls/PageCustomization.html","..\\..\\./ClientApp/app/Generations/GenerationsModule.ts","..\\..\\./ClientApp/app/Generations/GenerationNotification.ts","..\\..\\./Core/Example/Generations/GenerationNotificationBase.ts","..\\..\\./Core/Example/Http/BuilderService.ts","..\\..\\./ClientApp/app/Generations/GenerationNotification.html","..\\..\\./ClientApp/app/Resources/ResourcesModule.ts","..\\..\\./ClientApp/app/Resources/ResourceList.ts","..\\..\\./Core/Example/Resources/ResourceListBase.ts","..\\..\\./ClientApp/app/Resources/ResourceList.html"],"names":[],"mappings":"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","file":"ClientApp.css","sourcesContent":["import { Component } from \"@angular/core\";\r\nimport { PageCategoriesTreeListBase } from \"Example/PageCategories/PageCategoriesTreeListBase\";\r\n\r\n@Component({ template: require('./PageCategoriesTreeList.html'), selector : \"pageCategoriesTreeList\" })\r\nexport class PageCategoriesTreeList extends PageCategoriesTreeListBase {\r\n\tpublic GetPageId() : number { return 1935659471000; }\r\n\tpublic get CollectionId(): string | null { return null; }\r\n}","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { CodeShellModule } from \"codeshell/codeShellModule\";\r\nimport { SharedModule } from \"../Shared/SharedModule\";\r\nimport { Registry } from \"codeshell/core\";\r\nimport { AuthFilter, ResourceActions } from \"codeshell/security\";\r\n\r\nimport { ServerConfigBase } from \"codeshell/core\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { TenantList } from \"./TenantList\";\nimport { TenantCreate } from \"./TenantCreate\";\nimport { TenantDetails } from \"./TenantDetails\";\n\r\n\r\n@NgModule({\r\n    declarations: [TenantList,TenantCreate,TenantDetails,],\r\n    exports: [TenantList,TenantCreate,TenantDetails,],\r\n    imports: [\r\n\t\tSharedModule,\r\n        RouterModule.forChild([\r\n\t\t\t﻿{ path : \"TenantList\", component : TenantList, canActivate: [AuthFilter], data: { name : \"Tenants__TenantList\", navigate: false, resource:\"\", action: \"anonymous\", apps:null }},\n\t\t\t﻿{ path : \"TenantCreate\", component : TenantCreate, canActivate: [AuthFilter], data: { name : \"Tenants__TenantCreate\", navigate: false, resource:\"\", action: \"allowAll\", apps:null }},\n\t\t\t﻿{ path : \"TenantDetails/:id\", component : TenantDetails, canActivate: [AuthFilter], data: { name : \"Tenants__TenantDetails\", navigate: false, resource:\"\", action: \"allowAll\", apps:null }},\n\r\n\t\t])\r\n    ]\r\n})\r\nexport class TenantsModule {\r\n\r\n    constructor(trans: TranslateService, conf: ServerConfigBase) {\r\n        trans.setDefaultLang(conf.Locale);\r\n        trans.use(conf.Locale);\r\n    }\r\n}\r\n\r\nRegistry.Register(\"Tenants/TenantList\", TenantList);\nRegistry.Register(\"Tenants/TenantCreate\", TenantCreate);\nRegistry.Register(\"Tenants/TenantDetails\", TenantDetails);\n","import { ListComponentBase } from \"codeshell/baseComponents\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { TenantsService } from \"Example/Http\";\r\nimport { Shell } from \"codeshell/core\";\r\nimport { ComponentRequest, Utils } from \"../../codeshell/helpers\";\r\nimport { TenantCreateBase } from \"./TenantCreateBase\";\r\nimport { OutPutListener } from \"../Http/OutPutListener\";\r\nimport { ServerGenerationService } from \"Example/Http/ServerGenerationService\";\r\nimport { GenerationInofBase } from \"Example/Generations/GenerationInofBase\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\n\r\n@Injectable()\r\nexport abstract class TenantListBase extends ListComponentBase{\r\n    get Service(): TenantsService { return Shell.Injector.get(TenantsService); }\r\n    Gen: ServerGenerationService = new ServerGenerationService();\r\n    Listner = new OutPutListener(true);\r\n    current: string | null | undefined = null;\r\n    modal?: GenerationInofBase;\r\n    url?: string;\r\n\r\n    constructor(rt: ActivatedRoute) {\r\n        super(rt);\r\n        this.Listner.SendMessage.subscribe((d: any) => {\r\n            if (this.modal)\r\n                this.modal.AddMessage(d);\r\n        })\r\n    }\r\n\r\n    ngOnInit() {\r\n        super.ngOnInit();\r\n        this.Gen.GetActivePreview().then(d => {\r\n            this.current = d.tenantCode;\r\n            this.url = d.url as string;\r\n        });\r\n        \r\n    }\r\n\r\n    async GetNotifier(): Promise<GenerationInofBase> {\r\n        var req: ComponentRequest<GenerationInofBase> = { Identifier: \"ServerTrace\" }\r\n        this.modal = await this.GetComponent(req);\r\n        return this.modal;\r\n    }\r\n\r\n    StartPreview(model: any) {\r\n        this.GetNotifier().then(d => {\r\n            this.modal = d;\r\n            d.Clear();\r\n            d.Show = true;\r\n            this.Listner.Start().then(d => {\r\n                this.Gen.connectionId = d;\r\n                this.Gen.StartTenantPreview({ tenantCode: model.code }).then(d => {\r\n                    this.url = \"\";\r\n                    if (d.data.Url) {\r\n                        this.url = d.data.Url;\r\n                        this.Open();\r\n                    }\r\n                        \r\n                    this.current = model.code;\r\n\r\n                }).catch(er => {\r\n                    Utils.HandleError(er, true);\r\n                })\r\n            })\r\n\r\n        })\r\n    }\r\n\r\n    StopPreview() {\r\n        this.GetNotifier().then(comp => {\r\n            comp.Show = true;\r\n            comp.Clear();\r\n            this.Listner.Start().then(res => {\r\n                this.Gen.connectionId = res;\r\n                this.Gen.StopPreview().then(d => this.current = null);\r\n            })\r\n        })\r\n        \r\n    }\r\n\r\n    Open() {\r\n        if (this.url)\r\n            window.open(this.url);\r\n    }\r\n\r\n    isActive_change(model: any) {\r\n        this.Service.Update(\"Put\", model);\r\n    }\r\n}","import { ConfigHttpService } from \"./ConfigHttpService\";\r\nimport { ServerConfig } from \"Example/ServerConfig\";\r\nimport { SubmitResult } from \"codeshell/helpers\";\r\nimport { RenderDTO, DbCreationRequest, PreviewData } from \"Example/Dtos\";\r\n\r\nexport class ServerGenerationService extends ConfigHttpService {\r\n\r\n    get BaseUrl() {\r\n        return this.CurrentAppUrl + \"/apiAction/Generation\";\r\n    }\r\n\r\n    ProcessForPage(pageId: number): Promise<SubmitResult> {\r\n\r\n        return this.Get(\"ProcessForPage\", { pageId: pageId })\r\n    }\r\n\r\n    RenderPage(pageId: number): Promise<SubmitResult> {\r\n        return this.Get(\"RenderPage/\" + pageId);\r\n    }\r\n\r\n    Render(dto: RenderDTO): Promise<SubmitResult> {\r\n        return this.PostAs<SubmitResult>(\"Render\", dto);\r\n    }\r\n\r\n    Process(dto: RenderDTO): Promise<SubmitResult> {\r\n        return this.PostAs<SubmitResult>(\"Process\", dto);\r\n    }\r\n\r\n    RenderTenant(dto: RenderDTO) {\r\n        return this.PostAs<SubmitResult>(\"RenderTenant\", dto);\r\n    }\r\n\r\n    ModuleDefinition(dto: RenderDTO) {\r\n        return this.PostAs<SubmitResult>(\"ModuleDefinition\", dto);\r\n    }\r\n\r\n    SyncTenants(sourceTenant: number, targetTenant: number): Promise<SubmitResult> {\r\n        return this.PostAs<SubmitResult>(\"SyncTenants\", { id1: sourceTenant, id2: targetTenant })\r\n    }\r\n\r\n    PublishTenant(req: DbCreationRequest): Promise<SubmitResult> {\r\n        return this.PostAs<SubmitResult>(\"PublishTenant\", req);\r\n    }\r\n\r\n    CollectTemplateData(id: number): Promise<SubmitResult> {\r\n        return this.PostAs<SubmitResult>(\"CollectTemplateData/\" + id, {});\r\n    }\r\n\r\n    StartTenantPreview(req: DbCreationRequest): Promise<SubmitResult> {\r\n        return this.PostAs<SubmitResult>(\"StartTenantPreview\", req);\r\n    }\r\n\r\n    StopPreview(): Promise<SubmitResult> {\r\n        return this.Get(\"StopPreview\");\r\n    }\r\n\r\n    GetActivePreview(): Promise<PreviewData> {\r\n        return this.GetAs<PreviewData>(\"GetActivePreview\");\r\n    }\r\n\r\n    \r\n}","module.exports = \"<div class=\\\"page-header container-fluid\\\" *ngIf=\\\"!IsEmbedded !HideHeader\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-5 col-xs-12\\\">\\r\\n            <h2>{{'Pages.Tenants__TenantList' | translate }}<span *ngIf=\\\"HeaderExtra\\\"> - {{HeaderExtra}}</span></h2>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-7 col-xs-12\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n                <div class=\\\"col-md-12 col-xs-12 padTop padBottom\\\">\\r\\n                    <div class=\\\"pull-last btn-group\\\">\\r\\n\\r\\n                        \\r\\n    <a class=\\\"btn btn-success\\\"\\r\\n       [routerLink]=\\\"'/Tenants/TenantCreate'\\\"\\r\\n        *ngIf=\\\"Permission.insert\\\"\\r\\n       >\\r\\n        <i class=\\\"fa fa-plus\\\"></i> {{'Words.AddEntity' | translate : {p0:'Words.Tenant' | translate } }}\\r\\n    </a>\\r\\n\\r\\n                        \\r\\n    <button class=\\\"btn btn-info margin-sides\\\"\\r\\n            (click)=\\\"Refresh()\\\"\\r\\n            \\r\\n            >\\r\\n        <i class=\\\"fa fa-redo\\\"></i> \\r\\n    </button>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"!IsEmbedded\\\">\\r\\n\\r\\n        <ol class=\\\"breadcrumb\\\">\\r\\n            <li>\\r\\n                <a routerLink=\\\"'/'\\\">{{'Words.Main' | translate }}</a>\\r\\n            </li>\\r\\n            <li>\\r\\n                {{'Pages.Tenants__TenantList' | translate }}\\r\\n            </li>\\r\\n        </ol>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-header section-header\\\" *ngIf=\\\"IsEmbedded && !HideHeader\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-8\\\">\\r\\n                {{'Pages.Tenants__TenantList' | translate }}<span *ngIf=\\\"HeaderExtra\\\"> - {{HeaderExtra}}</span>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n\\r\\n    <a class=\\\"btn btn-success buttonGra-sm\\\"\\r\\n       [routerLink]=\\\"'/Tenants/TenantCreate'\\\"\\r\\n        *ngIf=\\\"Permission.insert\\\"\\r\\n       >\\r\\n        <i class=\\\"fa fa-plus\\\"></i> {{'Words.AddEntity' | translate : {p0:'Words.Tenant' | translate } }}\\r\\n    </a>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div [ngClass]=\\\"IsEmbedded?'panel panel-default embedded body':'animated fadeInRight'\\\">\\r\\n    <div [ngClass]=\\\"IsEmbedded?'panel-body':'container-fluid content-block'\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-4\\\" style=\\\"padding: 10px 24px;color:#9B9B9B\\\">\\r\\n                <span><b>{{'Words.Count' | translate }}</b> : <span style=\\\"color:#9B9B9B\\\">{{totalCount}}</span></span>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-8\\\">\\r\\n                <search-group (termChange)=\\\"HeaderSearch($event)\\\"></search-group>\\r\\n            </div>\\r\\n        </div>\\r\\n        <paginate [showing]=\\\"options.Showing\\\" [total-count]=\\\"totalCount\\\" [max-pages]=\\\"10\\\" [(currentPage)]=\\\"pageIndex\\\" (pageChange)=\\\"PageSelected($event)\\\"></paginate>\\r\\n\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n            \\r\\n\\r\\n<table class=\\\"table table-striped\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n                <th class=\\\"cursorPointer\\\" [ngClass]=\\\"GetHeaderClass('Code')\\\" style='width:150px' >\\r\\n        {{'Columns.Tenant__Code' | translate }}\\r\\n        <i class=\\\"fa fa-sort\\\" (click)=\\\"SortBy('Code')\\\"></i>\\r\\n    </th>\\r\\n\\r\\n                <th class=\\\"cursorPointer\\\" [ngClass]=\\\"GetHeaderClass('Name')\\\"  >\\r\\n        {{'Columns.Tenant__Name' | translate }}\\r\\n        <i class=\\\"fa fa-sort\\\" (click)=\\\"SortBy('Name')\\\"></i>\\r\\n    </th>\\r\\n\\r\\n\\r\\n                <th class=\\\"cursorPointer\\\" [ngClass]=\\\"GetHeaderClass('Version')\\\"  >\\r\\n        {{'Columns.Tenant__Version' | translate }}\\r\\n        <i class=\\\"fa fa-sort\\\" (click)=\\\"SortBy('Version')\\\"></i>\\r\\n    </th>\\r\\n\\r\\n                <th class=\\\"cursorPointer\\\" [ngClass]=\\\"GetHeaderClass('IsActive')\\\"  >\\r\\n        {{'Columns.Tenant__IsActive' | translate }}\\r\\n        <i class=\\\"fa fa-sort\\\" (click)=\\\"SortBy('IsActive')\\\"></i>\\r\\n    </th>\\r\\n\\r\\n            <th style=\\\"width:150px\\\"></th>\\r\\n            <th></th>\\r\\n                <th class=\\\"cursorPointer\\\" [ngClass]=\\\"GetHeaderClass('CreatedOn')\\\"  >\\r\\n        {{'Columns.Tenant__CreatedOn' | translate }}\\r\\n        <i class=\\\"fa fa-sort\\\" (click)=\\\"SortBy('CreatedOn')\\\"></i>\\r\\n    </th>\\r\\n\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let model of list;let i=index\\\">\\r\\n            <td  >\\r\\n    {{model.code}}\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        \\r\\n    </div>\\r\\n</td>\\r\\n            <td  >\\r\\n    {{model.name}}\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        \\r\\n    </div>\\r\\n</td>\\r\\n            <td  >\\r\\n    {{model.version}}\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        \\r\\n    </div>\\r\\n</td>\\r\\n            <td  >\\r\\n    <label class=\\\"chiller_cb\\\">\\r\\n    \\r\\n    <input type=\\\"checkbox\\\"\\r\\n           [id]=\\\"'active'+i\\\"\\r\\n           [name]=\\\"'active'+i\\\"\\r\\n           [(ngModel)]=\\\"model.isActive\\\"\\r\\n           [li-watch]=\\\"model.Tag\\\"\\r\\n            (change)=\\\"isActive_change(model)\\\">\\r\\n    <span></span>\\r\\n</label>\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        \\r\\n    </div>\\r\\n</td>\\r\\n            <td>\\r\\n                <div class=\\\"btn-group btnResponsive \\\">\\r\\n\\r\\n            <a *ngIf=\\\"Permission.details\\\" class=\\\"btn btn-primary btn-sm\\\" [routerLink]=\\\"'/Tenants/TenantDetails/' +model.id\\\">\\r\\n                <i class=\\\"fa fa-copy\\\"></i>\\r\\n            </a>\\r\\n\\r\\n                <a *ngIf=\\\"Permission.delete\\\" class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"Delete(model,model.id)\\\">\\r\\n                <i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            </a>\\r\\n\\r\\n</div>\\r\\n            </td>\\r\\n            <td>\\r\\n                <div class=\\\"btn-group\\\">\\r\\n                    \\r\\n    <button class=\\\"btn btn-info\\\"\\r\\n            (click)=\\\"StartPreview(model)\\\"\\r\\n             *ngIf=\\\"current==null\\\"\\r\\n            >\\r\\n        <i class=\\\"fa fa-image\\\"></i> {{'Words.Preview' | translate }}\\r\\n    </button>\\r\\n\\r\\n                    \\r\\n    <button class=\\\"btn btn-success\\\"\\r\\n            (click)=\\\"Open()\\\"\\r\\n             *ngIf=\\\"current==model.code\\\"\\r\\n            >\\r\\n        <i class=\\\"fa fa-image\\\"></i> {{'Words.View' | translate }}\\r\\n    </button>\\r\\n\\r\\n                    \\r\\n    <button class=\\\"btn btn-danger\\\"\\r\\n            (click)=\\\"StopPreview()\\\"\\r\\n             *ngIf=\\\"current==model.code\\\"\\r\\n            >\\r\\n        <i class=\\\"fa fa-square\\\"></i> {{'Words.Stop' | translate }}\\r\\n    </button>\\r\\n\\r\\n\\r\\n                </div>\\r\\n            </td>\\r\\n            <td  >\\r\\n    {{model.createdOn | date : &#x27;dd/MM/yyyy hh:mm a&#x27;}}\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        \\r\\n    </div>\\r\\n</td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <paginate [showing]=\\\"options.Showing\\\" [total-count]=\\\"totalCount\\\" [max-pages]=\\\"10\\\" [(currentPage)]=\\\"pageIndex\\\" (pageChange)=\\\"PageSelected($event)\\\"></paginate>\\r\\n    </div>\\r\\n\\r\\n</div>\\n<div style='display:none' #lookupOptionsContainer values=''></div>\\n<div style='display:none' #viewParamsContainer values='{\\\"ModelType\\\":null,\\\"AddUrl\\\":\\\"/Tenants/TenantCreate\\\",\\\"EditUrl\\\":null,\\\"DetailsUrl\\\":\\\"/Tenants/TenantDetails\\\",\\\"ListUrl\\\":null,\\\"Fields\\\":[],\\\"Other\\\":{\\\"ServerTrace\\\":\\\"Generations/ServerTracerModal\\\"}}'></div>\";","import { Component } from \"@angular/core\";\r\nimport { TenantCreateBase } from \"Example/Tenants/TenantCreateBase\";\r\n\r\n@Component({ template: require('./TenantCreate.html'), selector : \"tenantCreate\" })\r\nexport class TenantCreate extends TenantCreateBase {\r\n\tpublic GetPageId() : number { return 2005463214000; }\r\n\tpublic get CollectionId(): string | null { return null; }\r\n}","import { EditComponentBase, DTOEditComponentBase } from \"codeshell/baseComponents\";\r\nimport { Injectable, ViewChild } from \"@angular/core\";\r\nimport { TenantsService } from \"Example/Http\";\r\nimport { Shell } from \"codeshell/core\";\r\nimport { GenerationInofBase } from \"Example/Generations/GenerationInofBase\";\r\nimport { SqlCommandsService } from \"Example/Http/SqlCommandsService\";\r\nimport { OutPutListener } from \"Example/Http/OutPutListener\";\r\nimport { Utils, ComponentRequest } from \"codeshell/helpers\";\r\nimport { PageCategoryCreateBase } from \"Example/PageCategories/PageCategoryCreateBase\";\r\nimport { combineLatest } from \"rxjs\";\r\nimport { forEach } from \"@angular/router/src/utils/collection\";\r\nimport { ServerGenerationService } from \"Example/Http/ServerGenerationService\";\r\nimport { ConfigPagesService } from \"Example/Http/ConfigPagesService\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\n\r\n@Injectable()\r\nexport abstract class TenantCreateBase extends DTOEditComponentBase {\r\n    get Service(): TenantsService { return Shell.Injector.get(TenantsService); }\r\n    Sql = new SqlCommandsService();\r\n    Gen = new ServerGenerationService();\r\n    Pag = new ConfigPagesService();\r\n    Listener = new OutPutListener(true);\r\n\r\n    @ViewChild(\"OutputListener\")\r\n    OutputListener?: GenerationInofBase;\r\n\r\n    LoadLookups = true;\r\n    environments: any[] = [];\r\n    databases: any[] = [];\r\n\r\n    async LoadLookupsAsync(opts: any): Promise<any> {\r\n        this.environments = await this.Sql.GetEnvironments();\r\n        return {};\r\n    }\r\n\r\n    constructor(rt: ActivatedRoute) {\r\n        super(rt);\r\n        this.Listener.SendMessage.subscribe((d: any) => {\r\n\r\n            if (this.OutputListener)\r\n                this.OutputListener.AddMessage(d);\r\n        });\r\n    }\r\n\r\n    DefaultModel() {\r\n        return {\r\n            entity: {\r\n                mainComponentBase: \"AppComponent\"\r\n            }\r\n        }\r\n    }\r\n\r\n    OnReady() {\r\n        if (this.OutputListener) {\r\n            this.OutputListener.HideHeader = true;\r\n        }\r\n\r\n    }\r\n\r\n    env_change() {\r\n        this.databases = [];\r\n        if (this.model.environment) {\r\n            var env = this.environments.find(d => d.name == this.model.environment);\r\n            if (env) {\r\n                for (var d of env.databases) {\r\n                    this.databases.push({ name: d });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    SelectTemplate() {\r\n        var req: ComponentRequest<PageCategoryCreateBase> = {\r\n            Identifier: \"SelectTemplateModel\"\r\n        }\r\n        this.GetComponent(req).then(comp => {\r\n            comp.StartAsync().then(d => {\r\n                comp.Show = true;\r\n                comp.OnOk = d => {\r\n                    this.model.entity.mainComponentBase = comp.SelectedItems[0].viewPath;\r\n                    return Promise.resolve(true);\r\n                }\r\n            })\r\n        });\r\n    }\r\n\r\n    SyncTenant() {\r\n        if (this.OutputListener)\r\n            this.OutputListener.Clear();\r\n        this.Listener.Start().then(conn => {\r\n            this.Gen.connectionId = conn;\r\n            this.Gen.SyncTenants(1, this.model.entity.id);\r\n        })\r\n    }\r\n\r\n    UpdateDatabase() {\r\n        if (this.OutputListener)\r\n            this.OutputListener.Clear();\r\n\r\n        this.Listener.Start().then(conn => {\r\n            this.Sql.connectionId = conn;\r\n\r\n            this.Sql.UpdateTenantDatabse({\r\n                dbName: this.model.dbName,\r\n                environment: this.model.environment,\r\n                id: this.model.entity.id\r\n            })\r\n        })\r\n    }\r\n\r\n    Render() {\r\n        if (this.OutputListener)\r\n            this.OutputListener.Clear();\r\n        this.Listener.Start().then(conn => {\r\n            this.Gen.connectionId = conn;\r\n\r\n            this.Gen.RenderTenant({ mod: this.model.entity.code })\r\n        })\r\n    }\r\n\r\n    Publish() {\r\n        if (this.OutputListener)\r\n            this.OutputListener.Clear();\r\n\r\n\r\n        this.Listener.Start().then(conn => {\r\n            this.Gen.connectionId = conn;\r\n\r\n            this.Gen.PublishTenant({\r\n                tenantCode: this.model.entity.code,\r\n                environment: this.model.environment,\r\n                force: this.model.force\r\n            }).then(d => {\r\n\r\n                if (d.message != \"already_rendered\") {\r\n                    Shell.Main.ShowPromptTranslate(d.message);\r\n                }\r\n            }).catch(d => {\r\n                Utils.HandleError(d, true);\r\n            });\r\n        })\r\n    }\r\n\r\n    Submit() {\r\n        if (this.IsNew && this.model.dbName) {\r\n            if (this.OutputListener)\r\n                this.OutputListener.Clear();\r\n            this.Listener.Start().then(d => {\r\n                this.Sql.connectionId = d;\r\n                var req = {\r\n                    tenantCode: this.model.entity.code,\r\n                    environment: this.model.environment,\r\n                    dbName: this.model.dbName,\r\n                    id: 0\r\n                };\r\n                this.Sql.CreateTenantDatabase(req).then(d => {\r\n                    this.model.entity.connectionString = d.data.ConnectionString;\r\n                    this.model.entity.id = d.data.TenantId;\r\n                    this.NotifyTranslate(\"database_created\");\r\n\r\n                    this.Service.Post(\"Post\", this.model.entity).then(d => {\r\n                        super.OnSubmitSuccess(d);\r\n                    });\r\n                }).catch(d => Utils.HandleError(d, true));\r\n            })\r\n        } else {\r\n            super.Submit();\r\n        }\r\n\r\n\r\n    }\r\n    ngOnDestroy() {\r\n        super.ngOnDestroy();\r\n        this.Listener.Stop();\r\n    }\r\n}","import { EntityHttpService } from \"codeshell/http\";\r\nimport { ServerConfig } from \"Example/ServerConfig\";\r\nimport { DbCreationRequest } from \"Example/Dtos\"\r\nimport { SubmitResult } from \"codeshell/helpers\";\r\nimport { ConfigHttpService } from \"./ConfigHttpService\";\r\n\r\nexport class SqlCommandsService extends ConfigHttpService {\r\n    get BaseUrl() {\r\n        return this.CurrentAppUrl + \"/apiAction/SqlCommands\";\r\n    }\r\n\r\n    CreateTenantDatabase(dto: DbCreationRequest): Promise<SubmitResult> {\r\n        return this.Post(\"CreateTenantDatabase\", dto);\r\n    }\r\n\r\n    UpdateTenantDatabse(dto: DbCreationRequest): Promise<SubmitResult> {\r\n        return this.Post(\"UpdateTenantDatabse\", dto);\r\n    }\r\n\r\n    GetEnvironments(): Promise<any[]> {\r\n        return this.Get(\"GetEnvironments\");\r\n    }\r\n}","import { ConfigHttpService } from \"./ConfigHttpService\";\r\nimport { SubmitResult } from \"codeshell/helpers\";\r\nimport { ServerConfig } from \"Example/ServerConfig\";\r\nimport { DbCreationRequest } from \"Example/Dtos\";\r\n\r\nexport class ConfigPagesService extends ConfigHttpService {\r\n\r\n    get BaseUrl() {\r\n        return this.CurrentAppUrl + \"/apiAction/Pages\";\r\n    }\r\n\r\n    PageMoved(req: any): Promise<SubmitResult> {\r\n        return this.Post(\"PageMoved\", req);\r\n    }\r\n\r\n    TenantCreated(req: DbCreationRequest): Promise<SubmitResult> {\r\n        return this.Post(\"TenantCreated\", req);\r\n    }\r\n}","module.exports = \"<div class=\\\"page-header container-fluid\\\" *ngIf=\\\"!IsEmbedded !HideHeader\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-5 col-xs-12\\\">\\r\\n            <h2>{{'Pages.Tenants__TenantCreate' | translate }}<span *ngIf=\\\"HeaderExtra\\\"> - {{HeaderExtra}}</span></h2>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-7 col-xs-12\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n                <div class=\\\"col-md-12 col-xs-12 padTop padBottom\\\">\\r\\n                    <div class=\\\"pull-last btn-group\\\">\\r\\n\\r\\n                        \\r\\n                        \\r\\n    <button class=\\\"btn btn-info margin-sides\\\"\\r\\n            (click)=\\\"Refresh()\\\"\\r\\n            \\r\\n            >\\r\\n        <i class=\\\"fa fa-redo\\\"></i> \\r\\n    </button>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"!IsEmbedded\\\">\\r\\n\\r\\n        <ol class=\\\"breadcrumb\\\">\\r\\n            <li>\\r\\n                <a routerLink=\\\"'/'\\\">{{'Words.Main' | translate }}</a>\\r\\n            </li>\\r\\n                <li>\\r\\n                    <a routerLink=\\\"/Tenants/TenantList\\\">{{'Pages.Tenants__TenantList' | translate }}</a>\\r\\n                </li>\\r\\n            <li>\\r\\n                {{'Pages.Tenants__TenantCreate' | translate }}\\r\\n            </li>\\r\\n        </ol>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-header section-header\\\" *ngIf=\\\"IsEmbedded && !HideHeader\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-8\\\">\\r\\n                {{'Pages.Tenants__TenantCreate' | translate }}<span *ngIf=\\\"HeaderExtra\\\"> - {{HeaderExtra}}</span>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div><div [ngClass]=\\\"IsEmbedded?'panel panel-default embedded':'container-fluid animated fadeInRight'\\\">\\r\\n\\r\\n    <div [ngClass]=\\\"IsEmbedded?'panel-body':'content-block'\\\">\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"UseLocalization\\\">\\r\\n            <div class=\\\"col-xs-12 col-md-6 col-xs-offset-0 col-md-offset-6 padBottom\\\">\\r\\n                <div class=\\\"btn-group btn-group-sm pull-last\\\">\\r\\n                        <button class=\\\"btn btn-sm\\\" [ngClass]=\\\"CurrentLang=='ar'?'btn-primary':'btn-default'\\\" (click)=\\\"CurrentLang='ar'\\\">\\r\\n                            {{'Words.ar' | translate }}\\r\\n                        </button>\\r\\n                        <button class=\\\"btn btn-sm\\\" [ngClass]=\\\"CurrentLang=='en'?'btn-primary':'btn-default'\\\" (click)=\\\"CurrentLang='en'\\\">\\r\\n                            {{'Words.en' | translate }}\\r\\n                        </button>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        \\r\\n\\r\\n\\r\\n<form #Form=\\\"ngForm\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        \\r\\n<div class=\\\"form-group col-md-6 \\\"\\r\\n     id=\\\"FG_entity_code\\\"\\r\\n     #FG_entity_code=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label>{{'Columns.Tenant__Code' | translate }} <span style=\\\"color:red\\\">*</span></label>\\r\\n    <input type=\\\"text\\\"\\r\\n       class=\\\"form-control \\\"\\r\\n       placeholder=\\\"{{'Columns.Tenant__Code' | translate }}\\\"\\r\\n       name=\\\"Form__entity_code\\\"\\r\\n       [(ngModel)]=\\\"model.entity.code\\\"\\r\\n       title=\\\"{{'Columns.Tenant__Code' | translate }}\\\"\\r\\n       [li-watch]=\\\"model\\\"\\r\\n\\r\\n       \\r\\n       required is-unique [data-service]=\\\"Service\\\" [item-id]=\\\"model.id\\\" column-id=\\\"Code\\\"  >\\r\\n    <p *ngIf=\\\"!FG_entity_code.Write\\\">{{FG_entity_code.Value}}</p>\\r\\n\\r\\n\\r\\n    <span *ngIf=\\\"Form.controls['Form__entity_code'] && Form.controls['Form__entity_code'].invalid && (Form.controls['Form__entity_code'].dirty || Form.controls['Form__entity_code'].touched)\\\">\\r<small *ngIf=\\\"Form.controls['Form__entity_code'].errors!.required\\\" class=\\\"form-text text-danger\\\">{{'Messages.field_required' | translate : {p0:'Columns.Tenant__Code' | translate } }}</small>\\r\\n<small *ngIf=\\\"Form.controls['Form__entity_code'].errors!.unique\\\" class=\\\"form-text text-danger\\\">{{'Messages.field_exists' | translate : {p0:'Columns.Tenant__Code' | translate } }}</small>\\r\\n</span>\\r\\n</div>\\r\\n\\r\\n        \\r\\n<div class=\\\"form-group col-md-6 \\\"\\r\\n     id=\\\"FG_entity_name\\\"\\r\\n     #FG_entity_name=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label>{{'Columns.Tenant__Name' | translate }} <span style=\\\"color:red\\\">*</span></label>\\r\\n    <input type=\\\"text\\\"\\r\\n       class=\\\"form-control \\\"\\r\\n       placeholder=\\\"{{'Columns.Tenant__Name' | translate }}\\\"\\r\\n       name=\\\"Form__entity_name\\\"\\r\\n       [(ngModel)]=\\\"model.entity.name\\\"\\r\\n       title=\\\"{{'Columns.Tenant__Name' | translate }}\\\"\\r\\n       [li-watch]=\\\"model\\\"\\r\\n\\r\\n       \\r\\n       required  >\\r\\n    <p *ngIf=\\\"!FG_entity_name.Write\\\">{{FG_entity_name.Value}}</p>\\r\\n\\r\\n\\r\\n    <span *ngIf=\\\"Form.controls['Form__entity_name'] && Form.controls['Form__entity_name'].invalid && (Form.controls['Form__entity_name'].dirty || Form.controls['Form__entity_name'].touched)\\\">\\r<small *ngIf=\\\"Form.controls['Form__entity_name'].errors!.required\\\" class=\\\"form-text text-danger\\\">{{'Messages.field_required' | translate : {p0:'Columns.Tenant__Name' | translate } }}</small>\\r\\n</span>\\r\\n</div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        \\r\\n<div class=\\\"form-group col-md-6 \\\"\\r\\n     id=\\\"FG_dbName\\\"\\r\\n     #FG_dbName=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label>{{'Columns.Tenant__DbName' | translate }} </label>\\r\\n    <input type=\\\"text\\\"\\r\\n       class=\\\"form-control \\\"\\r\\n       placeholder=\\\"{{'Columns.Tenant__DbName' | translate }}\\\"\\r\\n       name=\\\"Form__dbName\\\"\\r\\n       [(ngModel)]=\\\"model.dbName\\\"\\r\\n       title=\\\"{{'Columns.Tenant__DbName' | translate }}\\\"\\r\\n       [li-watch]=\\\"model\\\"\\r\\n\\r\\n       \\r\\n       [pattern]=\\\"'[_a-zA-Z][_a-zA-Z0-9]{2,30}'\\\"  >\\r\\n    <p *ngIf=\\\"!FG_dbName.Write\\\">{{FG_dbName.Value}}</p>\\r\\n\\r\\n\\r\\n    <span *ngIf=\\\"Form.controls['Form__dbName'] && Form.controls['Form__dbName'].invalid && (Form.controls['Form__dbName'].dirty || Form.controls['Form__dbName'].touched)\\\">\\r<small *ngIf=\\\"Form.controls['Form__dbName'].errors!.pattern\\\" class=\\\"form-text text-danger\\\">{{'Messages.invalid_field' | translate : {p0:'Columns.Tenant__DbName' | translate } }}</small>\\r\\n</span>\\r\\n</div>\\r\\n\\r\\n        \\r\\n<div class=\\\"form-group col-md-6 \\\" >\\r\\n    <label>{{'Columns.Tenant__ConnectionString' | translate }}</label>\\r\\n        <p class=\\\"\\\"  >\\r\\n        {{model.entity.connectionString}}\\r\\n    </p>\\r\\n\\r\\n    \\r\\n</div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <div class=\\\"form-group\\\"\\r\\n     id=\\\"MainComponentBase\\\" bs-group #MainComponentBase=\\\"bsFormGroup\\\"     >\\r\\n    <label class=\\\"control-label\\\">{{'Words.MainComponentBase' | translate }}</label>\\r\\n\\r\\n    <div>\\r\\n        <div class=\\\"input-group modal-selector\\\">\\r\\n            <label class=\\\"form-control\\\" >\\r\\n{{model.entity.mainComponentBase}}            </label>\\r\\n\\r\\n                <div class=\\\"input-group-btn\\\"  *ngIf=\\\"MainComponentBase && MainComponentBase.Write\\\">\\r\\n                    <button class=\\\"btn\\\" (click)=\\\"SelectTemplate()\\\">\\r\\n                        <i class=\\\"fa fa-window-restore\\\"></i>\\r\\n                    </button>\\r\\n                </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n</div>\\r\\n        </div>\\r\\n        \\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-md-12 section-header\\\">{{'Words.Publishing' | translate }}</div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        \\r\\n<div class=\\\"form-group col-md-2 \\\"\\r\\n     id=\\\"FG_environment\\\"\\r\\n     #FG_environment=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label>{{'Columns.Tenant__Environment' | translate }} </label>\\r\\n    \\r\\n<select class=\\\"form-control\\\"\\r\\n        name=\\\"Form__environment\\\" \\r\\n        [li-watch]=\\\"model\\\"\\r\\n        [(ngModel)]=\\\"model.environment\\\"\\r\\n         (change)=\\\"env_change()\\\" >\\r\\n        <option [ngValue]=\\\"null\\\">--({{'Words.Empty' | translate }})--</option>\\r\\n    <option *ngFor=\\\"let item of environments\\\" [ngValue]=\\\"item.name\\\">{{item.name}}</option>\\r\\n</select>\\r\\n    <p *ngIf=\\\"!FG_environment.Write\\\">{{FG_environment.Value}}</p>\\r\\n\\r\\n    \\r\\n</div>\\r\\n\\r\\n        \\r\\n\\r\\n        \\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n</form>\\r\\n\\r\\n<div class=\\\"row\\\" style=\\\"height:400px\\\">\\r\\n    <generationInofList #OutputListener [IsEmbedded]='true'></generationInofList>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n        \\r\\n        <div class=\\\"row submit-buttons\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"pull-last\\\">\\r\\n                    \\r\\n        <button class=\\\"btn btn-primary\\\"\\r\\n            [disabled]=\\\"!CanSubmit\\\"\\r\\n            (click)=\\\"Submit()\\\">\\r\\n        {{'Words.Save' | translate }}\\r\\n    </button>\\r\\n\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\n<div style='display:none' #lookupOptionsContainer values='{\\\"environments\\\":\\\"C0\\\"}'></div>\\n<div style='display:none' #viewParamsContainer values='{\\\"ModelType\\\":null,\\\"AddUrl\\\":null,\\\"EditUrl\\\":null,\\\"DetailsUrl\\\":null,\\\"ListUrl\\\":\\\"/Tenants/TenantList\\\",\\\"Fields\\\":[],\\\"Other\\\":{\\\"OutputListener\\\":\\\"Generations/GenerationInofList\\\",\\\"SelectTemplateModel\\\":\\\"PageCategories/PageCategorySelect\\\"}}'></div>\";","import { Component } from \"@angular/core\";\r\nimport { TenantCreateBase } from \"Example/Tenants/TenantCreateBase\";\r\n\r\n@Component({ template: require('./TenantDetails.html'), selector : \"tenantDetails\" })\r\nexport class TenantDetails extends TenantCreateBase {\r\n\tpublic GetPageId() : number { return 2005463254000; }\r\n\tpublic get CollectionId(): string | null { return null; }\r\n}","module.exports = \"<div class=\\\"page-header container-fluid\\\" *ngIf=\\\"!IsEmbedded !HideHeader\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-5 col-xs-12\\\">\\r\\n            <h2>{{'Pages.Tenants__TenantDetails' | translate }}<span *ngIf=\\\"HeaderExtra\\\"> - {{HeaderExtra}}</span></h2>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-7 col-xs-12\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n                <div class=\\\"col-md-12 col-xs-12 padTop padBottom\\\">\\r\\n                    <div class=\\\"pull-last btn-group\\\">\\r\\n\\r\\n                        \\r\\n                        \\r\\n    <button class=\\\"btn btn-info margin-sides\\\"\\r\\n            (click)=\\\"Refresh()\\\"\\r\\n            \\r\\n            >\\r\\n        <i class=\\\"fa fa-redo\\\"></i> \\r\\n    </button>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"!IsEmbedded\\\">\\r\\n\\r\\n        <ol class=\\\"breadcrumb\\\">\\r\\n            <li>\\r\\n                <a routerLink=\\\"'/'\\\">{{'Words.Main' | translate }}</a>\\r\\n            </li>\\r\\n                <li>\\r\\n                    <a routerLink=\\\"/Tenants/TenantList\\\">{{'Pages.Tenants__TenantList' | translate }}</a>\\r\\n                </li>\\r\\n            <li>\\r\\n                {{'Pages.Tenants__TenantDetails' | translate }}\\r\\n            </li>\\r\\n        </ol>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-header section-header\\\" *ngIf=\\\"IsEmbedded && !HideHeader\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-8\\\">\\r\\n                {{'Pages.Tenants__TenantDetails' | translate }}<span *ngIf=\\\"HeaderExtra\\\"> - {{HeaderExtra}}</span>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div><div [ngClass]=\\\"IsEmbedded?'panel panel-default embedded':'container-fluid animated fadeInRight'\\\">\\r\\n\\r\\n    <div [ngClass]=\\\"IsEmbedded?'panel-body':'content-block'\\\">\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"UseLocalization\\\">\\r\\n            <div class=\\\"col-xs-12 col-md-6 col-xs-offset-0 col-md-offset-6 padBottom\\\">\\r\\n                <div class=\\\"btn-group btn-group-sm pull-last\\\">\\r\\n                        <button class=\\\"btn btn-sm\\\" [ngClass]=\\\"CurrentLang=='ar'?'btn-primary':'btn-default'\\\" (click)=\\\"CurrentLang='ar'\\\">\\r\\n                            {{'Words.ar' | translate }}\\r\\n                        </button>\\r\\n                        <button class=\\\"btn btn-sm\\\" [ngClass]=\\\"CurrentLang=='en'?'btn-primary':'btn-default'\\\" (click)=\\\"CurrentLang='en'\\\">\\r\\n                            {{'Words.en' | translate }}\\r\\n                        </button>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        \\r\\n\\r\\n\\r\\n<form #Form=\\\"ngForm\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        \\r\\n<div class=\\\"form-group col-md-6 \\\"\\r\\n     id=\\\"FG_entity_code\\\"\\r\\n     #FG_entity_code=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label>{{'Columns.Tenant__Code' | translate }} <span style=\\\"color:red\\\">*</span></label>\\r\\n    <input type=\\\"text\\\"\\r\\n       class=\\\"form-control \\\"\\r\\n       placeholder=\\\"{{'Columns.Tenant__Code' | translate }}\\\"\\r\\n       name=\\\"Form__entity_code\\\"\\r\\n       [(ngModel)]=\\\"model.entity.code\\\"\\r\\n       title=\\\"{{'Columns.Tenant__Code' | translate }}\\\"\\r\\n       [li-watch]=\\\"model\\\"\\r\\n\\r\\n       \\r\\n       required is-unique [data-service]=\\\"Service\\\" [item-id]=\\\"model.id\\\" column-id=\\\"Code\\\"  >\\r\\n    <p *ngIf=\\\"!FG_entity_code.Write\\\">{{FG_entity_code.Value}}</p>\\r\\n\\r\\n\\r\\n    <span *ngIf=\\\"Form.controls['Form__entity_code'] && Form.controls['Form__entity_code'].invalid && (Form.controls['Form__entity_code'].dirty || Form.controls['Form__entity_code'].touched)\\\">\\r<small *ngIf=\\\"Form.controls['Form__entity_code'].errors!.required\\\" class=\\\"form-text text-danger\\\">{{'Messages.field_required' | translate : {p0:'Columns.Tenant__Code' | translate } }}</small>\\r\\n<small *ngIf=\\\"Form.controls['Form__entity_code'].errors!.unique\\\" class=\\\"form-text text-danger\\\">{{'Messages.field_exists' | translate : {p0:'Columns.Tenant__Code' | translate } }}</small>\\r\\n</span>\\r\\n</div>\\r\\n\\r\\n        \\r\\n<div class=\\\"form-group col-md-6 \\\"\\r\\n     id=\\\"FG_entity_name\\\"\\r\\n     #FG_entity_name=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label>{{'Columns.Tenant__Name' | translate }} <span style=\\\"color:red\\\">*</span></label>\\r\\n    <input type=\\\"text\\\"\\r\\n       class=\\\"form-control \\\"\\r\\n       placeholder=\\\"{{'Columns.Tenant__Name' | translate }}\\\"\\r\\n       name=\\\"Form__entity_name\\\"\\r\\n       [(ngModel)]=\\\"model.entity.name\\\"\\r\\n       title=\\\"{{'Columns.Tenant__Name' | translate }}\\\"\\r\\n       [li-watch]=\\\"model\\\"\\r\\n\\r\\n       \\r\\n       required  >\\r\\n    <p *ngIf=\\\"!FG_entity_name.Write\\\">{{FG_entity_name.Value}}</p>\\r\\n\\r\\n\\r\\n    <span *ngIf=\\\"Form.controls['Form__entity_name'] && Form.controls['Form__entity_name'].invalid && (Form.controls['Form__entity_name'].dirty || Form.controls['Form__entity_name'].touched)\\\">\\r<small *ngIf=\\\"Form.controls['Form__entity_name'].errors!.required\\\" class=\\\"form-text text-danger\\\">{{'Messages.field_required' | translate : {p0:'Columns.Tenant__Name' | translate } }}</small>\\r\\n</span>\\r\\n</div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        \\r\\n        \\r\\n<div class=\\\"form-group col-md-6 \\\"\\r\\n     id=\\\"FG_entity_connectionString\\\"\\r\\n     #FG_entity_connectionString=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label>{{'Columns.Tenant__ConnectionString' | translate }} </label>\\r\\n    <input type=\\\"text\\\"\\r\\n       class=\\\"form-control \\\"\\r\\n       placeholder=\\\"{{'Columns.Tenant__ConnectionString' | translate }}\\\"\\r\\n       name=\\\"Form__entity_connectionString\\\"\\r\\n       [(ngModel)]=\\\"model.entity.connectionString\\\"\\r\\n       title=\\\"{{'Columns.Tenant__ConnectionString' | translate }}\\\"\\r\\n       [li-watch]=\\\"model\\\"\\r\\n\\r\\n       \\r\\n        >\\r\\n    <p *ngIf=\\\"!FG_entity_connectionString.Write\\\">{{FG_entity_connectionString.Value}}</p>\\r\\n\\r\\n\\r\\n    \\r\\n</div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <div class=\\\"form-group\\\"\\r\\n     id=\\\"MainComponentBase\\\" bs-group #MainComponentBase=\\\"bsFormGroup\\\"     >\\r\\n    <label class=\\\"control-label\\\">{{'Words.MainComponentBase' | translate }}</label>\\r\\n\\r\\n    <div>\\r\\n        <div class=\\\"input-group modal-selector\\\">\\r\\n            <label class=\\\"form-control\\\" >\\r\\n{{model.entity.mainComponentBase}}            </label>\\r\\n\\r\\n                <div class=\\\"input-group-btn\\\"  *ngIf=\\\"MainComponentBase && MainComponentBase.Write\\\">\\r\\n                    <button class=\\\"btn\\\" (click)=\\\"SelectTemplate()\\\">\\r\\n                        <i class=\\\"fa fa-window-restore\\\"></i>\\r\\n                    </button>\\r\\n                </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n</div>\\r\\n        </div>\\r\\n        \\r\\n<div class=\\\"form-group col-md-6 \\\"\\r\\n     id=\\\"FG_entity_version\\\"\\r\\n     #FG_entity_version=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label>{{'Columns.Tenant__Version' | translate }} </label>\\r\\n        <p class=\\\"\\\"  >\\r\\n        {{model.entity.version}}\\r\\n    </p>\\r\\n\\r\\n    \\r\\n</div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-md-12 section-header\\\">{{'Words.Publishing' | translate }}</div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n<div  class=\\\"from-group\\\" id=\\\"update_buttons\\\" #update_buttons>\\n            <div class=\\\"col-md-3\\\">\\r\\n                <br />\\r\\n                <div class=\\\"input-group btn-group\\\">\\r\\n                    \\r\\n    <button class=\\\"btn btn-info\\\"\\r\\n            (click)=\\\"SyncTenant()\\\"\\r\\n            \\r\\n            >\\r\\n        <i class=\\\"fa fa-sync\\\"></i> {{'Words.UpdateConfigurations' | translate }}\\r\\n    </button>\\r\\n\\r\\n                    \\r\\n    <button class=\\\"btn btn-default\\\"\\r\\n            (click)=\\\"Render()\\\"\\r\\n            \\r\\n            >\\r\\n        <i class=\\\"fa fa-image\\\"></i> {{'Words.Render' | translate }}\\r\\n    </button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n</div>        \\r\\n<div class=\\\"form-group col-md-2 \\\"\\r\\n     id=\\\"FG_environment\\\"\\r\\n     #FG_environment=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label>{{'Columns.Tenant__Environment' | translate }} </label>\\r\\n    \\r\\n<select class=\\\"form-control\\\"\\r\\n        name=\\\"Form__environment\\\" \\r\\n        [li-watch]=\\\"model\\\"\\r\\n        [(ngModel)]=\\\"model.environment\\\"\\r\\n         (change)=\\\"env_change()\\\" >\\r\\n        <option [ngValue]=\\\"null\\\">--({{'Words.Empty' | translate }})--</option>\\r\\n    <option *ngFor=\\\"let item of environments\\\" [ngValue]=\\\"item.name\\\">{{item.name}}</option>\\r\\n</select>\\r\\n    <p *ngIf=\\\"!FG_environment.Write\\\">{{FG_environment.Value}}</p>\\r\\n\\r\\n    \\r\\n</div>\\r\\n\\r\\n        \\r\\n<div class=\\\"form-group col-md-3 \\\"\\r\\n     id=\\\"FG_dbName\\\"\\r\\n     #FG_dbName=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label>{{'Columns.Tenant__DbName' | translate }} </label>\\r\\n    \\r\\n<select class=\\\"form-control\\\"\\r\\n        name=\\\"Form__dbName\\\" \\r\\n        [li-watch]=\\\"model\\\"\\r\\n        [(ngModel)]=\\\"model.dbName\\\"\\r\\n         >\\r\\n        <option [ngValue]=\\\"null\\\">--({{'Words.Empty' | translate }})--</option>\\r\\n    <option *ngFor=\\\"let item of databases\\\" [ngValue]=\\\"item.name\\\">{{item.name}}</option>\\r\\n</select>\\r\\n    <p *ngIf=\\\"!FG_dbName.Write\\\">{{FG_dbName.Value}}</p>\\r\\n\\r\\n    \\r\\n</div>\\r\\n\\r\\n\\r\\n        \\r\\n<div class=\\\"form-group col-md-1 \\\"\\r\\n     id=\\\"FG_force\\\"\\r\\n     #FG_force=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label>{{'Columns.Tenant__Force' | translate }} </label>\\r\\n    \\r\\n<label  class=\\\"check-label \\\">\\r\\n    <i class=\\\"fa fa-lg\\\" [ngClass]=\\\"model.force?'fa-toggle-on greenColor':'fa-toggle-off grayColor'\\\"></i>\\r\\n    \\r\\n\\r\\n\\r\\n    <input name=\\\"__force\\\"\\r\\n           style=\\\"display:none\\\"\\r\\n           type=\\\"checkbox\\\"\\r\\n            title=\\\"Force\\\" \\r\\n           \\r\\n           [(ngModel)]=\\\"model.force\\\">\\r\\n</label>\\r\\n\\r\\n\\r\\n    \\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n<div  class=\\\"from-group\\\" id=\\\"update_buttons\\\" #update_buttons>\\n            <div class=\\\"col-md-3\\\">\\r\\n                <br />\\r\\n\\r\\n                <div class=\\\"input-group btn-group\\\">\\r\\n\\r\\n                    \\r\\n    <button class=\\\"btn btn-primary\\\"\\r\\n            (click)=\\\"UpdateDatabase()\\\"\\r\\n             [disabled]=\\\"!model.dbName\\\"\\r\\n            >\\r\\n        <i class=\\\"fa fa-download\\\"></i> {{'Words.UpdateDatabase' | translate }}\\r\\n    </button>\\r\\n\\r\\n                    \\r\\n    <button class=\\\"btn btn-success\\\"\\r\\n            (click)=\\\"Publish()\\\"\\r\\n             [disabled]=\\\"!model.environment\\\"\\r\\n            >\\r\\n        <i class=\\\"fa fa-upload\\\"></i> {{'Words.Publish' | translate }}\\r\\n    </button>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n</div>\\r\\n    </div>\\r\\n\\r\\n</form>\\r\\n\\r\\n<div class=\\\"row\\\" style=\\\"height:400px\\\">\\r\\n    <generationInofList #OutputListener [IsEmbedded]='true'></generationInofList>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n        \\r\\n        <div class=\\\"row submit-buttons\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"pull-last\\\">\\r\\n                    \\r\\n        <button class=\\\"btn btn-primary\\\"\\r\\n            [disabled]=\\\"!CanSubmit\\\"\\r\\n            (click)=\\\"Submit()\\\">\\r\\n        {{'Words.Save' | translate }}\\r\\n    </button>\\r\\n\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\n<div style='display:none' #lookupOptionsContainer values='{\\\"environments\\\":\\\"C0\\\",\\\"databases\\\":\\\"C0\\\"}'></div>\\n<div style='display:none' #viewParamsContainer values='{\\\"ModelType\\\":null,\\\"AddUrl\\\":null,\\\"EditUrl\\\":null,\\\"DetailsUrl\\\":null,\\\"ListUrl\\\":\\\"/Tenants/TenantList\\\",\\\"Fields\\\":[],\\\"Other\\\":{\\\"OutputListener\\\":\\\"Generations/GenerationInofList\\\",\\\"SelectTemplateModel\\\":\\\"PageCategories/PageCategorySelect\\\"}}'></div>\";","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { CodeShellModule } from \"codeshell/codeShellModule\";\r\nimport { SharedModule } from \"../Shared/SharedModule\";\r\nimport { Registry } from \"codeshell/core\";\r\nimport { AuthFilter, ResourceActions } from \"codeshell/security\";\r\n\r\nimport { ServerConfigBase } from \"codeshell/core\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\n\r\n\r\n@NgModule({\r\n    declarations: [],\r\n    exports: [],\r\n    imports: [\r\n\t\tSharedModule,\r\n        RouterModule.forChild([\r\n\r\n\t\t])\r\n    ]\r\n})\r\nexport class DomainsModule {\r\n\r\n    constructor(trans: TranslateService, conf: ServerConfigBase) {\r\n        trans.setDefaultLang(conf.Locale);\r\n        trans.use(conf.Locale);\r\n    }\r\n}\r\n\r\n","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { CodeShellModule } from \"codeshell/codeShellModule\";\r\nimport { SharedModule } from \"../Shared/SharedModule\";\r\nimport { Registry } from \"codeshell/core\";\r\nimport { AuthFilter, ResourceActions } from \"codeshell/security\";\r\n\r\nimport { ServerConfigBase } from \"codeshell/core\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { PageTreeList } from \"./PageTreeList\";\nimport { PageCreate } from \"./PageCreate\";\nimport { PageEdit } from \"./PageEdit\";\n\r\n\r\n@NgModule({\r\n    declarations: [PageTreeList,PageCreate,PageEdit,],\r\n    exports: [PageTreeList,PageCreate,PageEdit,],\r\n    imports: [\r\n\t\tSharedModule,\r\n        RouterModule.forChild([\r\n\t\t\t﻿{ path : \"PageTreeList\", component : PageTreeList, canActivate: [AuthFilter], data: { name : \"Pages__PageTreeList\", navigate: false, resource:\"Pages\", action: \"anonymous\", apps:null }},\n\t\t\t﻿{ path : \"PageCreate\", component : PageCreate, canActivate: [AuthFilter], data: { name : \"Pages__PageCreate\", navigate: false, resource:\"\", action: \"anonymous\", apps:null }},\n\t\t\t﻿{ path : \"PageEdit/:id\", component : PageEdit, canActivate: [AuthFilter], data: { name : \"Pages__PageEdit\", navigate: false, resource:\"\", action: \"anonymous\", apps:null }},\n\r\n\t\t])\r\n    ]\r\n})\r\nexport class PagesModule {\r\n\r\n    constructor(trans: TranslateService, conf: ServerConfigBase) {\r\n        trans.setDefaultLang(conf.Locale);\r\n        trans.use(conf.Locale);\r\n    }\r\n}\r\n\r\nRegistry.Register(\"Pages/PageTreeList\", PageTreeList);\nRegistry.Register(\"Pages/PageCreate\", PageCreate);\nRegistry.Register(\"Pages/PageEdit\", PageEdit);\n","import { Component } from \"@angular/core\";\r\nimport { PageTreeListBase } from \"Example/Pages/PageTreeListBase\";\r\n\r\n@Component({ template: require('./PageTreeList.html'), selector : \"pageTreeList\" })\r\nexport class PageTreeList extends PageTreeListBase {\r\n\tpublic GetPageId() : number { return 1935266339000; }\r\n\tpublic get CollectionId(): string | null { return null; }\r\n}","import { ListComponentBase, BaseComponent } from \"codeshell/baseComponents\";\r\nimport { Injectable, ViewChild } from \"@angular/core\";\r\nimport { Shell } from \"codeshell/core\";\r\n\r\nimport { DomainTreeBase, DomainCountMode } from \"../Domains/DomainTreeBase\";\r\nimport { PagesService } from \"../Http/PagesService\";\r\nimport { PageListBase } from \"./PageListBase\";\r\nimport { RecursionModel, Stored, ComponentRequest } from \"../../codeshell/helpers\";\r\nimport { TenantsService } from \"../Http\";\r\nimport { parseIntAutoRadix } from \"@angular/common/src/i18n/format_number\";\r\nimport { TenantComponentBase } from \"Example/TenantComponentBase\";\r\nimport { ModulesConfigBase } from \"../PageCategories/ModulesConfigBase\";\r\n\r\nexport class PTLUseState {\r\n    domainId?: number;\r\n    tenantCode?: string;\r\n}\r\n\r\n@Injectable()\r\nexport abstract class PageTreeListBase extends TenantComponentBase {\r\n    get Service(): PagesService { return Shell.Injector.get(PagesService); }\r\n    get TenantsService(): TenantsService { return Shell.Injector.get(TenantsService) }\r\n\r\n    @ViewChild(\"DomainTree\") DomainTree?: DomainTreeBase;\r\n    @ViewChild(\"PageList\") PageList?: PageListBase;\r\n\r\n    UseState: PTLUseState = new PTLUseState();\r\n    currentDomain?: RecursionModel | null = null;\r\n\r\n\r\n    OnReady() {\r\n        Shell.Main.SideBarStatus.emit(false);\r\n\r\n        var stor = Stored.Get(\"PTLUseState\", PTLUseState);\r\n        if (stor) {\r\n            this.UseState = stor;\r\n        }\r\n\r\n        if (this.PageList) {\r\n            this.PageList.HideHeader = true;\r\n        }\r\n\r\n        if (this.DomainTree) {\r\n            this.DomainTree.AllowEdit = true;\r\n            this.DomainTree.HideHeader = true;\r\n            this.DomainTree.OnSelectedEvent = domain => this.OnDomainSelected(domain);\r\n            this.DomainTree.CountMode = DomainCountMode.Pages;\r\n            this.DomainTree.tenantId = this.getTenantId();\r\n\r\n            this.DomainTree.OnTreeLoaded = () => {\r\n                if (this.UseState && this.UseState.tenantCode == this.model.tenantCode && this.UseState.domainId) {\r\n                    this.DomainTree!.SetSelected(this.UseState.domainId);\r\n                }\r\n            };\r\n            this.DomainTree.LoadData();\r\n\r\n        }\r\n    }\r\n\r\n    tenantChanged() {\r\n        super.tenantChanged();\r\n        if (this.DomainTree) {\r\n\r\n            this.DomainTree.tenantId = this.getTenantId();\r\n            this.DomainTree.LoadCounts();\r\n            this.LoadPages();\r\n        }\r\n        this.SaveState();\r\n\r\n    }\r\n\r\n    LoadPages() {\r\n        if (this.PageList) {\r\n            this.PageList.Domain = this.currentDomain;\r\n            this.PageList.tenantId = this.getTenantId();\r\n            this.PageList.LoadData();\r\n        }\r\n\r\n    }\r\n\r\n    OnDomainSelected(item: RecursionModel | null) {\r\n        this.currentDomain = item;\r\n        if (this.PageList && this.currentDomain) {\r\n            this.LoadPages();\r\n\r\n        }\r\n        this.SaveState();\r\n\r\n    }\r\n\r\n    SaveState() {\r\n\r\n        this.UseState.domainId = this.currentDomain ? this.currentDomain.id : undefined;\r\n        this.UseState.tenantCode = this.model.tenantCode;\r\n        Stored.Set(\"PTLUseState\", this.UseState);\r\n    }\r\n\r\n    loadPageTreeList() {\r\n\r\n    }\r\n\r\n\r\n}","import { BaseComponent } from \"codeshell/baseComponents\";\r\nimport { AppComponentBase } from \"./AppComponentBase\";\r\nimport { Shell } from \"codeshell/core\";\r\nimport { TenantsService } from \"./Http\";\r\n\r\nexport abstract class TenantComponentBase extends BaseComponent{\r\n    model: any = {};\r\n    tenants: any[] = [];\r\n    get App(): AppComponentBase { return Shell.Main as AppComponentBase; }\r\n    get TenantService(): TenantsService { return Shell.Injector.get(TenantsService); }\r\n\r\n    tenantChanged() {\r\n        this.App.UseState.tenantCode = this.model.tenantCode;\r\n        this.App.SaveState();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.TenantService.Get(\"Get\").then((res: any) => {\r\n            this.tenants = res.list;\r\n            if (this.App.UseState.tenantCode)\r\n                this.model.tenantCode = this.App.UseState.tenantCode;\r\n            this.OnReady();\r\n        })\r\n    }\r\n\r\n    OnReady() {\r\n\r\n    }\r\n\r\n    getTenantId(): number | undefined {\r\n        if (this.model.tenantCode) {\r\n            var ten = this.tenants.find(d => d.code == this.model.tenantCode);\r\n            if (ten)\r\n                return ten.id;\r\n        }\r\n        return undefined;\r\n    }\r\n}","module.exports = \"<div class=\\\"page-header container-fluid\\\" *ngIf=\\\"!IsEmbedded !HideHeader\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-5 col-xs-12\\\">\\r\\n            <h2>{{'Pages.Pages__PageTreeList' | translate }}<span *ngIf=\\\"HeaderExtra\\\"> - {{HeaderExtra}}</span></h2>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-7 col-xs-12\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n                    <div class=\\\"col-md-8 col-xs-12 text-last padTop\\\">\\r\\n                        \\r\\n<div class=\\\"row form-group \\\"\\r\\n     id=\\\"FG_tenantCode\\\"\\r\\n     #FG_tenantCode=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label class=\\\"col-sm-3 control-label\\\">\\r\\n        {{'Columns.Page__TenantCode' | translate }}\\r\\n    </label>\\r\\n    <div class=\\\"col-sm-9\\\">\\r\\n        \\r\\n<select class=\\\"form-control\\\"\\r\\n        name=\\\"Form__tenantCode\\\" \\r\\n        [li-watch]=\\\"model\\\"\\r\\n        [(ngModel)]=\\\"model.tenantCode\\\"\\r\\n         (change)=\\\"tenantChanged()\\\" >\\r\\n    <option *ngFor=\\\"let item of tenants\\\" [ngValue]=\\\"item.code\\\">{{item.name}}</option>\\r\\n</select>\\r\\n    <p *ngIf=\\\"!FG_tenantCode.Write\\\">{{FG_tenantCode.Value}}</p>\\r\\n\\r\\n        \\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n                    </div>\\r\\n                <div class=\\\"col-md-4 col-xs-12 padTop padBottom\\\">\\r\\n                    <div class=\\\"pull-last btn-group\\\">\\r\\n\\r\\n                        \\r\\n    <a class=\\\"btn btn-success\\\"\\r\\n       [routerLink]=\\\"'/Pages/PageCreate'\\\"\\r\\n        *ngIf=\\\"Permission.insert\\\"\\r\\n       >\\r\\n        <i class=\\\"fa fa-plus\\\"></i> {{'Words.AddEntity' | translate : {p0:'Words.Page' | translate } }}\\r\\n    </a>\\r\\n\\r\\n                        \\r\\n    <button class=\\\"btn btn-info margin-sides\\\"\\r\\n            (click)=\\\"Refresh()\\\"\\r\\n            \\r\\n            >\\r\\n        <i class=\\\"fa fa-redo\\\"></i> \\r\\n    </button>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"!IsEmbedded\\\">\\r\\n\\r\\n        <ol class=\\\"breadcrumb\\\">\\r\\n            <li>\\r\\n                <a routerLink=\\\"'/'\\\">{{'Words.Main' | translate }}</a>\\r\\n            </li>\\r\\n            <li>\\r\\n                {{'Pages.Pages__PageTreeList' | translate }}\\r\\n            </li>\\r\\n        </ol>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-header section-header\\\" *ngIf=\\\"IsEmbedded && !HideHeader\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-8\\\">\\r\\n                {{'Pages.Pages__PageTreeList' | translate }}<span *ngIf=\\\"HeaderExtra\\\"> - {{HeaderExtra}}</span>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n\\r\\n    <a class=\\\"btn btn-success buttonGra-sm\\\"\\r\\n       [routerLink]=\\\"'/Pages/PageCreate'\\\"\\r\\n        *ngIf=\\\"Permission.insert\\\"\\r\\n       >\\r\\n        <i class=\\\"fa fa-plus\\\"></i> {{'Words.AddEntity' | translate : {p0:'Words.Page' | translate } }}\\r\\n    </a>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n            <domainTree #DomainTree [IsEmbedded]='true'></domainTree>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-9\\\" [show-if]=\\\"currentDomain && model.tenantCode\\\" style=\\\"margin-top:11px\\\">\\r\\n            <pageList #PageList [IsEmbedded]='true'></pageList>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\n<div style='display:none' #lookupOptionsContainer values='{\\\"tenants\\\":\\\"C0\\\"}'></div>\\n<div style='display:none' #viewParamsContainer values='{\\\"ModelType\\\":null,\\\"AddUrl\\\":\\\"/Pages/PageCreate\\\",\\\"EditUrl\\\":null,\\\"DetailsUrl\\\":null,\\\"ListUrl\\\":null,\\\"Fields\\\":[{\\\"Name\\\":\\\"No_of_Teams\\\",\\\"Type\\\":\\\"Number\\\"}],\\\"Other\\\":{\\\"DomainTree\\\":\\\"Domains/DomainTree\\\",\\\"PageList\\\":\\\"Pages/PageList\\\",\\\"UseDefault\\\":\\\"P1\\\"}}'></div>\";","import { Component } from \"@angular/core\";\r\nimport { PageCreateBase } from \"Example/Pages/PageCreateBase\";\r\n\r\n@Component({ template: require('./PageCreate.html'), selector : \"pageCreate\" })\r\nexport class PageCreate extends PageCreateBase {\r\n\tpublic GetPageId() : number { return 1936059787000; }\r\n\tpublic get CollectionId(): string | null { return null; }\r\n}","import { EditComponentBase } from \"codeshell/baseComponents\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { PagesService } from \"../Http/PagesService\";\r\nimport { Shell } from \"../../codeshell/core\";\r\nimport { ComponentRequest, RecursionModel, NoteType, SubmitResult, Stored } from \"../../codeshell/helpers\";\r\nimport { DomainTreeBase } from \"../Domains/DomainTreeBase\";\r\nimport { Router } from \"@angular/router\";\r\nimport { AppComponentBase } from \"Example/AppComponentBase\";\r\nimport { ServerGenerationService } from \"Example/Http/ServerGenerationService\";\r\nimport { ConfigPagesService } from \"Example/Http/ConfigPagesService\";\r\nimport { PTLUseState } from \"./PageTreeListBase\";\r\nimport { DomainsService } from \"Example/Http/DomainsService\";\r\n\r\n@Injectable()\r\nexport abstract class PageCreateBase extends EditComponentBase {\r\n    get Service(): PagesService { return Shell.Injector.get(PagesService); }\r\n    Pages: ConfigPagesService = new ConfigPagesService();\r\n    DomainSrv: DomainsService = new DomainsService();\r\n\r\n    action: string = \"\";\r\n    get App(): AppComponentBase { return Shell.Main as AppComponentBase; }\r\n\r\n    OnReady() {\r\n        Shell.Main.SideBarStatus.emit(true);\r\n        var stat = Stored.Get(\"PTLUseState\", PTLUseState);\r\n        if (stat && stat.domainId) {\r\n            this.DomainSrv.Get(\"GetSingle/\" + stat.domainId).then(d => {\r\n                this.model.componentDomain = d.nameChain;\r\n                this.writePath();\r\n\r\n            })\r\n        }\r\n        if (this.App.UseState.tenantCode) {\r\n            this.model.tenantCode = this.App.UseState.tenantCode;\r\n        }\r\n    }\r\n\r\n    writePath() {\r\n        this.model.componentPath = this.fixComponentDomain();\r\n\r\n        if (this.model.componentName)\r\n            this.model.componentPath += this.model.componentName;\r\n    }\r\n\r\n    fixComponentDomain(): string {\r\n        var res = this.model.componentDomain;\r\n        if (res && res.length > 0) {\r\n            if (res[0] == \"/\")\r\n                res = res.substr(1);\r\n            if (res[res.length - 1] != \"/\")\r\n                res += \"/\";\r\n        } else {\r\n            res = \"\";\r\n        }\r\n        return res;\r\n    }\r\n\r\n    selectDomain() {\r\n        let req: ComponentRequest<DomainTreeBase> = {\r\n            DefaultComponent: \"Pages/DomainTreeSelect\",\r\n            Identifier: \"DomainModal\",\r\n            Init: comp => {\r\n                comp.LoadData();\r\n                comp.AllowEdit = false;\r\n                comp.OnOk = () => {\r\n                    comp.Show = false;\r\n                    var item = comp.selectedItem as RecursionModel\r\n                    this.model.componentDomain = item.nameChain;\r\n                    this.writePath();\r\n                    return Promise.resolve(true);\r\n                }\r\n            }\r\n        }\r\n        this.GetComponent(req).then(comp => {\r\n            comp.StartAsync().then(d => { d.Show = true; });\r\n        }).catch(error => console.log(error));;\r\n    }\r\n\r\n    OnSubmitSuccess(res: SubmitResult) {\r\n\r\n        if (this.IsNew && res.data.Id) {\r\n            this.NotifyTranslate(res.message, NoteType.Success);\r\n            var url = this.ViewParams.Other[\"CustomizeLink\"];\r\n            if (url)\r\n                this.NavigateToComponent(url + \"/\" + res.data.Id);\r\n        }\r\n        else {\r\n            super.OnSubmitSuccess(res);\r\n            if (res.data.MoveRequest) {\r\n                this.Pages.PageMoved(res.data.MoveRequest);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    TextBoxWithButtonClick(prop: string) {\r\n        this.selectDomain();\r\n    }\r\n\r\n    DefaultModel() {\r\n        return this.model = {\r\n            usage: 'R',\r\n            actionType: 'view',\r\n            specialPermission: 'anonymous',\r\n            defaultAccessibility: 2\r\n        }\r\n    }\r\n}","module.exports = \"<div class=\\\"page-header container-fluid\\\" *ngIf=\\\"!IsEmbedded !HideHeader\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-5 col-xs-12\\\">\\r\\n            <h2>{{'Pages.Pages__PageCreate' | translate }}<span *ngIf=\\\"HeaderExtra\\\"> - {{HeaderExtra}}</span></h2>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-7 col-xs-12\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n                <div class=\\\"col-md-12 col-xs-12 padTop padBottom\\\">\\r\\n                    <div class=\\\"pull-last btn-group\\\">\\r\\n\\r\\n                        \\r\\n                        \\r\\n    <button class=\\\"btn btn-info margin-sides\\\"\\r\\n            (click)=\\\"Refresh()\\\"\\r\\n            \\r\\n            >\\r\\n        <i class=\\\"fa fa-redo\\\"></i> \\r\\n    </button>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"!IsEmbedded\\\">\\r\\n\\r\\n        <ol class=\\\"breadcrumb\\\">\\r\\n            <li>\\r\\n                <a routerLink=\\\"'/'\\\">{{'Words.Main' | translate }}</a>\\r\\n            </li>\\r\\n                <li>\\r\\n                    <a routerLink=\\\"/Pages/PageTreeList\\\">{{'Pages.Pages__PageTreeList' | translate }}</a>\\r\\n                </li>\\r\\n            <li>\\r\\n                {{'Pages.Pages__PageCreate' | translate }}\\r\\n            </li>\\r\\n        </ol>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-header section-header\\\" *ngIf=\\\"IsEmbedded && !HideHeader\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-8\\\">\\r\\n                {{'Pages.Pages__PageCreate' | translate }}<span *ngIf=\\\"HeaderExtra\\\"> - {{HeaderExtra}}</span>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div><div [ngClass]=\\\"IsEmbedded?'panel panel-default embedded':'container-fluid animated fadeInRight'\\\">\\r\\n\\r\\n    <div [ngClass]=\\\"IsEmbedded?'panel-body':'content-block'\\\">\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"UseLocalization\\\">\\r\\n            <div class=\\\"col-xs-12 col-md-6 col-xs-offset-0 col-md-offset-6 padBottom\\\">\\r\\n                <div class=\\\"btn-group btn-group-sm pull-last\\\">\\r\\n                        <button class=\\\"btn btn-sm\\\" [ngClass]=\\\"CurrentLang=='ar'?'btn-primary':'btn-default'\\\" (click)=\\\"CurrentLang='ar'\\\">\\r\\n                            {{'Words.ar' | translate }}\\r\\n                        </button>\\r\\n                        <button class=\\\"btn btn-sm\\\" [ngClass]=\\\"CurrentLang=='en'?'btn-primary':'btn-default'\\\" (click)=\\\"CurrentLang='en'\\\">\\r\\n                            {{'Words.en' | translate }}\\r\\n                        </button>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        \\r\\n\\r\\n\\r\\n<form #Form=\\\"ngForm\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        \\r\\n<div class=\\\"form-group col-md-8 \\\"\\r\\n     id=\\\"FG_templatePath\\\"\\r\\n     #FG_templatePath=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label>{{'Columns.CreatePageDTO__TemplatePath' | translate }} <span style=\\\"color:red\\\">*</span></label>\\r\\n    <ng-select [items]=\\\"Lookups.TemplatePath\\\"\\r\\n           name=\\\"Form__templatePath\\\"\\r\\n           bindLabel=\\\"name\\\"\\r\\n           bindValue=\\\"name\\\"\\r\\n           [(ngModel)]=\\\"model.templatePath\\\"\\r\\n           required  \\r\\n           [multiple]=\\\"false\\\"></ng-select>\\r\\n    <p *ngIf=\\\"!FG_templatePath.Write\\\">{{FG_templatePath.Value}}</p>\\r\\n\\r\\n    <p *ngIf=\\\"!FG_templatePath.Write\\\">{{FG_templatePath.Value}}</p>\\r\\n\\r\\n    <span *ngIf=\\\"Form.controls['Form__templatePath'] && Form.controls['Form__templatePath'].invalid && (Form.controls['Form__templatePath'].dirty || Form.controls['Form__templatePath'].touched)\\\">\\r<small *ngIf=\\\"Form.controls['Form__templatePath'].errors!.required\\\" class=\\\"form-text text-danger\\\">{{'Messages.field_required' | translate : {p0:'Columns.CreatePageDTO__TemplatePath' | translate } }}</small>\\r\\n</span>\\r\\n</div>\\r\\n\\r\\n\\r\\n        \\r\\n<div class=\\\"form-group col-md-4 \\\"\\r\\n     id=\\\"FG_tenantCode\\\"\\r\\n     #FG_tenantCode=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label>{{'Columns.CreatePageDTO__TenantCode' | translate }} <span style=\\\"color:red\\\">*</span></label>\\r\\n    \\r\\n<select class=\\\"form-control\\\"\\r\\n        name=\\\"Form__tenantCode\\\" \\r\\n        [li-watch]=\\\"model\\\"\\r\\n        [(ngModel)]=\\\"model.tenantCode\\\"\\r\\n        required  >\\r\\n        <option [ngValue]=\\\"null\\\">--({{'Words.Empty' | translate }})--</option>\\r\\n    <option *ngFor=\\\"let item of Lookups.TenantCode\\\" [ngValue]=\\\"item.code\\\">{{item.name}}</option>\\r\\n</select>\\r\\n    <p *ngIf=\\\"!FG_tenantCode.Write\\\">{{FG_tenantCode.Value}}</p>\\r\\n\\r\\n    <span *ngIf=\\\"Form.controls['Form__tenantCode'] && Form.controls['Form__tenantCode'].invalid && (Form.controls['Form__tenantCode'].dirty || Form.controls['Form__tenantCode'].touched)\\\">\\r<small *ngIf=\\\"Form.controls['Form__tenantCode'].errors!.required\\\" class=\\\"form-text text-danger\\\">{{'Messages.field_required' | translate : {p0:'Columns.CreatePageDTO__TenantCode' | translate } }}</small>\\r\\n</span>\\r\\n</div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        \\r\\n<div class=\\\"form-group col-md-4 \\\"\\r\\n     id=\\\"FG_componentDomain\\\"\\r\\n     #FG_componentDomain=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label>{{'Columns.CreatePageDTO__ComponentDomain' | translate }} </label>\\r\\n    <div class=\\\"input-group modal-selector\\\">\\r\\n    <input\\r\\n           class=\\\"form-control\\\"\\r\\n           placeholder=\\\"{{'Columns.CreatePageDTO__ComponentDomain' | translate }}\\\"\\r\\n           name=\\\"Form__componentDomain\\\"\\r\\n           [(ngModel)]=\\\"model.componentDomain\\\"\\r\\n           title=\\\"{{'Columns.CreatePageDTO__ComponentDomain' | translate }}\\\"\\r\\n           [li-watch]=\\\"model\\\"\\r\\n           \\r\\n            (change)=\\\"writePath()\\\" required=\\\"true\\\" >\\r\\n    <div class=\\\"input-group-btn\\\">\\r\\n        <button title=\\\"Select Domain\\\" class=\\\"btn\\\" (click)=\\\"TextBoxWithButtonClick('componentDomain')\\\">\\r\\n            <i class=\\\"fa fa-folder\\\"></i>\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n    \\r\\n</div>\\r\\n\\r\\n        \\r\\n<div class=\\\"form-group col-md-4 \\\"\\r\\n     id=\\\"FG_componentName\\\"\\r\\n     #FG_componentName=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label>{{'Columns.CreatePageDTO__ComponentName' | translate }} <span style=\\\"color:red\\\">*</span></label>\\r\\n    <input type=\\\"text\\\"\\r\\n       class=\\\"form-control \\\"\\r\\n       placeholder=\\\"{{'Columns.CreatePageDTO__ComponentName' | translate }}\\\"\\r\\n       name=\\\"Form__componentName\\\"\\r\\n       [(ngModel)]=\\\"model.componentName\\\"\\r\\n       title=\\\"{{'Columns.CreatePageDTO__ComponentName' | translate }}\\\"\\r\\n       [li-watch]=\\\"model\\\"\\r\\n\\r\\n       \\r\\n       required  (change)=\\\"writePath()\\\" >\\r\\n    <p *ngIf=\\\"!FG_componentName.Write\\\">{{FG_componentName.Value}}</p>\\r\\n\\r\\n\\r\\n    <span *ngIf=\\\"Form.controls['Form__componentName'] && Form.controls['Form__componentName'].invalid && (Form.controls['Form__componentName'].dirty || Form.controls['Form__componentName'].touched)\\\">\\r<small *ngIf=\\\"Form.controls['Form__componentName'].errors!.required\\\" class=\\\"form-text text-danger\\\">{{'Messages.field_required' | translate : {p0:'Columns.CreatePageDTO__ComponentName' | translate } }}</small>\\r\\n</span>\\r\\n</div>\\r\\n\\r\\n        \\r\\n<div class=\\\"form-group col-md-4 \\\"\\r\\n     id=\\\"FG_routeParameters\\\"\\r\\n     #FG_routeParameters=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label>{{'Columns.CreatePageDTO__RouteParameters' | translate }} </label>\\r\\n    <input type=\\\"text\\\"\\r\\n       class=\\\"form-control \\\"\\r\\n       placeholder=\\\"{{'Columns.CreatePageDTO__RouteParameters' | translate }}\\\"\\r\\n       name=\\\"Form__routeParameters\\\"\\r\\n       [(ngModel)]=\\\"model.routeParameters\\\"\\r\\n       title=\\\"{{'Columns.CreatePageDTO__RouteParameters' | translate }}\\\"\\r\\n       [li-watch]=\\\"model\\\"\\r\\n\\r\\n       \\r\\n        >\\r\\n    <p *ngIf=\\\"!FG_routeParameters.Write\\\">{{FG_routeParameters.Value}}</p>\\r\\n\\r\\n\\r\\n    \\r\\n</div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        \\r\\n<div class=\\\"form-group col-md-8 \\\"\\r\\n     id=\\\"FG_componentPath\\\"\\r\\n     #FG_componentPath=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label>{{'Columns.CreatePageDTO__ComponentPath' | translate }} </label>\\r\\n        <p class=\\\"\\\"  >\\r\\n        {{model.componentPath}}\\r\\n    </p>\\r\\n\\r\\n    \\r\\n</div>\\r\\n\\r\\n        \\r\\n<div class=\\\"form-group col-md-4 \\\"\\r\\n     id=\\\"FG_usage\\\"\\r\\n     #FG_usage=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label>{{'Columns.CreatePageDTO__Usage' | translate }} </label>\\r\\n    <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"btn-group btn-group-toggle btnToggle radio-group\\\">\\r\\n                <label class=\\\"btn btn-default\\\" [ngClass]=\\\"model.usage=='R'?'active':''\\\">\\r\\n                    <input type=\\\"radio\\\" name=\\\"__usage\\\" [(ngModel)]=\\\"model.usage\\\" [value]=\\\"'R'\\\"   >\\r\\n                    {{'Words.Route' | translate }}\\r\\n                </label>\\r\\n                <label class=\\\"btn btn-default\\\" [ngClass]=\\\"model.usage=='E'?'active':''\\\">\\r\\n                    <input type=\\\"radio\\\" name=\\\"__usage\\\" [(ngModel)]=\\\"model.usage\\\" [value]=\\\"'E'\\\"   >\\r\\n                    {{'Words.Embedded' | translate }}\\r\\n                </label>\\r\\n                <label class=\\\"btn btn-default\\\" [ngClass]=\\\"model.usage=='RE'?'active':''\\\">\\r\\n                    <input type=\\\"radio\\\" name=\\\"__usage\\\" [(ngModel)]=\\\"model.usage\\\" [value]=\\\"'RE'\\\"   >\\r\\n                    {{'Words.Both' | translate }}\\r\\n                </label>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n    \\r\\n</div>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"model.usage!='E'\\\">\\r\\n        \\r\\n<div class=\\\"form-group col-md-6 \\\"\\r\\n     id=\\\"FG_apps\\\"\\r\\n     #FG_apps=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label>{{'Columns.CreatePageDTO__Apps' | translate }} </label>\\r\\n    <ng-select [items]=\\\"Lookups.Apps\\\"\\r\\n           name=\\\"Form__apps\\\"\\r\\n           bindLabel=\\\"name\\\"\\r\\n           bindValue=\\\"name\\\"\\r\\n           [(ngModel)]=\\\"model.apps\\\"\\r\\n            \\r\\n           [multiple]=\\\"true\\\"></ng-select>\\r\\n    <p *ngIf=\\\"!FG_apps.Write\\\">{{FG_apps.Value}}</p>\\r\\n\\r\\n    <p *ngIf=\\\"!FG_apps.Write\\\">{{FG_apps.Value}}</p>\\r\\n\\r\\n    \\r\\n</div>\\r\\n\\r\\n        \\r\\n<div class=\\\"form-group col-md-4 col-md-offset-2\\\"\\r\\n     id=\\\"FG_specialPermission\\\"\\r\\n     #FG_specialPermission=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label>{{'Columns.CreatePageDTO__SpecialPermission' | translate }} </label>\\r\\n    <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"btn-group btn-group-toggle btnToggle radio-group\\\">\\r\\n                <label class=\\\"btn btn-default\\\" [ngClass]=\\\"model.specialPermission=='anonymous'?'active':''\\\">\\r\\n                    <input type=\\\"radio\\\" name=\\\"__specialPermission\\\" [(ngModel)]=\\\"model.specialPermission\\\" [value]=\\\"'anonymous'\\\"   >\\r\\n                    {{'Words.Anonymous' | translate }}\\r\\n                </label>\\r\\n                <label class=\\\"btn btn-default\\\" [ngClass]=\\\"model.specialPermission=='allowAll'?'active':''\\\">\\r\\n                    <input type=\\\"radio\\\" name=\\\"__specialPermission\\\" [(ngModel)]=\\\"model.specialPermission\\\" [value]=\\\"'allowAll'\\\"   >\\r\\n                    {{'Words.Allow all' | translate }}\\r\\n                </label>\\r\\n                <label class=\\\"btn btn-default\\\" [ngClass]=\\\"model.specialPermission=='null'?'active':''\\\">\\r\\n                    <input type=\\\"radio\\\" name=\\\"__specialPermission\\\" [(ngModel)]=\\\"model.specialPermission\\\" [value]=\\\"'null'\\\"   >\\r\\n                    {{'Words.Resource' | translate }}\\r\\n                </label>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n    \\r\\n</div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"model.usage!='E'\\\">\\r\\n        \\r\\n<div class=\\\"form-group col-md-6 \\\"\\r\\n     id=\\\"FG_resourceId\\\"\\r\\n     #FG_resourceId=\\\"bsFormGroup\\\" bs-group\\r\\n      *ngIf=\\\"!model.specialPermission\\\">\\r\\n    <label>{{'Columns.CreatePageDTO__ResourceId' | translate }} <span style=\\\"color:red\\\">*</span></label>\\r\\n    \\r\\n<select class=\\\"form-control\\\"\\r\\n        name=\\\"Form__resourceId\\\" \\r\\n        [li-watch]=\\\"model\\\"\\r\\n        [(ngModel)]=\\\"model.resourceId\\\"\\r\\n        required  >\\r\\n        <option [ngValue]=\\\"null\\\">--({{'Words.Empty' | translate }})--</option>\\r\\n    <option *ngFor=\\\"let item of Lookups.Resources\\\" [ngValue]=\\\"item.id\\\">{{item.name}}</option>\\r\\n</select>\\r\\n    <p *ngIf=\\\"!FG_resourceId.Write\\\">{{FG_resourceId.Value}}</p>\\r\\n\\r\\n    <span *ngIf=\\\"Form.controls['Form__resourceId'] && Form.controls['Form__resourceId'].invalid && (Form.controls['Form__resourceId'].dirty || Form.controls['Form__resourceId'].touched)\\\">\\r<small *ngIf=\\\"Form.controls['Form__resourceId'].errors!.required\\\" class=\\\"form-text text-danger\\\">{{'Messages.field_required' | translate : {p0:'Columns.CreatePageDTO__ResourceId' | translate } }}</small>\\r\\n</span>\\r\\n</div>\\r\\n\\r\\n        \\r\\n<div class=\\\"form-group col-md-6 \\\"\\r\\n     id=\\\"FG_actionType\\\"\\r\\n     #FG_actionType=\\\"bsFormGroup\\\" bs-group\\r\\n      *ngIf=\\\"!model.specialPermission\\\">\\r\\n    <label>{{'Columns.CreatePageDTO__ActionType' | translate }} </label>\\r\\n    <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"btn-group btn-group-toggle btnToggle radio-group\\\">\\r\\n                <label class=\\\"btn btn-default\\\" [ngClass]=\\\"model.actionType=='view'?'active':''\\\">\\r\\n                    <input type=\\\"radio\\\" name=\\\"__actionType\\\" [(ngModel)]=\\\"model.actionType\\\" [value]=\\\"'view'\\\"   >\\r\\n                    {{'Words.View' | translate }}\\r\\n                </label>\\r\\n                <label class=\\\"btn btn-default\\\" [ngClass]=\\\"model.actionType=='update'?'active':''\\\">\\r\\n                    <input type=\\\"radio\\\" name=\\\"__actionType\\\" [(ngModel)]=\\\"model.actionType\\\" [value]=\\\"'update'\\\"   >\\r\\n                    {{'Words.Update' | translate }}\\r\\n                </label>\\r\\n                <label class=\\\"btn btn-default\\\" [ngClass]=\\\"model.actionType=='insert'?'active':''\\\">\\r\\n                    <input type=\\\"radio\\\" name=\\\"__actionType\\\" [(ngModel)]=\\\"model.actionType\\\" [value]=\\\"'insert'\\\"   >\\r\\n                    {{'Words.Insert' | translate }}\\r\\n                </label>\\r\\n                <label class=\\\"btn btn-default\\\" [ngClass]=\\\"model.actionType=='details'?'active':''\\\">\\r\\n                    <input type=\\\"radio\\\" name=\\\"__actionType\\\" [(ngModel)]=\\\"model.actionType\\\" [value]=\\\"'details'\\\"   >\\r\\n                    {{'Words.Details' | translate }}\\r\\n                </label>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n    \\r\\n</div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        \\r\\n<div class=\\\"form-group col-md-4 \\\"\\r\\n     id=\\\"FG_layout\\\"\\r\\n     #FG_layout=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label>{{'Columns.CreatePageDTO__Layout' | translate }} </label>\\r\\n    \\r\\n<select class=\\\"form-control\\\"\\r\\n        name=\\\"Form__layout\\\" \\r\\n        [li-watch]=\\\"model\\\"\\r\\n        [(ngModel)]=\\\"model.layout\\\"\\r\\n         >\\r\\n        <option [ngValue]=\\\"null\\\">--({{'Words.Empty' | translate }})--</option>\\r\\n    <option *ngFor=\\\"let item of Lookups.Layout\\\" [ngValue]=\\\"item.name\\\">{{item.name}}</option>\\r\\n</select>\\r\\n    <p *ngIf=\\\"!FG_layout.Write\\\">{{FG_layout.Value}}</p>\\r\\n\\r\\n    \\r\\n</div>\\r\\n\\r\\n        \\r\\n<div class=\\\"form-group col-md-2 \\\"\\r\\n     id=\\\"FG_navigationGroup\\\"\\r\\n     #FG_navigationGroup=\\\"bsFormGroup\\\" bs-group\\r\\n      *ngIf=\\\"model.usage!='E'\\\">\\r\\n    <label>{{'Columns.CreatePageDTO__NavigationGroup' | translate }} </label>\\r\\n    <input type=\\\"text\\\"\\r\\n       class=\\\"form-control \\\"\\r\\n       placeholder=\\\"{{'Columns.CreatePageDTO__NavigationGroup' | translate }}\\\"\\r\\n       name=\\\"Form__navigationGroup\\\"\\r\\n       [(ngModel)]=\\\"model.navigationGroup\\\"\\r\\n       title=\\\"{{'Columns.CreatePageDTO__NavigationGroup' | translate }}\\\"\\r\\n       [li-watch]=\\\"model\\\"\\r\\n\\r\\n       autocomplete=\\\"off\\\" list=\\\"AC__Form__navigationGroup\\\"\\r\\n        >\\r\\n    <p *ngIf=\\\"!FG_navigationGroup.Write\\\">{{FG_navigationGroup.Value}}</p>\\r\\n\\r\\n    <datalist id=\\\"AC__Form__navigationGroup\\\">\\r\\n        <option *ngFor=\\\"let op of Lookups.NavigationGroup\\\">{{op}}</option>\\r\\n    </datalist>\\r\\n\\r\\n    \\r\\n</div>\\r\\n\\r\\n        \\r\\n<div class=\\\"form-group col-md-2 \\\"\\r\\n     id=\\\"FG_collectionId\\\"\\r\\n     #FG_collectionId=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label>{{'Columns.CreatePageDTO__CollectionId' | translate }} </label>\\r\\n    \\r\\n<select class=\\\"form-control\\\"\\r\\n        name=\\\"Form__collectionId\\\" \\r\\n        [li-watch]=\\\"model\\\"\\r\\n        [(ngModel)]=\\\"model.collectionId\\\"\\r\\n         >\\r\\n        <option [ngValue]=\\\"null\\\">--({{'Words.Empty' | translate }})--</option>\\r\\n    <option *ngFor=\\\"let item of Lookups.Collection\\\" [ngValue]=\\\"item.id\\\">{{item.name}}</option>\\r\\n</select>\\r\\n    <p *ngIf=\\\"!FG_collectionId.Write\\\">{{FG_collectionId.Value}}</p>\\r\\n\\r\\n    \\r\\n</div>\\r\\n\\r\\n        \\r\\n<div class=\\\"form-group col-md-4 \\\"\\r\\n     id=\\\"FG_defaultAccessibility\\\"\\r\\n     #FG_defaultAccessibility=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label>{{'Columns.CreatePageDTO__DefaultAccessibility' | translate }} </label>\\r\\n    <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"btn-group btn-group-toggle btnToggle radio-group\\\">\\r\\n                <label class=\\\"btn btn-default\\\" [ngClass]=\\\"model.defaultAccessibility==1?'active':''\\\">\\r\\n                    <input type=\\\"radio\\\" name=\\\"__defaultAccessibility\\\" [(ngModel)]=\\\"model.defaultAccessibility\\\" [value]=\\\"1\\\"   >\\r\\n                    {{'Words.Read Only' | translate }}\\r\\n                </label>\\r\\n                <label class=\\\"btn btn-default\\\" [ngClass]=\\\"model.defaultAccessibility==2?'active':''\\\">\\r\\n                    <input type=\\\"radio\\\" name=\\\"__defaultAccessibility\\\" [(ngModel)]=\\\"model.defaultAccessibility\\\" [value]=\\\"2\\\"   >\\r\\n                    {{'Words.Read Write' | translate }}\\r\\n                </label>\\r\\n                <label class=\\\"btn btn-default\\\" [ngClass]=\\\"model.defaultAccessibility==3?'active':''\\\">\\r\\n                    <input type=\\\"radio\\\" name=\\\"__defaultAccessibility\\\" [(ngModel)]=\\\"model.defaultAccessibility\\\" [value]=\\\"3\\\"   >\\r\\n                    {{'Words.Hide' | translate }}\\r\\n                </label>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n    \\r\\n</div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n    </div>\\r\\n</form>\\r\\n\\r\\n\\r\\n        \\r\\n        <div class=\\\"row submit-buttons\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"pull-last\\\">\\r\\n                    \\r\\n        <button class=\\\"btn btn-primary\\\"\\r\\n            [disabled]=\\\"!CanSubmit\\\"\\r\\n            (click)=\\\"Submit()\\\">\\r\\n        {{'Words.Save' | translate }}\\r\\n    </button>\\r\\n\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\n<div style='display:none' #lookupOptionsContainer values='{\\\"TemplatePath\\\":\\\"C0\\\",\\\"TenantCode\\\":\\\"C0\\\",\\\"Apps\\\":\\\"C0\\\",\\\"Resources\\\":\\\"C0\\\",\\\"Layout\\\":\\\"C0\\\",\\\"NavigationGroup\\\":\\\"C0\\\",\\\"Collection\\\":\\\"C0\\\"}'></div>\\n<div style='display:none' #viewParamsContainer values='{\\\"ModelType\\\":null,\\\"AddUrl\\\":null,\\\"EditUrl\\\":null,\\\"DetailsUrl\\\":null,\\\"ListUrl\\\":\\\"/Pages/PageTreeList\\\",\\\"Fields\\\":[],\\\"Other\\\":{\\\"DomainModal\\\":\\\"Pages/DomainTreeSelect\\\",\\\"CustomizeLink\\\":\\\"PageControls/PageCustomization\\\"}}'></div>\";","import { Component } from \"@angular/core\";\r\nimport { PageCreateBase } from \"Example/Pages/PageCreateBase\";\r\n\r\n@Component({ template: require('./PageEdit.html'), selector : \"pageEdit\" })\r\nexport class PageEdit extends PageCreateBase {\r\n\tpublic GetPageId() : number { return 1936544141000; }\r\n\tpublic get CollectionId(): string | null { return null; }\r\n}","module.exports = \"<div class=\\\"page-header container-fluid\\\" *ngIf=\\\"!IsEmbedded !HideHeader\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-5 col-xs-12\\\">\\r\\n            <h2>{{'Pages.Pages__PageEdit' | translate }}<span *ngIf=\\\"HeaderExtra\\\"> - {{HeaderExtra}}</span></h2>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-7 col-xs-12\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n                <div class=\\\"col-md-12 col-xs-12 padTop padBottom\\\">\\r\\n                    <div class=\\\"pull-last btn-group\\\">\\r\\n\\r\\n                        \\r\\n                        \\r\\n    <button class=\\\"btn btn-info margin-sides\\\"\\r\\n            (click)=\\\"Refresh()\\\"\\r\\n            \\r\\n            >\\r\\n        <i class=\\\"fa fa-redo\\\"></i> \\r\\n    </button>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"!IsEmbedded\\\">\\r\\n\\r\\n        <ol class=\\\"breadcrumb\\\">\\r\\n            <li>\\r\\n                <a routerLink=\\\"'/'\\\">{{'Words.Main' | translate }}</a>\\r\\n            </li>\\r\\n                <li>\\r\\n                    <a routerLink=\\\"/Pages/PageTreeList\\\">{{'Pages.Pages__PageTreeList' | translate }}</a>\\r\\n                </li>\\r\\n            <li>\\r\\n                {{'Pages.Pages__PageEdit' | translate }}\\r\\n            </li>\\r\\n        </ol>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-header section-header\\\" *ngIf=\\\"IsEmbedded && !HideHeader\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-8\\\">\\r\\n                {{'Pages.Pages__PageEdit' | translate }}<span *ngIf=\\\"HeaderExtra\\\"> - {{HeaderExtra}}</span>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div><div [ngClass]=\\\"IsEmbedded?'panel panel-default embedded':'container-fluid animated fadeInRight'\\\">\\r\\n\\r\\n    <div [ngClass]=\\\"IsEmbedded?'panel-body':'content-block'\\\">\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"UseLocalization\\\">\\r\\n            <div class=\\\"col-xs-12 col-md-6 col-xs-offset-0 col-md-offset-6 padBottom\\\">\\r\\n                <div class=\\\"btn-group btn-group-sm pull-last\\\">\\r\\n                        <button class=\\\"btn btn-sm\\\" [ngClass]=\\\"CurrentLang=='ar'?'btn-primary':'btn-default'\\\" (click)=\\\"CurrentLang='ar'\\\">\\r\\n                            {{'Words.ar' | translate }}\\r\\n                        </button>\\r\\n                        <button class=\\\"btn btn-sm\\\" [ngClass]=\\\"CurrentLang=='en'?'btn-primary':'btn-default'\\\" (click)=\\\"CurrentLang='en'\\\">\\r\\n                            {{'Words.en' | translate }}\\r\\n                        </button>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        \\r\\n\\r\\n\\r\\n<form #Form=\\\"ngForm\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        \\r\\n<div class=\\\"form-group col-md-8 \\\"\\r\\n     id=\\\"FG_templatePath\\\"\\r\\n     #FG_templatePath=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label>{{'Columns.CreatePageDTO__TemplatePath' | translate }} <span style=\\\"color:red\\\">*</span></label>\\r\\n    <ng-select [items]=\\\"Lookups.TemplatePath\\\"\\r\\n           name=\\\"Form__templatePath\\\"\\r\\n           bindLabel=\\\"name\\\"\\r\\n           bindValue=\\\"name\\\"\\r\\n           [(ngModel)]=\\\"model.templatePath\\\"\\r\\n           required  \\r\\n           [multiple]=\\\"false\\\"></ng-select>\\r\\n    <p *ngIf=\\\"!FG_templatePath.Write\\\">{{FG_templatePath.Value}}</p>\\r\\n\\r\\n    <p *ngIf=\\\"!FG_templatePath.Write\\\">{{FG_templatePath.Value}}</p>\\r\\n\\r\\n    <span *ngIf=\\\"Form.controls['Form__templatePath'] && Form.controls['Form__templatePath'].invalid && (Form.controls['Form__templatePath'].dirty || Form.controls['Form__templatePath'].touched)\\\">\\r<small *ngIf=\\\"Form.controls['Form__templatePath'].errors!.required\\\" class=\\\"form-text text-danger\\\">{{'Messages.field_required' | translate : {p0:'Columns.CreatePageDTO__TemplatePath' | translate } }}</small>\\r\\n</span>\\r\\n</div>\\r\\n\\r\\n\\r\\n        \\r\\n<div class=\\\"form-group col-md-4 \\\" >\\r\\n    <label>{{'Columns.CreatePageDTO__TenantCode' | translate }}</label>\\r\\n        <p class=\\\"\\\"  >\\r\\n        {{model.tenantCode}}\\r\\n    </p>\\r\\n\\r\\n    \\r\\n</div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        \\r\\n<div class=\\\"form-group col-md-4 \\\"\\r\\n     id=\\\"FG_componentDomain\\\"\\r\\n     #FG_componentDomain=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label>{{'Columns.CreatePageDTO__ComponentDomain' | translate }} </label>\\r\\n    <div class=\\\"input-group modal-selector\\\">\\r\\n    <input\\r\\n           class=\\\"form-control\\\"\\r\\n           placeholder=\\\"{{'Columns.CreatePageDTO__ComponentDomain' | translate }}\\\"\\r\\n           name=\\\"Form__componentDomain\\\"\\r\\n           [(ngModel)]=\\\"model.componentDomain\\\"\\r\\n           title=\\\"{{'Columns.CreatePageDTO__ComponentDomain' | translate }}\\\"\\r\\n           [li-watch]=\\\"model\\\"\\r\\n           \\r\\n            (change)=\\\"writePath()\\\" required=\\\"true\\\" >\\r\\n    <div class=\\\"input-group-btn\\\">\\r\\n        <button title=\\\"Select Domain\\\" class=\\\"btn\\\" (click)=\\\"TextBoxWithButtonClick('componentDomain')\\\">\\r\\n            <i class=\\\"fa fa-folder\\\"></i>\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n    \\r\\n</div>\\r\\n\\r\\n        \\r\\n<div class=\\\"form-group col-md-4 \\\"\\r\\n     id=\\\"FG_componentName\\\"\\r\\n     #FG_componentName=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label>{{'Columns.CreatePageDTO__ComponentName' | translate }} <span style=\\\"color:red\\\">*</span></label>\\r\\n    <input type=\\\"text\\\"\\r\\n       class=\\\"form-control \\\"\\r\\n       placeholder=\\\"{{'Columns.CreatePageDTO__ComponentName' | translate }}\\\"\\r\\n       name=\\\"Form__componentName\\\"\\r\\n       [(ngModel)]=\\\"model.componentName\\\"\\r\\n       title=\\\"{{'Columns.CreatePageDTO__ComponentName' | translate }}\\\"\\r\\n       [li-watch]=\\\"model\\\"\\r\\n\\r\\n       \\r\\n       required  (change)=\\\"writePath()\\\" >\\r\\n    <p *ngIf=\\\"!FG_componentName.Write\\\">{{FG_componentName.Value}}</p>\\r\\n\\r\\n\\r\\n    <span *ngIf=\\\"Form.controls['Form__componentName'] && Form.controls['Form__componentName'].invalid && (Form.controls['Form__componentName'].dirty || Form.controls['Form__componentName'].touched)\\\">\\r<small *ngIf=\\\"Form.controls['Form__componentName'].errors!.required\\\" class=\\\"form-text text-danger\\\">{{'Messages.field_required' | translate : {p0:'Columns.CreatePageDTO__ComponentName' | translate } }}</small>\\r\\n</span>\\r\\n</div>\\r\\n\\r\\n        \\r\\n<div class=\\\"form-group col-md-4 \\\"\\r\\n     id=\\\"FG_routeParameters\\\"\\r\\n     #FG_routeParameters=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label>{{'Columns.CreatePageDTO__RouteParameters' | translate }} </label>\\r\\n    <input type=\\\"text\\\"\\r\\n       class=\\\"form-control \\\"\\r\\n       placeholder=\\\"{{'Columns.CreatePageDTO__RouteParameters' | translate }}\\\"\\r\\n       name=\\\"Form__routeParameters\\\"\\r\\n       [(ngModel)]=\\\"model.routeParameters\\\"\\r\\n       title=\\\"{{'Columns.CreatePageDTO__RouteParameters' | translate }}\\\"\\r\\n       [li-watch]=\\\"model\\\"\\r\\n\\r\\n       \\r\\n        >\\r\\n    <p *ngIf=\\\"!FG_routeParameters.Write\\\">{{FG_routeParameters.Value}}</p>\\r\\n\\r\\n\\r\\n    \\r\\n</div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        \\r\\n<div class=\\\"form-group col-md-8 \\\"\\r\\n     id=\\\"FG_componentPath\\\"\\r\\n     #FG_componentPath=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label>{{'Columns.CreatePageDTO__ComponentPath' | translate }} </label>\\r\\n        <p class=\\\"\\\"  >\\r\\n        {{model.componentPath}}\\r\\n    </p>\\r\\n\\r\\n    \\r\\n</div>\\r\\n\\r\\n        \\r\\n<div class=\\\"form-group col-md-4 \\\"\\r\\n     id=\\\"FG_usage\\\"\\r\\n     #FG_usage=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label>{{'Columns.CreatePageDTO__Usage' | translate }} </label>\\r\\n    <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"btn-group btn-group-toggle btnToggle radio-group\\\">\\r\\n                <label class=\\\"btn btn-default\\\" [ngClass]=\\\"model.usage=='R'?'active':''\\\">\\r\\n                    <input type=\\\"radio\\\" name=\\\"__usage\\\" [(ngModel)]=\\\"model.usage\\\" [value]=\\\"'R'\\\"   >\\r\\n                    {{'Words.Route' | translate }}\\r\\n                </label>\\r\\n                <label class=\\\"btn btn-default\\\" [ngClass]=\\\"model.usage=='E'?'active':''\\\">\\r\\n                    <input type=\\\"radio\\\" name=\\\"__usage\\\" [(ngModel)]=\\\"model.usage\\\" [value]=\\\"'E'\\\"   >\\r\\n                    {{'Words.Embedded' | translate }}\\r\\n                </label>\\r\\n                <label class=\\\"btn btn-default\\\" [ngClass]=\\\"model.usage=='RE'?'active':''\\\">\\r\\n                    <input type=\\\"radio\\\" name=\\\"__usage\\\" [(ngModel)]=\\\"model.usage\\\" [value]=\\\"'RE'\\\"   >\\r\\n                    {{'Words.Both' | translate }}\\r\\n                </label>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n    \\r\\n</div>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"model.usage!='E'\\\">\\r\\n        \\r\\n<div class=\\\"form-group col-md-6 \\\"\\r\\n     id=\\\"FG_apps\\\"\\r\\n     #FG_apps=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label>{{'Columns.CreatePageDTO__Apps' | translate }} </label>\\r\\n    <ng-select [items]=\\\"Lookups.Apps\\\"\\r\\n           name=\\\"Form__apps\\\"\\r\\n           bindLabel=\\\"name\\\"\\r\\n           bindValue=\\\"name\\\"\\r\\n           [(ngModel)]=\\\"model.apps\\\"\\r\\n            \\r\\n           [multiple]=\\\"true\\\"></ng-select>\\r\\n    <p *ngIf=\\\"!FG_apps.Write\\\">{{FG_apps.Value}}</p>\\r\\n\\r\\n    <p *ngIf=\\\"!FG_apps.Write\\\">{{FG_apps.Value}}</p>\\r\\n\\r\\n    \\r\\n</div>\\r\\n\\r\\n        \\r\\n<div class=\\\"form-group col-md-4 col-md-offset-2\\\"\\r\\n     id=\\\"FG_specialPermission\\\"\\r\\n     #FG_specialPermission=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label>{{'Columns.CreatePageDTO__SpecialPermission' | translate }} </label>\\r\\n    <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"btn-group btn-group-toggle btnToggle radio-group\\\">\\r\\n                <label class=\\\"btn btn-default\\\" [ngClass]=\\\"model.specialPermission=='anonymous'?'active':''\\\">\\r\\n                    <input type=\\\"radio\\\" name=\\\"__specialPermission\\\" [(ngModel)]=\\\"model.specialPermission\\\" [value]=\\\"'anonymous'\\\"   >\\r\\n                    {{'Words.Anonymous' | translate }}\\r\\n                </label>\\r\\n                <label class=\\\"btn btn-default\\\" [ngClass]=\\\"model.specialPermission=='allowAll'?'active':''\\\">\\r\\n                    <input type=\\\"radio\\\" name=\\\"__specialPermission\\\" [(ngModel)]=\\\"model.specialPermission\\\" [value]=\\\"'allowAll'\\\"   >\\r\\n                    {{'Words.Allow all' | translate }}\\r\\n                </label>\\r\\n                <label class=\\\"btn btn-default\\\" [ngClass]=\\\"model.specialPermission=='null'?'active':''\\\">\\r\\n                    <input type=\\\"radio\\\" name=\\\"__specialPermission\\\" [(ngModel)]=\\\"model.specialPermission\\\" [value]=\\\"'null'\\\"   >\\r\\n                    {{'Words.Resource' | translate }}\\r\\n                </label>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n    \\r\\n</div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"model.usage!='E'\\\">\\r\\n        \\r\\n<div class=\\\"form-group col-md-6 \\\"\\r\\n     id=\\\"FG_resourceId\\\"\\r\\n     #FG_resourceId=\\\"bsFormGroup\\\" bs-group\\r\\n      *ngIf=\\\"!model.specialPermission\\\">\\r\\n    <label>{{'Columns.CreatePageDTO__ResourceId' | translate }} <span style=\\\"color:red\\\">*</span></label>\\r\\n    \\r\\n<select class=\\\"form-control\\\"\\r\\n        name=\\\"Form__resourceId\\\" \\r\\n        [li-watch]=\\\"model\\\"\\r\\n        [(ngModel)]=\\\"model.resourceId\\\"\\r\\n        required  >\\r\\n        <option [ngValue]=\\\"null\\\">--({{'Words.Empty' | translate }})--</option>\\r\\n    <option *ngFor=\\\"let item of Lookups.Resources\\\" [ngValue]=\\\"item.id\\\">{{item.name}}</option>\\r\\n</select>\\r\\n    <p *ngIf=\\\"!FG_resourceId.Write\\\">{{FG_resourceId.Value}}</p>\\r\\n\\r\\n    <span *ngIf=\\\"Form.controls['Form__resourceId'] && Form.controls['Form__resourceId'].invalid && (Form.controls['Form__resourceId'].dirty || Form.controls['Form__resourceId'].touched)\\\">\\r<small *ngIf=\\\"Form.controls['Form__resourceId'].errors!.required\\\" class=\\\"form-text text-danger\\\">{{'Messages.field_required' | translate : {p0:'Columns.CreatePageDTO__ResourceId' | translate } }}</small>\\r\\n</span>\\r\\n</div>\\r\\n\\r\\n        \\r\\n<div class=\\\"form-group col-md-6 \\\"\\r\\n     id=\\\"FG_actionType\\\"\\r\\n     #FG_actionType=\\\"bsFormGroup\\\" bs-group\\r\\n      *ngIf=\\\"!model.specialPermission\\\">\\r\\n    <label>{{'Columns.CreatePageDTO__ActionType' | translate }} </label>\\r\\n    <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"btn-group btn-group-toggle btnToggle radio-group\\\">\\r\\n                <label class=\\\"btn btn-default\\\" [ngClass]=\\\"model.actionType=='view'?'active':''\\\">\\r\\n                    <input type=\\\"radio\\\" name=\\\"__actionType\\\" [(ngModel)]=\\\"model.actionType\\\" [value]=\\\"'view'\\\"   >\\r\\n                    {{'Words.View' | translate }}\\r\\n                </label>\\r\\n                <label class=\\\"btn btn-default\\\" [ngClass]=\\\"model.actionType=='update'?'active':''\\\">\\r\\n                    <input type=\\\"radio\\\" name=\\\"__actionType\\\" [(ngModel)]=\\\"model.actionType\\\" [value]=\\\"'update'\\\"   >\\r\\n                    {{'Words.Update' | translate }}\\r\\n                </label>\\r\\n                <label class=\\\"btn btn-default\\\" [ngClass]=\\\"model.actionType=='insert'?'active':''\\\">\\r\\n                    <input type=\\\"radio\\\" name=\\\"__actionType\\\" [(ngModel)]=\\\"model.actionType\\\" [value]=\\\"'insert'\\\"   >\\r\\n                    {{'Words.Insert' | translate }}\\r\\n                </label>\\r\\n                <label class=\\\"btn btn-default\\\" [ngClass]=\\\"model.actionType=='details'?'active':''\\\">\\r\\n                    <input type=\\\"radio\\\" name=\\\"__actionType\\\" [(ngModel)]=\\\"model.actionType\\\" [value]=\\\"'details'\\\"   >\\r\\n                    {{'Words.Details' | translate }}\\r\\n                </label>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n    \\r\\n</div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        \\r\\n<div class=\\\"form-group col-md-4 \\\"\\r\\n     id=\\\"FG_layout\\\"\\r\\n     #FG_layout=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label>{{'Columns.CreatePageDTO__Layout' | translate }} </label>\\r\\n    \\r\\n<select class=\\\"form-control\\\"\\r\\n        name=\\\"Form__layout\\\" \\r\\n        [li-watch]=\\\"model\\\"\\r\\n        [(ngModel)]=\\\"model.layout\\\"\\r\\n         >\\r\\n        <option [ngValue]=\\\"null\\\">--({{'Words.Empty' | translate }})--</option>\\r\\n    <option *ngFor=\\\"let item of Lookups.Layout\\\" [ngValue]=\\\"item.name\\\">{{item.name}}</option>\\r\\n</select>\\r\\n    <p *ngIf=\\\"!FG_layout.Write\\\">{{FG_layout.Value}}</p>\\r\\n\\r\\n    \\r\\n</div>\\r\\n\\r\\n        \\r\\n<div class=\\\"form-group col-md-2 \\\"\\r\\n     id=\\\"FG_navigationGroup\\\"\\r\\n     #FG_navigationGroup=\\\"bsFormGroup\\\" bs-group\\r\\n      *ngIf=\\\"model.usage!='E'\\\">\\r\\n    <label>{{'Columns.CreatePageDTO__NavigationGroup' | translate }} </label>\\r\\n    <input type=\\\"text\\\"\\r\\n       class=\\\"form-control \\\"\\r\\n       placeholder=\\\"{{'Columns.CreatePageDTO__NavigationGroup' | translate }}\\\"\\r\\n       name=\\\"Form__navigationGroup\\\"\\r\\n       [(ngModel)]=\\\"model.navigationGroup\\\"\\r\\n       title=\\\"{{'Columns.CreatePageDTO__NavigationGroup' | translate }}\\\"\\r\\n       [li-watch]=\\\"model\\\"\\r\\n\\r\\n       autocomplete=\\\"off\\\" list=\\\"AC__Form__navigationGroup\\\"\\r\\n        >\\r\\n    <p *ngIf=\\\"!FG_navigationGroup.Write\\\">{{FG_navigationGroup.Value}}</p>\\r\\n\\r\\n    <datalist id=\\\"AC__Form__navigationGroup\\\">\\r\\n        <option *ngFor=\\\"let op of Lookups.NavigationGroup\\\">{{op}}</option>\\r\\n    </datalist>\\r\\n\\r\\n    \\r\\n</div>\\r\\n\\r\\n        \\r\\n<div class=\\\"form-group col-md-2 \\\"\\r\\n     id=\\\"FG_collectionId\\\"\\r\\n     #FG_collectionId=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label>{{'Columns.CreatePageDTO__CollectionId' | translate }} </label>\\r\\n    \\r\\n<select class=\\\"form-control\\\"\\r\\n        name=\\\"Form__collectionId\\\" \\r\\n        [li-watch]=\\\"model\\\"\\r\\n        [(ngModel)]=\\\"model.collectionId\\\"\\r\\n         >\\r\\n        <option [ngValue]=\\\"null\\\">--({{'Words.Empty' | translate }})--</option>\\r\\n    <option *ngFor=\\\"let item of Lookups.Collection\\\" [ngValue]=\\\"item.id\\\">{{item.name}}</option>\\r\\n</select>\\r\\n    <p *ngIf=\\\"!FG_collectionId.Write\\\">{{FG_collectionId.Value}}</p>\\r\\n\\r\\n    \\r\\n</div>\\r\\n\\r\\n        \\r\\n<div class=\\\"form-group col-md-4 \\\"\\r\\n     id=\\\"FG_defaultAccessibility\\\"\\r\\n     #FG_defaultAccessibility=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label>{{'Columns.CreatePageDTO__DefaultAccessibility' | translate }} </label>\\r\\n    <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"btn-group btn-group-toggle btnToggle radio-group\\\">\\r\\n                <label class=\\\"btn btn-default\\\" [ngClass]=\\\"model.defaultAccessibility==1?'active':''\\\">\\r\\n                    <input type=\\\"radio\\\" name=\\\"__defaultAccessibility\\\" [(ngModel)]=\\\"model.defaultAccessibility\\\" [value]=\\\"1\\\"   >\\r\\n                    {{'Words.Read Only' | translate }}\\r\\n                </label>\\r\\n                <label class=\\\"btn btn-default\\\" [ngClass]=\\\"model.defaultAccessibility==2?'active':''\\\">\\r\\n                    <input type=\\\"radio\\\" name=\\\"__defaultAccessibility\\\" [(ngModel)]=\\\"model.defaultAccessibility\\\" [value]=\\\"2\\\"   >\\r\\n                    {{'Words.Read Write' | translate }}\\r\\n                </label>\\r\\n                <label class=\\\"btn btn-default\\\" [ngClass]=\\\"model.defaultAccessibility==3?'active':''\\\">\\r\\n                    <input type=\\\"radio\\\" name=\\\"__defaultAccessibility\\\" [(ngModel)]=\\\"model.defaultAccessibility\\\" [value]=\\\"3\\\"   >\\r\\n                    {{'Words.Hide' | translate }}\\r\\n                </label>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n    \\r\\n</div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n    </div>\\r\\n</form>\\r\\n\\r\\n\\r\\n        \\r\\n        <div class=\\\"row submit-buttons\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"pull-last\\\">\\r\\n                    \\r\\n        <button class=\\\"btn btn-primary\\\"\\r\\n            [disabled]=\\\"!CanSubmit\\\"\\r\\n            (click)=\\\"Submit()\\\">\\r\\n        {{'Words.Save' | translate }}\\r\\n    </button>\\r\\n\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\n<div style='display:none' #lookupOptionsContainer values='{\\\"TemplatePath\\\":\\\"C0\\\",\\\"TenantCode\\\":\\\"C0\\\",\\\"Apps\\\":\\\"C0\\\",\\\"Resources\\\":\\\"C0\\\",\\\"Layout\\\":\\\"C0\\\",\\\"NavigationGroup\\\":\\\"C0\\\",\\\"Collection\\\":\\\"C0\\\"}'></div>\\n<div style='display:none' #viewParamsContainer values='{\\\"ModelType\\\":null,\\\"AddUrl\\\":null,\\\"EditUrl\\\":null,\\\"DetailsUrl\\\":null,\\\"ListUrl\\\":\\\"/Pages/PageTreeList\\\",\\\"Fields\\\":[],\\\"Other\\\":{\\\"DomainModal\\\":\\\"Pages/DomainTreeSelect\\\",\\\"CustomizeLink\\\":\\\"PageControls/PageCustomization\\\"}}'></div>\";","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { CodeShellModule } from \"codeshell/codeShellModule\";\r\nimport { SharedModule } from \"../Shared/SharedModule\";\r\nimport { Registry } from \"codeshell/core\";\r\nimport { AuthFilter, ResourceActions } from \"codeshell/security\";\r\n\r\nimport { ServerConfigBase } from \"codeshell/core\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { PageCategoriesTreeList } from \"./PageCategoriesTreeList\";\nimport { PageCategoryEdit } from \"./PageCategoryEdit\";\n\r\n\r\n@NgModule({\r\n    declarations: [PageCategoriesTreeList,PageCategoryEdit,],\r\n    exports: [PageCategoriesTreeList,PageCategoryEdit,],\r\n    imports: [\r\n\t\tSharedModule,\r\n        RouterModule.forChild([\r\n\t\t\t﻿{ path : \"PageCategoriesTreeList\", component : PageCategoriesTreeList, canActivate: [AuthFilter], data: { name : \"PageCategories__PageCategoriesTreeList\", navigate: false, resource:\"PageCategoriesTreeList\", action: \"anonymous\", apps:null }},\n\t\t\t﻿{ path : \"PageCategoryEdit/:id\", component : PageCategoryEdit, canActivate: [AuthFilter], data: { name : \"PageCategories__PageCategoryEdit\", navigate: false, resource:\"\", action: \"allowAll\", apps:null }},\n\r\n\t\t])\r\n    ]\r\n})\r\nexport class PageCategoriesModule {\r\n\r\n    constructor(trans: TranslateService, conf: ServerConfigBase) {\r\n        trans.setDefaultLang(conf.Locale);\r\n        trans.use(conf.Locale);\r\n    }\r\n}\r\n\r\nRegistry.Register(\"PageCategories/PageCategoriesTreeList\", PageCategoriesTreeList);\nRegistry.Register(\"PageCategories/PageCategoryEdit\", PageCategoryEdit);\n","import { Component } from \"@angular/core\";\r\nimport { TenantListBase } from \"Example/Tenants/TenantListBase\";\r\n\r\n@Component({ template: require('./TenantList.html'), selector : \"tenantList\" })\r\nexport class TenantList extends TenantListBase {\r\n\tpublic GetPageId() : number { return 1934264695000; }\r\n\tpublic get CollectionId(): string | null { return null; }\r\n}","import { BaseComponent } from \"codeshell/baseComponents\";\r\nimport { Injectable, ViewChild } from \"@angular/core\";\r\nimport { PageCategoriesService } from \"Example/Http\";\r\nimport { Shell } from \"codeshell/core\";\r\n\r\nimport { DomainTreeBase, DomainCountMode } from \"../Domains/DomainTreeBase\";\r\nimport { PageCategoryListBase } from \"./PageCategoryListBase\";\r\nimport { RecursionModel, ComponentRequest, DTO, NoteType } from \"../../codeshell/helpers\";\r\nimport { PageCategoryCreateBase } from \"./PageCategoryCreateBase\";\r\nimport { ModulesConfigBase } from \"./ModulesConfigBase\";\r\n\r\n@Injectable()\r\nexport abstract class PageCategoriesTreeListBase extends BaseComponent {\r\n    get Service(): PageCategoriesService { return Shell.Injector.get(PageCategoriesService); }\r\n\r\n    @ViewChild(\"DomainTree\") DomainTree?: DomainTreeBase;\r\n    @ViewChild(\"PageCategoryList\") PageCategoriesList?: PageCategoryListBase;\r\n\r\n\r\n\r\n    OnChanged?: () => void;\r\n    ngOnInit() {\r\n        Shell.Main.SideBarStatus.emit(false);\r\n        if (this.DomainTree) {\r\n            this.DomainTree.LoadData();\r\n            this.DomainTree.AllowEdit = false;\r\n            this.DomainTree.HideHeader = true;\r\n            this.DomainTree.CountMode = DomainCountMode.Categories;\r\n            this.DomainTree.LoadCounts();\r\n            this.DomainTree.OnSelectedEvent = domain => this.OnDomainSelected(domain);\r\n        }\r\n        if (this.PageCategoriesList) {\r\n            this.PageCategoriesList.HideHeader = true;\r\n            this.PageCategoriesList.LoadData();\r\n        }\r\n    }\r\n\r\n    async CategoryCreation(comp: PageCategoryCreateBase): Promise<boolean> {\r\n        var res = await this.Service.CreatPageCategory(comp.SelectedItems);\r\n        this.NotifyTranslate(res.message + \" [ Affetcted : \" + res.affectedRows + \" ] \", res.code == 0 ? NoteType.Success : NoteType.Error);\r\n        if (this.PageCategoriesList)\r\n            this.PageCategoriesList.LoadData();\r\n        if (this.DomainTree)\r\n            this.DomainTree.LoadData();\r\n        return true;\r\n    }\r\n\r\n    AddPageCategory() {\r\n        let req: ComponentRequest<PageCategoryCreateBase> = {\r\n            Identifier: \"CreateModal\",\r\n            Init: comp => {\r\n                comp.OnOk = c => this.CategoryCreation(c);\r\n            }\r\n        }\r\n\r\n        this.GetComponent(req).then(comp => {\r\n            comp.StartAsync().then(e => {\r\n                comp.SelectedItems = [];\r\n                comp.Show = true;\r\n            })\r\n\r\n        }).catch(error => console.log(error));;\r\n    }\r\n\r\n    OnDomainSelected(item: RecursionModel | null) {\r\n        if (this.PageCategoriesList && item) {\r\n            this.PageCategoriesList.Domain = item;\r\n            this.PageCategoriesList.LoadData();\r\n        }\r\n    }\r\n\r\n    OpenModules() {\r\n        var req: ComponentRequest<ModulesConfigBase> = { Identifier: \"ModulesModal\" };\r\n        this.GetComponent(req).then(d => {\r\n            d.BindAsync({}).then(x => {\r\n                d.Show = true;\r\n            })\r\n            d.OnInstalled = () => {\r\n                if (this.DomainTree)\r\n                    this.DomainTree.LoadData();\r\n            }\r\n        })\r\n    }\r\n}","module.exports = \"<div class=\\\"page-header container-fluid\\\" *ngIf=\\\"!IsEmbedded !HideHeader\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-5 col-xs-12\\\">\\r\\n            <h2>{{'Pages.PageCategories__PageCategoriesTreeList' | translate }}<span *ngIf=\\\"HeaderExtra\\\"> - {{HeaderExtra}}</span></h2>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-7 col-xs-12\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n                <div class=\\\"col-md-12 col-xs-12 padTop padBottom\\\">\\r\\n                    <div class=\\\"pull-last btn-group\\\">\\r\\n\\r\\n                        \\r\\n\\r\\n    <button class=\\\"btn btn-primary\\\"\\r\\n            (click)=\\\"OpenModules()\\\"\\r\\n            \\r\\n            >\\r\\n        <i class=\\\"fa fa-list fa-lg\\\"></i> {{'Words.Modules' | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button class=\\\"btn btn-success\\\"\\r\\n            (click)=\\\"AddPageCategory()\\\"\\r\\n            \\r\\n            >\\r\\n        <i class=\\\"fa fa-plus fa-lg\\\"></i> {{'Words.AddEntity' | translate : {p0:'PageCategory'} }}\\r\\n    </button>\\r\\n                        \\r\\n    <button class=\\\"btn btn-info margin-sides\\\"\\r\\n            (click)=\\\"Refresh()\\\"\\r\\n            \\r\\n            >\\r\\n        <i class=\\\"fa fa-redo\\\"></i> \\r\\n    </button>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"!IsEmbedded\\\">\\r\\n\\r\\n        <ol class=\\\"breadcrumb\\\">\\r\\n            <li>\\r\\n                <a routerLink=\\\"'/'\\\">{{'Words.Main' | translate }}</a>\\r\\n            </li>\\r\\n            <li>\\r\\n                {{'Pages.PageCategories__PageCategoriesTreeList' | translate }}\\r\\n            </li>\\r\\n        </ol>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-header section-header\\\" *ngIf=\\\"IsEmbedded && !HideHeader\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-8\\\">\\r\\n                {{'Pages.PageCategories__PageCategoriesTreeList' | translate }}<span *ngIf=\\\"HeaderExtra\\\"> - {{HeaderExtra}}</span>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n            <domainTree #DomainTree [IsEmbedded]='true'></domainTree>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-9\\\" style=\\\"margin-top:11px;padding-left:0px\\\">\\r\\n            <pageCategoryList #PageCategoryList [IsEmbedded]='true'></pageCategoryList>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\n<div style='display:none' #lookupOptionsContainer values=''></div>\\n<div style='display:none' #viewParamsContainer values='{\\\"ModelType\\\":null,\\\"AddUrl\\\":null,\\\"EditUrl\\\":null,\\\"DetailsUrl\\\":null,\\\"ListUrl\\\":null,\\\"Fields\\\":[],\\\"Other\\\":{\\\"DomainTree\\\":\\\"Domains/DomainTree\\\",\\\"PageCategoryList\\\":\\\"PageCategories/PageCategoryList\\\",\\\"CreateModal\\\":\\\"PageCategories/PageCategoryCreate\\\",\\\"ModulesModal\\\":\\\"Domains/ModuleConfigModal\\\"}}'></div>\";","import { Component } from \"@angular/core\";\r\nimport { PageCategoryEditBase } from \"Example/PageCategories/PageCategoryEditBase\";\r\n\r\n@Component({ template: require('./PageCategoryEdit.html'), selector : \"pageCategoryEdit\" })\r\nexport class PageCategoryEdit extends PageCategoryEditBase {\r\n\tpublic GetPageId() : number { return 2005864840000; }\r\n\tpublic get CollectionId(): string | null { return null; }\r\n}","import { EditComponentBase } from \"codeshell/baseComponents\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { PageCategoriesService } from \"Example/Http\";\r\nimport { Shell } from \"codeshell/core\";\r\nimport { BaseComponentList } from \"../Models\";\r\nimport { ServerGenerationService } from \"Example/Http/ServerGenerationService\";\r\n\r\n@Injectable()\r\nexport abstract class PageCategoryEditBase extends EditComponentBase{\r\n    get Service(): PageCategoriesService { return Shell.Injector.get(PageCategoriesService); }\r\n    \r\n    Gen = new ServerGenerationService();\r\n    ActiveTab = \"Controls\";\r\n    baseComponentList: BaseComponentList[] = [\r\n        { name: \"List\" },\r\n        { name: \"Edit\" },\r\n        { name: \"Tree\" },\r\n        { name: \"Select\" },\r\n    ];\r\n\r\n    async LoadLookupsAsync(opts: any): Promise<any> {\r\n        var res = await super.LoadLookupsAsync(opts);\r\n        res.BaseComponent = this.baseComponentList;\r\n        return res;\r\n    }\r\n\r\n    Process() {\r\n        this.Gen.CollectTemplateData(this.model.id).then(d => {\r\n            this.Fill(this.model.id);\r\n        });\r\n    }\r\n}","module.exports = \"<div class=\\\"page-header container-fluid\\\" *ngIf=\\\"!IsEmbedded !HideHeader\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-5 col-xs-12\\\">\\r\\n            <h2>{{'Pages.PageCategories__PageCategoryEdit' | translate }}<span *ngIf=\\\"HeaderExtra\\\"> - {{HeaderExtra}}</span></h2>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-7 col-xs-12\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n                    <div class=\\\"col-md-8 col-xs-12 text-last padTop\\\">\\r\\n                        <div class=\\\"btn-group\\\">\\r\\n    \\r\\n    <button class=\\\"btn btn-warning\\\"\\r\\n            (click)=\\\"Process()\\\"\\r\\n            \\r\\n            >\\r\\n        <i class=\\\"fa fa-cog\\\"></i> {{'Words.Process' | translate }}\\r\\n    </button>\\r\\n\\r\\n</div>\\r\\n                    </div>\\r\\n                <div class=\\\"col-md-4 col-xs-12 padTop padBottom\\\">\\r\\n                    <div class=\\\"pull-last btn-group\\\">\\r\\n\\r\\n                        \\r\\n                        \\r\\n    <button class=\\\"btn btn-info margin-sides\\\"\\r\\n            (click)=\\\"Refresh()\\\"\\r\\n            \\r\\n            >\\r\\n        <i class=\\\"fa fa-redo\\\"></i> \\r\\n    </button>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"!IsEmbedded\\\">\\r\\n\\r\\n        <ol class=\\\"breadcrumb\\\">\\r\\n            <li>\\r\\n                <a routerLink=\\\"'/'\\\">{{'Words.Main' | translate }}</a>\\r\\n            </li>\\r\\n                <li>\\r\\n                    <a routerLink=\\\"/PageCategories/PageCategoriesTreeList\\\">{{'Pages.PageCategories__PageCategoriesTreeList' | translate }}</a>\\r\\n                </li>\\r\\n            <li>\\r\\n                {{'Pages.PageCategories__PageCategoryEdit' | translate }}\\r\\n            </li>\\r\\n        </ol>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-header section-header\\\" *ngIf=\\\"IsEmbedded && !HideHeader\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-8\\\">\\r\\n                {{'Pages.PageCategories__PageCategoryEdit' | translate }}<span *ngIf=\\\"HeaderExtra\\\"> - {{HeaderExtra}}</span>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div><div [ngClass]=\\\"IsEmbedded?'panel panel-default embedded':'container-fluid animated fadeInRight'\\\">\\r\\n\\r\\n    <div [ngClass]=\\\"IsEmbedded?'panel-body':'content-block'\\\">\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"UseLocalization\\\">\\r\\n            <div class=\\\"col-xs-12 col-md-6 col-xs-offset-0 col-md-offset-6 padBottom\\\">\\r\\n                <div class=\\\"btn-group btn-group-sm pull-last\\\">\\r\\n                        <button class=\\\"btn btn-sm\\\" [ngClass]=\\\"CurrentLang=='ar'?'btn-primary':'btn-default'\\\" (click)=\\\"CurrentLang='ar'\\\">\\r\\n                            {{'Words.ar' | translate }}\\r\\n                        </button>\\r\\n                        <button class=\\\"btn btn-sm\\\" [ngClass]=\\\"CurrentLang=='en'?'btn-primary':'btn-default'\\\" (click)=\\\"CurrentLang='en'\\\">\\r\\n                            {{'Words.en' | translate }}\\r\\n                        </button>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        \\r\\n\\r\\n\\r\\n<form #Form=\\\"ngForm\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        \\r\\n<div class=\\\"form-group col-md-6 \\\"\\r\\n     id=\\\"FG_viewPath\\\"\\r\\n     #FG_viewPath=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label>{{'Columns.PageCategory__ViewPath' | translate }} </label>\\r\\n        <p class=\\\"\\\"  >\\r\\n        {{model.viewPath}}\\r\\n    </p>\\r\\n\\r\\n    \\r\\n</div>\\r\\n\\r\\n        \\r\\n<div class=\\\"form-group col-md-6 \\\"\\r\\n     id=\\\"FG_scriptPath\\\"\\r\\n     #FG_scriptPath=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label>{{'Columns.PageCategory__ScriptPath' | translate }} </label>\\r\\n        <p class=\\\"\\\"  >\\r\\n        {{model.scriptPath}}\\r\\n    </p>\\r\\n\\r\\n    \\r\\n</div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        \\r\\n<div class=\\\"form-group col-md-6 \\\"\\r\\n     id=\\\"FG_resourceId\\\"\\r\\n     #FG_resourceId=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label>{{'Columns.PageCategory__ResourceId' | translate }} </label>\\r\\n    \\r\\n<select class=\\\"form-control\\\"\\r\\n        name=\\\"Form__resourceId\\\" \\r\\n        [li-watch]=\\\"model\\\"\\r\\n        [(ngModel)]=\\\"model.resourceId\\\"\\r\\n         >\\r\\n        <option [ngValue]=\\\"null\\\">--({{'Words.Empty' | translate }})--</option>\\r\\n    <option *ngFor=\\\"let item of Lookups.Resources\\\" [ngValue]=\\\"item.id\\\">{{item.name}}</option>\\r\\n</select>\\r\\n    <p *ngIf=\\\"!FG_resourceId.Write\\\">{{FG_resourceId.Value}}</p>\\r\\n\\r\\n    \\r\\n</div>\\r\\n\\r\\n        \\r\\n<div class=\\\"form-group col-md-6 \\\"\\r\\n     id=\\\"FG_baseComponent\\\"\\r\\n     #FG_baseComponent=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label>{{'Columns.PageCategory__BaseComponent' | translate }} </label>\\r\\n    \\r\\n<select class=\\\"form-control\\\"\\r\\n        name=\\\"Form__baseComponent\\\" \\r\\n        [li-watch]=\\\"model\\\"\\r\\n        [(ngModel)]=\\\"model.baseComponent\\\"\\r\\n         >\\r\\n        <option [ngValue]=\\\"null\\\">--({{'Words.Empty' | translate }})--</option>\\r\\n    <option *ngFor=\\\"let item of Lookups.BaseComponent\\\" [ngValue]=\\\"item.name\\\">{{item.name}}</option>\\r\\n</select>\\r\\n    <p *ngIf=\\\"!FG_baseComponent.Write\\\">{{FG_baseComponent.Value}}</p>\\r\\n\\r\\n    \\r\\n</div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        \\r\\n<div class=\\\"form-group col-md-6 \\\"\\r\\n     id=\\\"FG_layout\\\"\\r\\n     #FG_layout=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label>{{'Columns.PageCategory__Layout' | translate }} </label>\\r\\n    \\r\\n<select class=\\\"form-control\\\"\\r\\n        name=\\\"Form__layout\\\" \\r\\n        [li-watch]=\\\"model\\\"\\r\\n        [(ngModel)]=\\\"model.layout\\\"\\r\\n         >\\r\\n        <option [ngValue]=\\\"null\\\">--({{'Words.Empty' | translate }})--</option>\\r\\n    <option *ngFor=\\\"let item of Lookups.layouts\\\" [ngValue]=\\\"item.name\\\">{{item.name}}</option>\\r\\n</select>\\r\\n    <p *ngIf=\\\"!FG_layout.Write\\\">{{FG_layout.Value}}</p>\\r\\n\\r\\n    \\r\\n</div>\\r\\n\\r\\n    </div>\\r\\n</form>\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"col-md-6\\\">\\r\\n    <div class=\\\"col-md-12 section-header\\\">\\r\\n        {{'Words.Controls' | translate }}\\r\\n    </div>\\r\\n    <table class=\\\"table table-striped informative\\\">\\r\\n        <thead>\\r\\n            <tr>\\r\\n                    <th class=\\\"cursorPointer\\\" [ngClass]=\\\"GetHeaderClass('ControlType')\\\"  >\\r\\n        {{'Columns.Control__ControlType' | translate }}\\r\\n        <i class=\\\"fa fa-sort\\\" (click)=\\\"SortBy('ControlType')\\\"></i>\\r\\n    </th>\\r\\n\\r\\n                    <th class=\\\"cursorPointer\\\" [ngClass]=\\\"GetHeaderClass('Identifier')\\\"  >\\r\\n        {{'Columns.Control__Identifier' | translate }}\\r\\n        <i class=\\\"fa fa-sort\\\" (click)=\\\"SortBy('Identifier')\\\"></i>\\r\\n    </th>\\r\\n\\r\\n\\r\\n\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n            <tr *ngFor=\\\"let con of model.controls;let i=index\\\">\\r\\n                <td  >\\r\\n    {{con.controlType}}\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        \\r\\n    </div>\\r\\n</td>\\r\\n                <td  >\\r\\n    {{con.identifier}}\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        \\r\\n    </div>\\r\\n</td>\\r\\n\\r\\n\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\\r\\n<div class=\\\"col-md-6\\\">\\r\\n    <div class=\\\"col-md-12 section-header\\\">\\r\\n        {{'Words.Parameters' | translate }}\\r\\n    </div>\\r\\n    <table class=\\\"table table-bordered\\\">\\r\\n        <thead>\\r\\n            <tr>\\r\\n                    <th class=\\\"cursorPointer\\\" [ngClass]=\\\"GetHeaderClass('TypeString')\\\"  >\\r\\n        {{'Columns.PageCategoryParameter__TypeString' | translate }}\\r\\n        <i class=\\\"fa fa-sort\\\" (click)=\\\"SortBy('TypeString')\\\"></i>\\r\\n    </th>\\r\\n\\r\\n                    <th class=\\\"cursorPointer\\\" [ngClass]=\\\"GetHeaderClass('Name')\\\"  >\\r\\n        {{'Columns.PageCategoryParameter__Name' | translate }}\\r\\n        <i class=\\\"fa fa-sort\\\" (click)=\\\"SortBy('Name')\\\"></i>\\r\\n    </th>\\r\\n\\r\\n                    <th class=\\\"cursorPointer\\\" [ngClass]=\\\"GetHeaderClass('DefaultValue')\\\"  >\\r\\n        {{'Columns.PageCategoryParameter__DefaultValue' | translate }}\\r\\n        <i class=\\\"fa fa-sort\\\" (click)=\\\"SortBy('DefaultValue')\\\"></i>\\r\\n    </th>\\r\\n\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n            <tr *ngFor=\\\"let par of model.pageCategoryParameters;let i=index\\\">\\r\\n                <td  >\\r\\n    {{&#x27;Words.&#x27;&#x2B;par.typeString | translate}}\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        \\r\\n    </div>\\r\\n</td>\\r\\n                <td  >\\r\\n    {{par.name}}\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        \\r\\n    </div>\\r\\n</td>\\r\\n                <td  >\\r\\n    {{par.defaultValue}}\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        \\r\\n    </div>\\r\\n</td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n        \\r\\n        <div class=\\\"row submit-buttons\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"pull-last\\\">\\r\\n                    \\r\\n        <button class=\\\"btn btn-primary\\\"\\r\\n            [disabled]=\\\"!CanSubmit\\\"\\r\\n            (click)=\\\"Submit()\\\">\\r\\n        {{'Words.Save' | translate }}\\r\\n    </button>\\r\\n\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\n<div style='display:none' #lookupOptionsContainer values='{\\\"Resources\\\":\\\"C0\\\",\\\"BaseComponent\\\":\\\"C0\\\",\\\"layouts\\\":\\\"C0\\\"}'></div>\\n<div style='display:none' #viewParamsContainer values='{\\\"ModelType\\\":null,\\\"AddUrl\\\":null,\\\"EditUrl\\\":null,\\\"DetailsUrl\\\":null,\\\"ListUrl\\\":\\\"/PageCategories/PageCategoriesTreeList\\\",\\\"Fields\\\":[],\\\"Other\\\":{}}'></div>\";","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { CodeShellModule } from \"codeshell/codeShellModule\";\r\nimport { SharedModule } from \"../Shared/SharedModule\";\r\nimport { Registry } from \"codeshell/core\";\r\nimport { AuthFilter, ResourceActions } from \"codeshell/security\";\r\n\r\nimport { ServerConfigBase } from \"codeshell/core\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { NavGroupPages } from \"./NavGroupPages\";\n\r\n\r\n@NgModule({\r\n    declarations: [NavGroupPages,],\r\n    exports: [NavGroupPages,],\r\n    imports: [\r\n\t\tSharedModule,\r\n        RouterModule.forChild([\r\n\t\t\t﻿{ path : \"NavGroupPages\", component : NavGroupPages, canActivate: [AuthFilter], data: { name : \"NavigationGroups__NavGroupPages\", navigate: false, resource:\"NavigationGroups\", action: \"anonymous\", apps:null }},\n\r\n\t\t])\r\n    ]\r\n})\r\nexport class NavigationGroupsModule {\r\n\r\n    constructor(trans: TranslateService, conf: ServerConfigBase) {\r\n        trans.setDefaultLang(conf.Locale);\r\n        trans.use(conf.Locale);\r\n    }\r\n}\r\n\r\nRegistry.Register(\"NavigationGroups/NavGroupPages\", NavGroupPages);\n","import { Component } from \"@angular/core\";\r\nimport { NavGroupPagesBase } from \"Example/NavigationGroups/NavGroupPagesBase\";\r\n\r\n@Component({ template: require('./NavGroupPages.html'), selector : \"navGroupPages\" })\r\nexport class NavGroupPages extends NavGroupPagesBase {\r\n\tpublic GetPageId() : number { return 2000136858000; }\r\n\tpublic get CollectionId(): string | null { return null; }\r\n}","import { ListComponentBase } from \"codeshell/baseComponents\";\r\nimport { Injectable, ViewChild } from \"@angular/core\";\r\nimport { NavigationGroupsService } from \"Example/Http\";\r\nimport { Shell } from \"codeshell/core\";\r\nimport { NoteType, ComponentRequest, ListItem } from \"../../codeshell/helpers\";\r\nimport { NavigationPageListBase } from \"./NavigationPageListBase\";\r\nimport { NaveListBase } from \"./NaveListBase\";\r\nimport { TenantComponentBase } from \"Example/TenantComponentBase\";\r\n\r\n@Injectable()\r\nexport abstract class NavGroupPagesBase extends TenantComponentBase {\r\n    get Service(): NavigationGroupsService { return Shell.Injector.get(NavigationGroupsService); }\r\n\r\n    @ViewChild(\"NaveList\") NaveList?: NaveListBase;\r\n    @ViewChild(\"NavigationPageList\") NavigationPageList?: NavigationPageListBase;\r\n\r\n\r\n\r\n    OnReady() {\r\n        Shell.Main.SideBarStatus.emit(false);\r\n        if (this.model.tenantCode) {\r\n            this.loadNaveGroupPages();\r\n        }\r\n    }\r\n\r\n    getPages(item: any) {\r\n        if (this.NavigationPageList) {\r\n            this.Service.naveId = item;\r\n            this.NavigationPageList.tenantId = this.getTenantId();\r\n            this.NavigationPageList.navigationGroupId = item;\r\n            this.NavigationPageList.LoadData();\r\n        }\r\n    }\r\n\r\n    AddPage() {\r\n        if (this.NavigationPageList) {\r\n            this.NavigationPageList.AddPages();\r\n        }\r\n\r\n    }\r\n\r\n    tenantChanged() {\r\n        super.tenantChanged();\r\n        if (this.NavigationPageList) {\r\n            var id = this.getTenantId();\r\n            if (id)\r\n                this.NavigationPageList.TenantChanged(id);\r\n        }\r\n        this.loadNaveGroupPages();\r\n    }\r\n\r\n    loadNaveGroupPages() {\r\n        if (this.NaveList) {\r\n\r\n            this.NaveList.LoadData();\r\n        }\r\n    }\r\n\r\n    save() {\r\n\r\n        if (this.NavigationPageList) {\r\n            var changed = ListItem.GetChangedItems(this.NavigationPageList.list);\r\n            this.Service.Post(\"Create\", changed).then(res => {\r\n\r\n                this.Notify(\"Changed Successfully\", NoteType.Success);\r\n                if (this.NavigationPageList) {\r\n                    this.NavigationPageList.LoadData();\r\n                }\r\n            })\r\n\r\n        }\r\n\r\n    }\r\n}","module.exports = \"<div class=\\\"page-header container-fluid\\\" *ngIf=\\\"!IsEmbedded !HideHeader\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-5 col-xs-12\\\">\\r\\n            <h2>{{'Pages.NavigationGroups__NavGroupPages' | translate }}<span *ngIf=\\\"HeaderExtra\\\"> - {{HeaderExtra}}</span></h2>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-7 col-xs-12\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n                    <div class=\\\"col-md-8 col-xs-12 text-last padTop\\\">\\r\\n                        \\r\\n<div class=\\\"row form-group \\\"\\r\\n     id=\\\"FG_tenantCode\\\"\\r\\n     #FG_tenantCode=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label class=\\\"col-sm-3 control-label\\\">\\r\\n        {{'Columns.Page__TenantCode' | translate }}\\r\\n    </label>\\r\\n    <div class=\\\"col-sm-9\\\">\\r\\n        \\r\\n<select class=\\\"form-control\\\"\\r\\n        name=\\\"Form__tenantCode\\\" \\r\\n        [li-watch]=\\\"model\\\"\\r\\n        [(ngModel)]=\\\"model.tenantCode\\\"\\r\\n         (change)=\\\"tenantChanged()\\\" >\\r\\n    <option *ngFor=\\\"let item of tenants\\\" [ngValue]=\\\"item.code\\\">{{item.name}}</option>\\r\\n</select>\\r\\n    <p *ngIf=\\\"!FG_tenantCode.Write\\\">{{FG_tenantCode.Value}}</p>\\r\\n\\r\\n        \\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n                    </div>\\r\\n                <div class=\\\"col-md-4 col-xs-12 padTop padBottom\\\">\\r\\n                    <div class=\\\"pull-last btn-group\\\">\\r\\n\\r\\n                        \\r\\n\\r\\n    <button class=\\\"btn btn-primary\\\"\\r\\n            (click)=\\\"save()\\\"\\r\\n            \\r\\n             title=\\\"{{'Words.Save' | translate }}\\\">\\r\\n        <i class=\\\"fa fa-save fa-lg\\\"></i> \\r\\n    </button>\\r\\n\\r\\n    <button class=\\\"btn btn-success\\\"\\r\\n            (click)=\\\"AddPage()\\\"\\r\\n            \\r\\n             title=\\\"{{'Words.Add Page To Nave' | translate }}\\\">\\r\\n        <i class=\\\"fa fa-plus fa-lg\\\"></i> \\r\\n    </button>\\r\\n                        \\r\\n    <button class=\\\"btn btn-info margin-sides\\\"\\r\\n            (click)=\\\"Refresh()\\\"\\r\\n            \\r\\n            >\\r\\n        <i class=\\\"fa fa-redo\\\"></i> \\r\\n    </button>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"!IsEmbedded\\\">\\r\\n\\r\\n        <ol class=\\\"breadcrumb\\\">\\r\\n            <li>\\r\\n                <a routerLink=\\\"'/'\\\">{{'Words.Main' | translate }}</a>\\r\\n            </li>\\r\\n            <li>\\r\\n                {{'Pages.NavigationGroups__NavGroupPages' | translate }}\\r\\n            </li>\\r\\n        </ol>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-header section-header\\\" *ngIf=\\\"IsEmbedded && !HideHeader\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-8\\\">\\r\\n                {{'Pages.NavigationGroups__NavGroupPages' | translate }}<span *ngIf=\\\"HeaderExtra\\\"> - {{HeaderExtra}}</span>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div><div [ngClass]=\\\"IsEmbedded?'panel panel-default embedded':'animated fadeInRight'\\\">\\r\\n    <div [ngClass]=\\\"IsEmbedded?'panel-body':'container-fluid'\\\">\\r\\n        \\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n        <naveList #NaveList [IsEmbedded]='true' (valueChange)=\\\"getPages($event)\\\"></naveList>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-8\\\">\\r\\n        <navigationPageList #NavigationPageList [IsEmbedded]='true'></navigationPageList>\\r\\n    </div>\\r\\n</div>\\r\\n        \\r\\n        \\r\\n    </div>\\r\\n</div>\\r\\n\\n<div style='display:none' #lookupOptionsContainer values='{\\\"tenants\\\":\\\"C0\\\"}'></div>\\n<div style='display:none' #viewParamsContainer values='{\\\"ModelType\\\":null,\\\"AddUrl\\\":null,\\\"EditUrl\\\":null,\\\"DetailsUrl\\\":null,\\\"ListUrl\\\":null,\\\"Fields\\\":[],\\\"Other\\\":{\\\"NaveList\\\":\\\"NavigationGroups/NaveList\\\",\\\"NavigationPageList\\\":\\\"NavigationGroups/NavigationPageList\\\"}}'></div>\";","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { CodeShellModule } from \"codeshell/codeShellModule\";\r\nimport { SharedModule } from \"../Shared/SharedModule\";\r\nimport { Registry } from \"codeshell/core\";\r\nimport { AuthFilter, ResourceActions } from \"codeshell/security\";\r\n\r\nimport { ServerConfigBase } from \"codeshell/core\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { PageCustomization } from \"./PageCustomization\";\n\r\n\r\n@NgModule({\r\n    declarations: [PageCustomization,],\r\n    exports: [PageCustomization,],\r\n    imports: [\r\n\t\tSharedModule,\r\n        RouterModule.forChild([\r\n\t\t\t﻿{ path : \"PageCustomization/:id\", component : PageCustomization, canActivate: [AuthFilter], data: { name : \"PageControls__PageCustomization\", navigate: false, resource:\"PageControls\", action: \"anonymous\", apps:null }},\n\r\n\t\t])\r\n    ]\r\n})\r\nexport class PageControlsModule {\r\n\r\n    constructor(trans: TranslateService, conf: ServerConfigBase) {\r\n        trans.setDefaultLang(conf.Locale);\r\n        trans.use(conf.Locale);\r\n    }\r\n}\r\n\r\nRegistry.Register(\"PageControls/PageCustomization\", PageCustomization);\n","import { Component } from \"@angular/core\";\r\nimport { PageControlListBase } from \"Example/PageControls/PageControlListBase\";\r\n\r\n@Component({ template: require('./PageCustomization.html'), selector : \"pageCustomization\" })\r\nexport class PageCustomization extends PageControlListBase {\r\n\tpublic GetPageId() : number { return 2000956596000; }\r\n\tpublic get CollectionId(): string | null { return null; }\r\n}","import { ListComponentBase, EditComponentBase, BaseComponent } from \"codeshell/baseComponents\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Shell } from \"codeshell/core\";\r\nimport { PageControlsService } from \"../Http/PageControlsService\";\r\nimport { ListItem, Utils, LoadOptions, ComponentRequest, NoteType, SubmitResult } from \"../../codeshell/helpers\";\r\nimport { Router } from \"@angular/router\";\r\nimport { PageParameterDTO } from \"Example/Dtos\";\r\nimport { PagesService } from \"Example/Http/PagesService\";\r\nimport { PageParameterTypes } from \"Example/Enumerations\";\r\nimport { PageSelectBase, PageTypes } from \"Example/Pages/PageSelectBase\";\r\nimport { ServerConfig } from \"Example/ServerConfig\";\r\nimport { ServerGenerationService } from \"Example/Http/ServerGenerationService\";\r\nimport { Permission } from \"codeshell/security\";\r\n\r\n@Injectable()\r\nexport abstract class PageControlListBase extends BaseComponent {\r\n    get Service(): PageControlsService { return Shell.Injector.get(PageControlsService); }\r\n    get Pages(): PagesService { return Shell.Injector.get(PagesService); }\r\n\r\n    Gen: ServerGenerationService = new ServerGenerationService();\r\n\r\n    list: any[] = [];\r\n    pageId?: number;\r\n    tenantId: number = 0;\r\n    pageRoute: any = {};\r\n    ActiveTab: string = \"Controls\";\r\n    Parameters: ListItem[] = [];\r\n    Fields: ListItem[] = [];\r\n    page: any = {};\r\n    newField: any = {};\r\n    subPermission = Permission.FullAccess;\r\n\r\n    options: LoadOptions = { Showing: 0, Skip: 0 }\r\n    accessabilityList: any[] = [\r\n        { id: 0, name: \"Hide\" },\r\n        { id: 1, name: \"Read Only\" },\r\n        { id: 2, name: \"Read Write\" }\r\n    ];\r\n\r\n    ngOnInit() {\r\n        super.ngOnInit();\r\n        this.Route.params.subscribe(par => {\r\n\r\n            if (par[\"id\"]) {\r\n                this.pageId = parseInt(par[\"id\"]);\r\n\r\n                this.LoadLookups();\r\n                this.LoadData()\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n    OnReady() {\r\n        Shell.Main.SideBarStatus.emit(true);\r\n    }\r\n\r\n    LoadLookups() {\r\n        var opts = this.GetLookupOptions();\r\n\r\n        this.Service.Get(\"GetEditLookups\", opts).then(lookups => {\r\n            this.Lookups = lookups;\r\n            this.Lookups.Accessability = this.accessabilityList;\r\n        })\r\n    }\r\n\r\n    LoadData() {\r\n        if (this.pageId) {\r\n            this.Pages.GetCustomizationData(this.pageId).then(d => {\r\n                this.list = ListItem.Convert(d.controls);\r\n                this.Parameters = ListItem.Convert(d.parameters);\r\n                this.Fields = ListItem.Convert(d.fields);\r\n                this.pageRoute = d.route;\r\n                this.page.display = d.display;\r\n                this.tenantId = d.tenantId;\r\n            });\r\n        }\r\n    }\r\n\r\n    ProcessTemplate() {\r\n        if (this.pageId) {\r\n            this.Gen.ProcessForPage(this.pageId).then(d => {\r\n                this.LoadData();\r\n            }).catch(d => Utils.HandleError(d, true));\r\n        }\r\n    }\r\n\r\n    Render() {\r\n\r\n        this.SaveChangesAsync().then(res => {\r\n            if (this.pageId) {\r\n                this.Gen.RenderPage(this.pageId).then(d => {\r\n                    this.NotifyTranslate(d.message);\r\n                    this.LoadData();\r\n                }).catch(d => Utils.HandleError(d, true));\r\n            }\r\n        })\r\n    }\r\n\r\n    async SaveChangesAsync(): Promise<SubmitResult> {\r\n        var data = {\r\n            controls: ListItem.GetChangedItems(this.list),\r\n            parameters: ListItem.GetChangedItems(this.Parameters),\r\n            fields: ListItem.GetChangedItems(this.Fields),\r\n            route: this.pageRoute.isChanged ? this.pageRoute : null,\r\n            id: this.pageId,\r\n            presistant: this.page.presistant\r\n        }\r\n\r\n        return await this.Pages.ApplyCustomization(data);\r\n    }\r\n\r\n    update() {\r\n\r\n        this.SaveChangesAsync().then(res => {\r\n            this.LoadData();\r\n            this.Notify(\"success_message\");\r\n        }).catch(err => {\r\n            Utils.HandleError(err, true);\r\n        })\r\n    }\r\n\r\n    Clear(type: string) {\r\n        this.pageRoute[type + \"String\"] = null;\r\n        this.pageRoute[type] = null;\r\n        this.pageRoute.isChanged = true;\r\n        console.log(this.pageRoute);\r\n    }\r\n\r\n    SelectComponent(type: string | null, parType: any = null) {\r\n        var prom: Promise<{ id: number, viewPath: string }> | null = null;\r\n\r\n        if (type) {\r\n            switch (type) {\r\n                case \"listUrl\":\r\n                case \"addUrl\":\r\n                    prom = this.OpenPageSelector(PageTypes.UnParameterizedRoutable);\r\n                    break;\r\n                case \"editUrl\":\r\n                case \"detailsUrl\":\r\n                    prom = this.OpenPageSelector(PageTypes.ParameterizedRoutable);\r\n                    break;\r\n\r\n            }\r\n\r\n            if (prom) {\r\n                prom.then(d => {\r\n                    this.pageRoute[type + \"String\"] = d.viewPath;\r\n                    this.pageRoute[type] = d.id;\r\n\r\n                    this.pageRoute.isChanged = true;\r\n                });\r\n            }\r\n        } else if (parType) {\r\n            switch (parType.type) {\r\n                case PageParameterTypes.Embedded:\r\n                case PageParameterTypes.Modal:\r\n                    prom = this.OpenPageSelector(PageTypes.Embedded);\r\n                    break;\r\n                case PageParameterTypes.PageLink:\r\n                    prom = this.OpenPageSelector(PageTypes.AnyRoutable);\r\n                    break;\r\n            }\r\n            if (prom) {\r\n                prom.then(d => {\r\n                    parType.viewPath = d.viewPath;\r\n                    parType.entity.linkedPageId = d.id;\r\n                    parType.entity.useDefault = false;\r\n                    (parType as ListItem).SetModified();\r\n                })\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    OpenPageSelector(type: PageTypes): Promise<{ id: number, viewPath: string }> {\r\n        var x = (n: any) => { return n };\r\n\r\n        var req: ComponentRequest<PageSelectBase> = {\r\n            Identifier: \"PageSelector\",\r\n            Init: comp => {\r\n                comp.tenantId = this.tenantId;\r\n                comp.pageType = type;\r\n                comp.Args.CreateNew = d => {\r\n                    return { id: d.id, viewPath: d.viewPath }\r\n                }\r\n                comp.Multi = false;\r\n            }\r\n        }\r\n        return new Promise((res, rej) => {\r\n\r\n            this.GetComponent(req).then(comp => {\r\n                comp.OnOk = d => {\r\n                    if (comp.Items[0])\r\n                        res(comp.Items[0] as any);\r\n                    return Promise.resolve(true);\r\n                }\r\n                if (comp.pageType != type) {\r\n                    comp.pageType = type;\r\n                    comp.Source.LoadedOnce = false;\r\n                }\r\n                comp.StartAsync().then(d => {\r\n                    comp.Show = true;\r\n                })\r\n            })\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    AddNewField() {\r\n        var n = ListItem.Detached(this.newField);\r\n        (n as any).pageId = this.pageId;\r\n        n.AddTo(this.Fields);\r\n        this.newField = {};\r\n    }\r\n\r\n    IsPageReference(par: PageParameterDTO): boolean { return par.type != PageParameterTypes.Text; }\r\n}","import { ListItem } from 'codeshell/helpers';\r\nexport enum PageParameterTypes {\n\tText = 1 ,\n\tEmbedded = 2 ,\n\tPageLink = 3 ,\n\tModal = 4 ,\n};\n\n","module.exports = \"<div class=\\\"page-header container-fluid\\\" *ngIf=\\\"!IsEmbedded !HideHeader\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-5 col-xs-12\\\">\\r\\n            <h2>{{'Pages.PageControls__PageCustomization' | translate }}<span *ngIf=\\\"HeaderExtra\\\"> - {{HeaderExtra}}</span></h2>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-7 col-xs-12\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n                    <div class=\\\"col-md-8 col-xs-12 text-last padTop\\\">\\r\\n                        <div class=\\\"btn-group pull-last\\\">\\r\\n    \\r\\n    <button class=\\\"btn btn-warning\\\"\\r\\n            (click)=\\\"ProcessTemplate()\\\"\\r\\n            \\r\\n             title=\\\"{{'Words.Process' | translate }}\\\">\\r\\n        <i class=\\\"fa fa-cog\\\"></i> {{'Words.ProcessTemplate' | translate }}\\r\\n    </button>\\r\\n\\r\\n    \\r\\n    <button class=\\\"btn btn-primary\\\"\\r\\n            (click)=\\\"Render()\\\"\\r\\n            \\r\\n             title=\\\"{{'Words.Render' | translate }}\\\">\\r\\n        <i class=\\\"fa fa-image\\\"></i> {{'Words.Render' | translate }}\\r\\n    </button>\\r\\n\\r\\n</div>\\r\\n\\r\\n                    </div>\\r\\n                <div class=\\\"col-md-4 col-xs-12 padTop padBottom\\\">\\r\\n                    <div class=\\\"pull-last btn-group\\\">\\r\\n\\r\\n                        \\r\\n    <button class=\\\"btn btn-success\\\"\\r\\n            (click)=\\\"update()\\\"\\r\\n            \\r\\n            >\\r\\n        {{'Words.Save' | translate }}\\r\\n    </button>\\r\\n\\r\\n                        \\r\\n    <button class=\\\"btn btn-info margin-sides\\\"\\r\\n            (click)=\\\"Refresh()\\\"\\r\\n            \\r\\n            >\\r\\n        <i class=\\\"fa fa-redo\\\"></i> \\r\\n    </button>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"!IsEmbedded\\\">\\r\\n\\r\\n        <ol class=\\\"breadcrumb\\\">\\r\\n            <li>\\r\\n                <a routerLink=\\\"'/'\\\">{{'Words.Main' | translate }}</a>\\r\\n            </li>\\r\\n                <li>\\r\\n                    <a routerLink=\\\"/Pages/PageTreeList\\\">{{'Pages.Pages__PageTreeList' | translate }}</a>\\r\\n                </li>\\r\\n            <li>\\r\\n                {{'Pages.PageControls__PageCustomization' | translate }}\\r\\n            </li>\\r\\n        </ol>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-header section-header\\\" *ngIf=\\\"IsEmbedded && !HideHeader\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-8\\\">\\r\\n                {{'Pages.PageControls__PageCustomization' | translate }}<span *ngIf=\\\"HeaderExtra\\\"> - {{HeaderExtra}}</span>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div><div [ngClass]=\\\"IsEmbedded?'panel panel-default embedded':'container-fluid animated fadeInRight'\\\">\\r\\n\\r\\n    <div [ngClass]=\\\"IsEmbedded?'panel-body':'content-block'\\\">\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"UseLocalization\\\">\\r\\n            <div class=\\\"col-xs-12 col-md-6 col-xs-offset-0 col-md-offset-6 padBottom\\\">\\r\\n                <div class=\\\"btn-group btn-group-sm pull-last\\\">\\r\\n                        <button class=\\\"btn btn-sm\\\" [ngClass]=\\\"CurrentLang=='ar'?'btn-primary':'btn-default'\\\" (click)=\\\"CurrentLang='ar'\\\">\\r\\n                            {{'Words.ar' | translate }}\\r\\n                        </button>\\r\\n                        <button class=\\\"btn btn-sm\\\" [ngClass]=\\\"CurrentLang=='en'?'btn-primary':'btn-default'\\\" (click)=\\\"CurrentLang='en'\\\">\\r\\n                            {{'Words.en' | translate }}\\r\\n                        </button>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        \\r\\n\\r\\n<div class=\\\"col-md-12\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        \\r\\n<div class=\\\"row form-group \\\"\\r\\n     id=\\\"FG_display\\\"\\r\\n     #FG_display=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label class=\\\"col-sm-3 control-label\\\">\\r\\n        {{'Columns.PageCustomizationDTO__Display' | translate }}\\r\\n    </label>\\r\\n    <div class=\\\"col-sm-9\\\">\\r\\n            <p class=\\\"\\\"  >\\r\\n        {{page.display}}\\r\\n    </p>\\r\\n\\r\\n        \\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n        \\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <ul class=\\\"nav nav-tabs\\\">\\r\\n            <li class=\\\"nav-item\\\" [ngClass]=\\\"ActiveTab=='Controls'?'active':null\\\">\\r\\n    <a (click)=\\\"ActiveTab='Controls'\\\">\\r\\n{{'Words.Controls' | translate }}\\r\\n    </a>\\r\\n</li>\\r\\n            <li class=\\\"nav-item\\\" [ngClass]=\\\"ActiveTab=='ViewParameters'?'active':null\\\">\\r\\n    <a (click)=\\\"ActiveTab='ViewParameters'\\\">\\r\\n{{'Words.ViewParameters' | translate }}\\r\\n    </a>\\r\\n</li>\\r\\n            <li class=\\\"nav-item\\\" [ngClass]=\\\"ActiveTab=='CustomFields'?'active':null\\\">\\r\\n    <a (click)=\\\"ActiveTab='CustomFields'\\\">\\r\\n{{'Words.CustomFields' | translate }}\\r\\n    </a>\\r\\n</li>\\r\\n        </ul>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<div  id=\\\"Controls\\\" [show-if]=\\\"ActiveTab=='Controls'\\\" class=\\\"tab-page\\\" #Controls>\\n    <div class=\\\"row\\\">\\r\\n\\r\\n\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <table class=\\\"table table-striped informative\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                            <th class=\\\"cursorPointer\\\" [ngClass]=\\\"GetHeaderClass('ControlIdentifier')\\\"  >\\r\\n        {{'Columns.PageControlListDTO__ControlIdentifier' | translate }}\\r\\n        <i class=\\\"fa fa-sort\\\" (click)=\\\"SortBy('ControlIdentifier')\\\"></i>\\r\\n    </th>\\r\\n\\r\\n                            <th class=\\\"cursorPointer\\\" [ngClass]=\\\"GetHeaderClass('ControlType')\\\"  >\\r\\n        {{'Columns.PageControlListDTO__ControlType' | translate }}\\r\\n        <i class=\\\"fa fa-sort\\\" (click)=\\\"SortBy('ControlType')\\\"></i>\\r\\n    </th>\\r\\n\\r\\n                            <th class=\\\"cursorPointer\\\" [ngClass]=\\\"GetHeaderClass('Accessability')\\\"  >\\r\\n        {{'Columns.PageControlListDTO__Accessability' | translate }}\\r\\n        <i class=\\\"fa fa-sort\\\" (click)=\\\"SortBy('Accessability')\\\"></i>\\r\\n    </th>\\r\\n\\r\\n                            <th class=\\\"cursorPointer\\\" [ngClass]=\\\"GetHeaderClass('SourceCollectionId')\\\"  >\\r\\n        {{'Columns.PageControlListDTO__SourceCollectionId' | translate }}\\r\\n        <i class=\\\"fa fa-sort\\\" (click)=\\\"SortBy('SourceCollectionId')\\\"></i>\\r\\n    </th>\\r\\n\\r\\n                            <th class=\\\"cursorPointer\\\" [ngClass]=\\\"GetHeaderClass('Persistent')\\\"  >\\r\\n        {{'Columns.PageControlListDTO__Persistent' | translate }}\\r\\n        <i class=\\\"fa fa-sort\\\" (click)=\\\"SortBy('Persistent')\\\"></i>\\r\\n    </th>\\r\\n\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let model of list;let i=index\\\">\\r\\n                        <td  >\\r\\n    {{model.controlIdentifier}}\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        \\r\\n    </div>\\r\\n</td>\\r\\n                        <td  >\\r\\n    {{model.controlType}}\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        \\r\\n    </div>\\r\\n</td>\\r\\n                        <td  >\\r\\n    \\r\\n<select class=\\\"form-control\\\"\\r\\n        name=\\\"Form__accessability{{i}}\\\" \\r\\n        [li-watch]=\\\"model\\\"\\r\\n        [(ngModel)]=\\\"model.accessability\\\"\\r\\n         >\\r\\n    <option *ngFor=\\\"let item of Lookups.Accessability\\\" [ngValue]=\\\"item.id\\\">{{item.name}}</option>\\r\\n</select>\\r\\n\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        \\r\\n    </div>\\r\\n</td>\\r\\n                        <td  >\\r\\n    \\r\\n<select class=\\\"form-control\\\"\\r\\n        name=\\\"Form__sourceCollectionId{{i}}\\\" \\r\\n        [li-watch]=\\\"model\\\"\\r\\n        [(ngModel)]=\\\"model.sourceCollectionId\\\"\\r\\n         >\\r\\n    <option *ngFor=\\\"let item of Lookups.Collection\\\" [ngValue]=\\\"item.id\\\">{{item.name}}</option>\\r\\n</select>\\r\\n\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        \\r\\n    </div>\\r\\n</td>\\r\\n                        <td  >\\r\\n    <label class=\\\"chiller_cb\\\">\\r\\n    \\r\\n    <input type=\\\"checkbox\\\"\\r\\n           [id]=\\\"'persistent'+i\\\"\\r\\n           [name]=\\\"'persistent'+i\\\"\\r\\n           [(ngModel)]=\\\"model.persistent\\\"\\r\\n           [li-watch]=\\\"model\\\"\\r\\n            >\\r\\n    <span></span>\\r\\n</label>\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        \\r\\n    </div>\\r\\n</td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div  id=\\\"ViewParameters\\\" [show-if]=\\\"ActiveTab=='ViewParameters'\\\" class=\\\"tab-page\\\" #ViewParameters>\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <div class=\\\"form-group\\\"\\r\\n     id=\\\"ListUrl\\\" bs-group #ListUrl=\\\"bsFormGroup\\\"     >\\r\\n    <label class=\\\"control-label\\\">{{'Words.ListUrl' | translate }}</label>\\r\\n\\r\\n    <div>\\r\\n        <div class=\\\"input-group modal-selector\\\">\\r\\n            <label class=\\\"form-control\\\" >\\r\\n{{pageRoute.listUrlString}}            </label>\\r\\n\\r\\n                <div class=\\\"input-group-btn\\\"  *ngIf=\\\"ListUrl && ListUrl.Write\\\">\\r\\n                    <button class=\\\"btn\\\" (click)=\\\"SelectComponent('listUrl')\\\">\\r\\n                        <i class=\\\"fa fa-window-restore\\\"></i>\\r\\n                    </button>\\r\\n\\r\\n    <button class=\\\"btn btn-primary\\\"\\r\\n            (click)=\\\"Clear('listUrl')\\\"\\r\\n            \\r\\n             title=\\\"{{'Words.Clear' | translate }}\\\">\\r\\n        <i class=\\\"fa fa-eraser\\\"></i> \\r\\n    </button>\\r\\n                </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n</div>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <div class=\\\"form-group\\\"\\r\\n     id=\\\"AddUrl\\\" bs-group #AddUrl=\\\"bsFormGroup\\\"     >\\r\\n    <label class=\\\"control-label\\\">{{'Words.AddUrl' | translate }}</label>\\r\\n\\r\\n    <div>\\r\\n        <div class=\\\"input-group modal-selector\\\">\\r\\n            <label class=\\\"form-control\\\" >\\r\\n{{pageRoute.addUrlString}}            </label>\\r\\n\\r\\n                <div class=\\\"input-group-btn\\\"  *ngIf=\\\"AddUrl && AddUrl.Write\\\">\\r\\n                    <button class=\\\"btn\\\" (click)=\\\"SelectComponent('addUrl')\\\">\\r\\n                        <i class=\\\"fa fa-window-restore\\\"></i>\\r\\n                    </button>\\r\\n\\r\\n    <button class=\\\"btn btn-primary\\\"\\r\\n            (click)=\\\"Clear('addUrl')\\\"\\r\\n            \\r\\n             title=\\\"{{'Words.Clear' | translate }}\\\">\\r\\n        <i class=\\\"fa fa-eraser\\\"></i> \\r\\n    </button>\\r\\n                </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n</div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <div class=\\\"form-group\\\"\\r\\n     id=\\\"EditUrl\\\" bs-group #EditUrl=\\\"bsFormGroup\\\"     >\\r\\n    <label class=\\\"control-label\\\">{{'Words.EditUrl' | translate }}</label>\\r\\n\\r\\n    <div>\\r\\n        <div class=\\\"input-group modal-selector\\\">\\r\\n            <label class=\\\"form-control\\\" >\\r\\n{{pageRoute.editUrlString}}            </label>\\r\\n\\r\\n                <div class=\\\"input-group-btn\\\"  *ngIf=\\\"EditUrl && EditUrl.Write\\\">\\r\\n                    <button class=\\\"btn\\\" (click)=\\\"SelectComponent('editUrl')\\\">\\r\\n                        <i class=\\\"fa fa-window-restore\\\"></i>\\r\\n                    </button>\\r\\n\\r\\n    <button class=\\\"btn btn-primary\\\"\\r\\n            (click)=\\\"Clear('editUrl')\\\"\\r\\n            \\r\\n             title=\\\"{{'Words.Clear' | translate }}\\\">\\r\\n        <i class=\\\"fa fa-eraser\\\"></i> \\r\\n    </button>\\r\\n                </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n</div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <div class=\\\"form-group\\\"\\r\\n     id=\\\"DetailsUrl\\\" bs-group #DetailsUrl=\\\"bsFormGroup\\\"     >\\r\\n    <label class=\\\"control-label\\\">{{'Words.DetailsUrl' | translate }}</label>\\r\\n\\r\\n    <div>\\r\\n        <div class=\\\"input-group modal-selector\\\">\\r\\n            <label class=\\\"form-control\\\" >\\r\\n{{pageRoute.detailsUrlString}}            </label>\\r\\n\\r\\n                <div class=\\\"input-group-btn\\\"  *ngIf=\\\"DetailsUrl && DetailsUrl.Write\\\">\\r\\n                    <button class=\\\"btn\\\" (click)=\\\"SelectComponent('detailsUrl')\\\">\\r\\n                        <i class=\\\"fa fa-window-restore\\\"></i>\\r\\n                    </button>\\r\\n\\r\\n    <button class=\\\"btn btn-primary\\\"\\r\\n            (click)=\\\"Clear('detailsUrl')\\\"\\r\\n            \\r\\n             title=\\\"{{'Words.Clear' | translate }}\\\">\\r\\n        <i class=\\\"fa fa-eraser\\\"></i> \\r\\n    </button>\\r\\n                </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n</div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                            <th class=\\\"cursorPointer\\\" [ngClass]=\\\"GetHeaderClass('TypeString')\\\"  >\\r\\n        {{'Columns.PageParameter__TypeString' | translate }}\\r\\n        <i class=\\\"fa fa-sort\\\" (click)=\\\"SortBy('TypeString')\\\"></i>\\r\\n    </th>\\r\\n\\r\\n                            <th class=\\\"cursorPointer\\\" [ngClass]=\\\"GetHeaderClass('Name')\\\"  >\\r\\n        {{'Columns.PageParameter__Name' | translate }}\\r\\n        <i class=\\\"fa fa-sort\\\" (click)=\\\"SortBy('Name')\\\"></i>\\r\\n    </th>\\r\\n\\r\\n\\r\\n                            <th class=\\\"cursorPointer\\\" [ngClass]=\\\"GetHeaderClass('Entity.ParameterValue')\\\"  >\\r\\n        {{'Columns.PageParameter__ParameterValue' | translate }}\\r\\n        <i class=\\\"fa fa-sort\\\" (click)=\\\"SortBy('Entity.ParameterValue')\\\"></i>\\r\\n    </th>\\r\\n\\r\\n\\r\\n                        <th>{{'Words.SelectPage' | translate }}</th>\\r\\n                        <th>{{'Columns.PageParameter__UseDefault' | translate }}</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let par of Parameters;let i=index\\\">\\r\\n                        <td  >\\r\\n    {{&#x27;Words.&#x27;&#x2B;par.typeString | translate}}\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        \\r\\n    </div>\\r\\n</td>\\r\\n                        <td  >\\r\\n    {{par.name}}\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        \\r\\n    </div>\\r\\n</td>\\r\\n\\r\\n                        <td   *ngIf=\\\"!IsPageReference(par)\\\">\\r\\n    <input type=\\\"text\\\"\\r\\n       class=\\\"form-control \\\"\\r\\n       placeholder=\\\"{{'Columns.PageParameter__ParameterValue' | translate }}\\\"\\r\\n       name=\\\"parForm__entity_parameterValue{{i}}\\\"\\r\\n       [(ngModel)]=\\\"par.entity.parameterValue\\\"\\r\\n       title=\\\"{{'Columns.PageParameter__ParameterValue' | translate }}\\\"\\r\\n       [li-watch]=\\\"par\\\"\\r\\n\\r\\n       \\r\\n        >\\r\\n\\r\\n\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        \\r\\n    </div>\\r\\n</td>\\r\\n                        <td   *ngIf=\\\"IsPageReference(par)\\\">\\r\\n    {{par.viewPath}}\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        \\r\\n    </div>\\r\\n</td>\\r\\n\\r\\n                        <td style=\\\"text-align:center\\\">\\r\\n                            \\r\\n    <button class=\\\"btn btn-primary btn-block\\\"\\r\\n            (click)=\\\"SelectComponent(null,par)\\\"\\r\\n             *ngIf=\\\"IsPageReference(par)\\\"\\r\\n             title=\\\"{{'Words.SelectComponent' | translate }}\\\">\\r\\n        <i class=\\\"fa fa-window-restore\\\"></i> \\r\\n    </button>\\r\\n\\r\\n                        </td>\\r\\n                        <td  >\\r\\n    <label class=\\\"chiller_cb\\\">\\r\\n    \\r\\n    <input type=\\\"checkbox\\\"\\r\\n           [id]=\\\"'useDef'+i\\\"\\r\\n           [name]=\\\"'useDef'+i\\\"\\r\\n           [(ngModel)]=\\\"par.entity.useDefault\\\"\\r\\n           [li-watch]=\\\"par\\\"\\r\\n            >\\r\\n    <span></span>\\r\\n</label>\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        \\r\\n    </div>\\r\\n</td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div  id=\\\"CustomFields\\\" [show-if]=\\\"ActiveTab=='CustomFields'\\\" class=\\\"tab-page\\\" #CustomFields>\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n<form #tableForm=\\\"ngForm\\\" >\\n                <table class=\\\"table table-striped\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                                <th class=\\\"cursorPointer\\\" [ngClass]=\\\"GetHeaderClass('Name')\\\" style='width:40%' >\\r\\n        {{'Columns.CustomField__Name' | translate }}\\r\\n        <i class=\\\"fa fa-sort\\\" (click)=\\\"SortBy('Name')\\\"></i>\\r\\n    </th>\\r\\n\\r\\n                                <th class=\\\"cursorPointer\\\" [ngClass]=\\\"GetHeaderClass('Type')\\\" style='width:40%' >\\r\\n        {{'Columns.CustomField__Type' | translate }}\\r\\n        <i class=\\\"fa fa-sort\\\" (click)=\\\"SortBy('Type')\\\"></i>\\r\\n    </th>\\r\\n\\r\\n                            <th style=\\\"width:20%\\\"></th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let field of Fields;let i=index\\\" [show-if]=\\\"field.state!='Removed'\\\">\\r\\n                            <td  >\\r\\n    <input type=\\\"text\\\"\\r\\n       class=\\\"form-control \\\"\\r\\n       placeholder=\\\"{{'Columns.CustomField__Name' | translate }}\\\"\\r\\n       name=\\\"tableForm__name{{i}}\\\"\\r\\n       [(ngModel)]=\\\"field.name\\\"\\r\\n       title=\\\"{{'Columns.CustomField__Name' | translate }}\\\"\\r\\n       [li-watch]=\\\"field\\\"\\r\\n\\r\\n       \\r\\n       required  >\\r\\n\\r\\n\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        <div class=\\\"cell-validation\\\" *ngIf=\\\"tableForm.controls['tableForm__name'+i+''] && tableForm.controls['tableForm__name'+i+''].invalid && tableForm.controls['tableForm__name'+i+''].touched\\\">\\r\\n    <i class=\\\"fa fa-exclamation-circle redColor\\\"></i>\\r\\n    <div class=\\\"messages\\\">\\r\\n        <small *ngIf=\\\"tableForm.controls['tableForm__name'+i+''].errors!.required\\\" class=\\\"form-text text-danger\\\">{{'Messages.field_required' | translate : {p0:'Columns.CustomField__Name' | translate } }}</small>\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n    </div>\\r\\n</td>\\r\\n                            <td  >\\r\\n    <input type=\\\"text\\\"\\r\\n       class=\\\"form-control \\\"\\r\\n       placeholder=\\\"{{'Columns.CustomField__Type' | translate }}\\\"\\r\\n       name=\\\"tableForm__type{{i}}\\\"\\r\\n       [(ngModel)]=\\\"field.type\\\"\\r\\n       title=\\\"{{'Columns.CustomField__Type' | translate }}\\\"\\r\\n       [li-watch]=\\\"field\\\"\\r\\n\\r\\n       \\r\\n        >\\r\\n\\r\\n\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        \\r\\n    </div>\\r\\n</td>\\r\\n                            <td>\\r\\n                                <div class=\\\"btn-group btnResponsive \\\">\\r\\n\\r\\n\\r\\n                <button *ngIf=\\\"subPermission.delete\\\" class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"field.RemoveFrom(Fields)\\\">\\r\\n                <i class=\\\"fa fa-trash\\\"></i>\\r\\n            </button>\\r\\n\\r\\n</div>\\r\\n                            </td>\\r\\n\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n</form>            <form #newRowForm=\\\"ngForm\\\" >\\n                <table class=\\\"table table-striped\\\">\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td   style=\\\"width:40%\\\">\\r\\n    <input type=\\\"text\\\"\\r\\n       class=\\\"form-control \\\"\\r\\n       placeholder=\\\"{{'Columns.CustomField__Name' | translate }}\\\"\\r\\n       name=\\\"newRowForm__name\\\"\\r\\n       [(ngModel)]=\\\"newField.name\\\"\\r\\n       title=\\\"{{'Columns.CustomField__Name' | translate }}\\\"\\r\\n       [li-watch]=\\\"newField\\\"\\r\\n\\r\\n       \\r\\n       required [pattern]=\\\"'[_a-zA-Z][_a-zA-Z0-9]{2,30}'\\\"  >\\r\\n\\r\\n\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        <div class=\\\"cell-validation\\\" *ngIf=\\\"newRowForm.controls['newRowForm__name'] && newRowForm.controls['newRowForm__name'].invalid && newRowForm.controls['newRowForm__name'].touched\\\">\\r\\n    <i class=\\\"fa fa-exclamation-circle redColor\\\"></i>\\r\\n    <div class=\\\"messages\\\">\\r\\n        <small *ngIf=\\\"newRowForm.controls['newRowForm__name'].errors!.required\\\" class=\\\"form-text text-danger\\\">{{'Messages.field_required' | translate : {p0:'Columns.CustomField__Name' | translate } }}</small>\\r\\n<small *ngIf=\\\"newRowForm.controls['newRowForm__name'].errors!.pattern\\\" class=\\\"form-text text-danger\\\">{{'Messages.invalid_field' | translate : {p0:'Columns.CustomField__Name' | translate } }}</small>\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n    </div>\\r\\n</td>\\r\\n                            <td   style=\\\"width:40%\\\">\\r\\n    <input type=\\\"text\\\"\\r\\n       class=\\\"form-control \\\"\\r\\n       placeholder=\\\"{{'Columns.CustomField__Type' | translate }}\\\"\\r\\n       name=\\\"newRowForm__type\\\"\\r\\n       [(ngModel)]=\\\"newField.type\\\"\\r\\n       title=\\\"{{'Columns.CustomField__Type' | translate }}\\\"\\r\\n       [li-watch]=\\\"newField\\\"\\r\\n\\r\\n       \\r\\n        >\\r\\n\\r\\n\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        \\r\\n    </div>\\r\\n</td>\\r\\n                            <td style = \\\"width:20%\\\">\\r\\n                                \\r\\n    <button class=\\\"btn btn-primary\\\"\\r\\n            (click)=\\\"AddNewField()\\\"\\r\\n             [disabled]=\\\"newRowForm.invalid\\\"\\r\\n            >\\r\\n        <i class=\\\"fa fa-plus\\\"></i> {{'Words.Add' | translate }}\\r\\n    </button>\\r\\n\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n</form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n        \\r\\n        <div class=\\\"row submit-buttons\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"pull-last\\\">\\r\\n                    \\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\n<div style='display:none' #lookupOptionsContainer values='{\\\"Accessability\\\":\\\"C0\\\",\\\"Collection\\\":\\\"C0\\\"}'></div>\\n<div style='display:none' #viewParamsContainer values='{\\\"ModelType\\\":null,\\\"AddUrl\\\":null,\\\"EditUrl\\\":null,\\\"DetailsUrl\\\":null,\\\"ListUrl\\\":\\\"/Pages/PageTreeList\\\",\\\"Fields\\\":[],\\\"Other\\\":{\\\"PageSelector\\\":\\\"NavigationGroups/NavigationPageCreate\\\"}}'></div>\";","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { CodeShellModule } from \"codeshell/codeShellModule\";\r\nimport { SharedModule } from \"../Shared/SharedModule\";\r\nimport { Registry } from \"codeshell/core\";\r\nimport { AuthFilter, ResourceActions } from \"codeshell/security\";\r\n\r\nimport { ServerConfigBase } from \"codeshell/core\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { GenerationNotification } from \"./GenerationNotification\";\n\r\n\r\n@NgModule({\r\n    declarations: [GenerationNotification,],\r\n    exports: [GenerationNotification,],\r\n    imports: [\r\n\t\tSharedModule,\r\n        RouterModule.forChild([\r\n\t\t\t﻿{ path : \"GenerationNotification\", component : GenerationNotification, canActivate: [AuthFilter], data: { name : \"Generations__GenerationNotification\", navigate: false, resource:\"Generations\", action: \"anonymous\", apps:null }},\n\r\n\t\t])\r\n    ]\r\n})\r\nexport class GenerationsModule {\r\n\r\n    constructor(trans: TranslateService, conf: ServerConfigBase) {\r\n        trans.setDefaultLang(conf.Locale);\r\n        trans.use(conf.Locale);\r\n    }\r\n}\r\n\r\nRegistry.Register(\"Generations/GenerationNotification\", GenerationNotification);\n","import { Component } from \"@angular/core\";\r\nimport { GenerationNotificationBase } from \"Example/Generations/GenerationNotificationBase\";\r\n\r\n@Component({ template: require('./GenerationNotification.html'), selector : \"generationNotification\" })\r\nexport class GenerationNotification extends GenerationNotificationBase {\r\n\tpublic GetPageId() : number { return 2001961468000; }\r\n\tpublic get CollectionId(): string | null { return null; }\r\n}","import { Injectable, ViewChild } from \"@angular/core\";\r\nimport { Shell } from \"codeshell/core\";\r\nimport { DomainTreeBase, DomainCountMode } from \"../Domains/DomainTreeBase\";\r\nimport { RecursionModel, NoteType } from \"../../codeshell/helpers\";\r\nimport { OutPutListener } from \"../Http/OutPutListener\";\r\nimport { GenerationInofBase } from \"./GenerationInofBase\";\r\nimport { TenantComponentBase } from \"Example/TenantComponentBase\";\r\nimport { ServerGenerationService } from \"Example/Http/ServerGenerationService\";\r\nimport { SqlCommandsService } from \"Example/Http/SqlCommandsService\";\r\nimport { BuilderService } from \"Example/Http/BuilderService\";\r\nimport { DbCreationRequest } from \"Example/Dtos\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\n\r\n@Injectable()\r\nexport abstract class GenerationNotificationBase extends TenantComponentBase {\r\n    ServerGen: ServerGenerationService = new ServerGenerationService();\r\n\r\n    @ViewChild(\"DomainTree\") DomainTree?: DomainTreeBase;\r\n    @ViewChild(\"GenerationInofList\") GenerationInofList?: GenerationInofBase;\r\n\r\n    model = new DbCreationRequest();\r\n\r\n    ServerListener = new OutPutListener(true);\r\n    Sql = new SqlCommandsService();\r\n    Builder = new BuilderService();\r\n    ActiveTab = \"domains_tab\";\r\n    renderModel: any = {};\r\n\r\n    tree = new RecursionModel();\r\n    environments: any[] = [];\r\n\r\n    constructor(rt: ActivatedRoute) {\r\n        super(rt);\r\n        this.ServerListener.SendMessage.subscribe((d: any) => {\r\n            if (this.GenerationInofList)\r\n                this.GenerationInofList.AddMessage(d);\r\n        });\r\n    }\r\n\r\n    OnReady() {\r\n        this.ServerGen.Silent = true;\r\n\r\n        if (this.DomainTree) {\r\n\r\n            this.DomainTree.tenantId = this.getTenantId();\r\n            this.DomainTree.AllowEdit = false;\r\n            this.DomainTree.HideHeader = true;\r\n            this.DomainTree.isGeneration = true;\r\n            this.DomainTree.CountMode = DomainCountMode.Pages;\r\n            this.DomainTree.RenderRequest.subscribe((d: RecursionModel) => this.render(\"domain\", d));\r\n            this.DomainTree.ProcessRequest.subscribe((d: RecursionModel) => this.process(d));\r\n            this.DomainTree.LoadData();\r\n        }\r\n\r\n        Shell.Main.SideBarStatus.emit(false);\r\n\r\n        this.Sql.GetEnvironments().then(d => {\r\n            this.environments = d;\r\n            this.environments.push({ id: 0, name: \"(Current Machine)\" })\r\n        });\r\n    }\r\n\r\n    ClearTracer() {\r\n        if (this.GenerationInofList)\r\n            this.GenerationInofList.Clear();\r\n    }\r\n\r\n    InitializeApp() {\r\n        this.ClearTracer();\r\n        this.ServerListener.Start().then(d => {\r\n            this.Builder.connectionId = d;\r\n            this.Builder.Init();\r\n        })\r\n    }\r\n\r\n    AddStaticFiles() {\r\n        this.ClearTracer();\r\n        this.ServerListener.Start().then(d => {\r\n            this.Builder.connectionId = d;\r\n            this.Builder.AddStaticFiles();\r\n        })\r\n    }\r\n\r\n    AddBaseScripts() {\r\n        this.ClearTracer();\r\n        this.ServerListener.Start().then(d => {\r\n            this.Builder.connectionId = d;\r\n            this.Builder.AddBaseScripts();\r\n        })\r\n    }\r\n\r\n    WriteWebPackFiles() {\r\n        this.ClearTracer();\r\n        this.ServerListener.Start().then(d => {\r\n            this.Builder.connectionId = d;\r\n            this.Builder.WriteWebPackFiles();\r\n        })\r\n    }\r\n\r\n    PrepEnvironment() {\r\n        this.ClearTracer();\r\n        var s = confirm(\"Bundle production vendor\");\r\n        this.ServerListener.Start().then(d => {\r\n            this.Builder.connectionId = d;\r\n            this.Builder.PrepEnvironment(s);\r\n        })\r\n    }\r\n\r\n    ClearOlderBundles() {\r\n        this.ClearTracer();\r\n        this.ServerListener.Start().then(d => {\r\n            this.Builder.connectionId = d;\r\n            this.Builder.ClearOlderBundles({ environment: this.model.environment, tenantCode: this.model.tenantCode });\r\n        })\r\n    }\r\n\r\n\r\n    InitializeResx() {\r\n        this.ClearTracer();\r\n        this.ServerListener.Start().then(d => {\r\n            this.Builder.connectionId = d;\r\n            this.Builder.InitializeResx();\r\n        })\r\n    }\r\n\r\n\r\n    SyncLanguages() {\r\n        this.ClearTracer();\r\n        this.ServerListener.Start().then(d => {\r\n            this.Builder.connectionId = d;\r\n            this.Builder.SyncLanguages();\r\n        })\r\n    }\r\n    \r\n    process(domain: any) {\r\n        if (this.GenerationInofList) {\r\n            this.GenerationInofList.list = [];\r\n        }\r\n        this.ServerListener.Start().then(d => {\r\n            this.ServerGen.connectionId = d;\r\n            this.ServerGen\r\n                .Process({ nameChain: domain.nameChain, mod: this.model.tenantCode })\r\n        });\r\n    }\r\n\r\n    render(type: string, item: RecursionModel | null = null) {\r\n        document.body.scroll(0, document.body.scrollHeight);\r\n        if (this.model.tenantCode) {\r\n\r\n            if (this.GenerationInofList) {\r\n                this.GenerationInofList.list = [];\r\n            }\r\n\r\n\r\n            this.ServerListener.Start().then(d => {\r\n                this.ServerGen.connectionId = d;\r\n                switch (type) {\r\n                    case \"all\":\r\n                        this.ServerGen\r\n                            .RenderTenant({ mod: this.model.tenantCode })\r\n                            \r\n                        break;\r\n                    case \"definition\":\r\n                        this.ServerGen\r\n                            .ModuleDefinition({ mod: this.model.tenantCode })\r\n                            \r\n                        break;\r\n                    case \"domain\":\r\n                        if (item) {\r\n                            this.ServerGen\r\n                                .Render({ mod: this.model.tenantCode, nameChain: item.nameChain })\r\n                                \r\n                        }\r\n\r\n                        break;\r\n                }\r\n            })\r\n\r\n        }\r\n        else {\r\n            this.Notify(\"must_select_tenant\", NoteType.Error, undefined);\r\n        }\r\n    }\r\n\r\n\r\n}","import { SubmitResult } from \"codeshell/helpers\";\r\nimport { ConfigHttpService } from \"./ConfigHttpService\";\r\nimport { DbCreationRequest } from \"Example/Dtos\";\r\n\r\nexport class BuilderService extends ConfigHttpService {\r\n    protected get BaseUrl(): string { return this.CurrentAppUrl + \"/apiAction/Builder\" };\r\n\r\n    Init(): Promise<SubmitResult> {\r\n        return this.Post(\"Init\", {});\r\n    }\r\n\r\n    AddSQLFiles(): Promise<SubmitResult> {\r\n        return this.Post(\"AddSQLFiles\", {});\r\n    }\r\n\r\n    AddStaticFiles(): Promise<SubmitResult> {\r\n        return this.Post(\"AddStaticFiles\", {});\r\n    }\r\n\r\n    AddBaseScripts(): Promise<SubmitResult> {\r\n        return this.Post(\"AddBaseScripts\", {});\r\n    }\r\n\r\n    WriteWebPackFiles(): Promise<SubmitResult> {\r\n        return this.Post(\"WriteWebPackFiles\", {});\r\n    }\r\n\r\n    PrepEnvironment(packProd: boolean): Promise<SubmitResult> {\r\n        return this.Post(\"PrepEnvironment\", {}, { packProd: packProd });\r\n    }\r\n\r\n    ClearOlderBundles(req: DbCreationRequest): Promise<SubmitResult> {\r\n        return this.Post(\"ClearOlderBundles\", req);\r\n    }\r\n\r\n    InitializeResx(): Promise<SubmitResult> {\r\n        return this.Post(\"InitializeResx\", {});\r\n    }\r\n\r\n    SyncLanguages(): Promise<SubmitResult> {\r\n        return this.Post(\"SyncLanguages\", {});\r\n    }\r\n\r\n}","module.exports = \"<div class=\\\"page-header container-fluid\\\" *ngIf=\\\"!IsEmbedded !HideHeader\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-5 col-xs-12\\\">\\r\\n            <h2>{{'Pages.Generations__GenerationNotification' | translate }}<span *ngIf=\\\"HeaderExtra\\\"> - {{HeaderExtra}}</span></h2>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-7 col-xs-12\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n                    <div class=\\\"col-md-8 col-xs-12 text-last padTop\\\">\\r\\n                        \\r\\n<div class=\\\"row form-group \\\"\\r\\n     id=\\\"FG_tenantCode\\\"\\r\\n     #FG_tenantCode=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label class=\\\"col-sm-3 control-label\\\">\\r\\n        {{'Columns.DbCreationRequest__TenantCode' | translate }}\\r\\n    </label>\\r\\n    <div class=\\\"col-sm-9\\\">\\r\\n        \\r\\n<select class=\\\"form-control\\\"\\r\\n        name=\\\"Form__tenantCode\\\" \\r\\n        [li-watch]=\\\"model\\\"\\r\\n        [(ngModel)]=\\\"model.tenantCode\\\"\\r\\n         (change)=\\\"tenantChanged()\\\" >\\r\\n    <option *ngFor=\\\"let item of tenants\\\" [ngValue]=\\\"item.code\\\">{{item.name}}</option>\\r\\n</select>\\r\\n    <p *ngIf=\\\"!FG_tenantCode.Write\\\">{{FG_tenantCode.Value}}</p>\\r\\n\\r\\n        \\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n                    </div>\\r\\n                <div class=\\\"col-md-4 col-xs-12 padTop padBottom\\\">\\r\\n                    <div class=\\\"pull-last btn-group\\\">\\r\\n\\r\\n                        <div class=\\\"btn-group\\\">\\r\\n    \\r\\n    <button class=\\\"btn btn-primary\\\"\\r\\n            (click)=\\\"render('all')\\\"\\r\\n            \\r\\n             title=\\\"{{'Words.RenderAll' | translate }}\\\">\\r\\n        <i class=\\\"fa fa-image fa-lg\\\"></i> \\r\\n    </button>\\r\\n\\r\\n    \\r\\n    <button class=\\\"btn btn-warning\\\"\\r\\n            (click)=\\\"render('definition')\\\"\\r\\n            \\r\\n             title=\\\"{{'Words.RenderDefinition' | translate }}\\\">\\r\\n        <i class=\\\"fa fa-language fa-lg\\\"></i> \\r\\n    </button>\\r\\n\\r\\n</div>\\r\\n\\r\\n                        \\r\\n    <button class=\\\"btn btn-info margin-sides\\\"\\r\\n            (click)=\\\"Refresh()\\\"\\r\\n            \\r\\n            >\\r\\n        <i class=\\\"fa fa-redo\\\"></i> \\r\\n    </button>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"!IsEmbedded\\\">\\r\\n\\r\\n        <ol class=\\\"breadcrumb\\\">\\r\\n            <li>\\r\\n                <a routerLink=\\\"'/'\\\">{{'Words.Main' | translate }}</a>\\r\\n            </li>\\r\\n            <li>\\r\\n                {{'Pages.Generations__GenerationNotification' | translate }}\\r\\n            </li>\\r\\n        </ol>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-header section-header\\\" *ngIf=\\\"IsEmbedded && !HideHeader\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-8\\\">\\r\\n                {{'Pages.Generations__GenerationNotification' | translate }}<span *ngIf=\\\"HeaderExtra\\\"> - {{HeaderExtra}}</span>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n            <ul class=\\\"nav nav-tabs\\\">\\r\\n                <li class=\\\"nav-item\\\" [ngClass]=\\\"ActiveTab=='domains_tab'?'active':null\\\">\\r\\n    <a (click)=\\\"ActiveTab='domains_tab'\\\">\\r\\n{{'Words.domains_tab' | translate }}\\r\\n    </a>\\r\\n</li>\\r\\n                <li class=\\\"nav-item\\\" [ngClass]=\\\"ActiveTab=='builder_tab'?'active':null\\\">\\r\\n    <a (click)=\\\"ActiveTab='builder_tab'\\\">\\r\\n{{'Words.builder_tab' | translate }}\\r\\n    </a>\\r\\n</li>\\r\\n                <li class=\\\"nav-item\\\" [ngClass]=\\\"ActiveTab=='localization_tab'?'active':null\\\">\\r\\n    <a (click)=\\\"ActiveTab='localization_tab'\\\">\\r\\n{{'Words.localization_tab' | translate }}\\r\\n    </a>\\r\\n</li>\\r\\n            </ul>\\r\\n<div  id=\\\"domains_tab\\\" [show-if]=\\\"ActiveTab=='domains_tab'\\\" class=\\\"tab-page\\\" #domains_tab>\\n<domainTree #DomainTree [IsEmbedded]='true'></domainTree></div>\\r\\n<div  id=\\\"builder_tab\\\" [show-if]=\\\"ActiveTab=='builder_tab'\\\" class=\\\"tab-page\\\" #builder_tab>\\n\\r\\n<div class=\\\"form-group col-md-12 \\\"\\r\\n     id=\\\"FG_environment\\\"\\r\\n     #FG_environment=\\\"bsFormGroup\\\" bs-group\\r\\n     >\\r\\n    <label>{{'Columns.DbCreationRequest__Environment' | translate }} </label>\\r\\n    \\r\\n<select class=\\\"form-control\\\"\\r\\n        name=\\\"Form__environment\\\" \\r\\n        [li-watch]=\\\"model\\\"\\r\\n        [(ngModel)]=\\\"model.environment\\\"\\r\\n         >\\r\\n        <option [ngValue]=\\\"null\\\">--({{'Words.Empty' | translate }})--</option>\\r\\n    <option *ngFor=\\\"let item of environments\\\" [ngValue]=\\\"item.name\\\">{{item.name}}</option>\\r\\n</select>\\r\\n    <p *ngIf=\\\"!FG_environment.Write\\\">{{FG_environment.Value}}</p>\\r\\n\\r\\n    \\r\\n</div>\\r\\n\\r\\n    <button class=\\\"btn btn-primary btn-block\\\"\\r\\n            (click)=\\\"InitializeApp()\\\"\\r\\n            \\r\\n            >\\r\\n        {{'Words.InitializeApp' | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button class=\\\"btn btn-primary btn-block\\\"\\r\\n            (click)=\\\"AddStaticFiles()\\\"\\r\\n            \\r\\n            >\\r\\n        {{'Words.AddStaticFiles' | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button class=\\\"btn btn-primary btn-block\\\"\\r\\n            (click)=\\\"AddBaseScripts()\\\"\\r\\n            \\r\\n            >\\r\\n        {{'Words.AddBaseScripts' | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button class=\\\"btn btn-primary btn-block\\\"\\r\\n            (click)=\\\"WriteWebPackFiles()\\\"\\r\\n            \\r\\n            >\\r\\n        {{'Words.WriteWebPackFiles' | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button class=\\\"btn btn-primary btn-block\\\"\\r\\n            (click)=\\\"PrepEnvironment()\\\"\\r\\n            \\r\\n            >\\r\\n        {{'Words.PrepEnvironment' | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button class=\\\"btn btn-primary btn-block\\\"\\r\\n            (click)=\\\"ClearOlderBundles()\\\"\\r\\n             [disabled]=\\\"!model.environment\\\"\\r\\n            >\\r\\n        {{'Words.ClearOlderBundles' | translate }}\\r\\n    </button>\\r\\n</div>\\r\\n\\r\\n<div  id=\\\"localization_tab\\\" [show-if]=\\\"ActiveTab=='localization_tab'\\\" class=\\\"tab-page\\\" #localization_tab>\\n\\r\\n    <button class=\\\"btn btn-primary btn-block\\\"\\r\\n            (click)=\\\"InitializeResx()\\\"\\r\\n            \\r\\n            >\\r\\n        {{'Words.InitializeResx' | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button class=\\\"btn btn-primary btn-block\\\"\\r\\n            (click)=\\\"SyncLanguages()\\\"\\r\\n            \\r\\n            >\\r\\n        {{'Words.SyncLanguages' | translate }}\\r\\n    </button>\\r\\n</div>        </div>\\r\\n        <div class=\\\"col-md-8\\\">\\r\\n            <generationInofList #GenerationInofList [IsEmbedded]='true'></generationInofList>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\n<div style='display:none' #lookupOptionsContainer values='{\\\"tenants\\\":\\\"C0\\\",\\\"environments\\\":\\\"C0\\\"}'></div>\\n<div style='display:none' #viewParamsContainer values='{\\\"ModelType\\\":null,\\\"AddUrl\\\":null,\\\"EditUrl\\\":null,\\\"DetailsUrl\\\":null,\\\"ListUrl\\\":null,\\\"Fields\\\":[],\\\"Other\\\":{\\\"DomainTree\\\":\\\"Domains/DomainTree\\\",\\\"GenerationInofList\\\":\\\"Generations/GenerationInofList\\\"}}'></div>\";","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { CodeShellModule } from \"codeshell/codeShellModule\";\r\nimport { SharedModule } from \"../Shared/SharedModule\";\r\nimport { Registry } from \"codeshell/core\";\r\nimport { AuthFilter, ResourceActions } from \"codeshell/security\";\r\n\r\nimport { ServerConfigBase } from \"codeshell/core\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { ResourceList } from \"./ResourceList\";\n\r\n\r\n@NgModule({\r\n    declarations: [ResourceList,],\r\n    exports: [ResourceList,],\r\n    imports: [\r\n\t\tSharedModule,\r\n        RouterModule.forChild([\r\n\t\t\t﻿{ path : \"ResourceList\", component : ResourceList, canActivate: [AuthFilter], data: { name : \"Resources__ResourceList\", navigate: false, resource:\"\", action: \"allowAll\", apps:null }},\n\r\n\t\t])\r\n    ]\r\n})\r\nexport class ResourcesModule {\r\n\r\n    constructor(trans: TranslateService, conf: ServerConfigBase) {\r\n        trans.setDefaultLang(conf.Locale);\r\n        trans.use(conf.Locale);\r\n    }\r\n}\r\n\r\nRegistry.Register(\"Resources/ResourceList\", ResourceList);\n","import { Component } from \"@angular/core\";\r\nimport { ResourceListBase } from \"Example/Resources/ResourceListBase\";\r\n\r\n@Component({ template: require('./ResourceList.html'), selector : \"resourceList\" })\r\nexport class ResourceList extends ResourceListBase {\r\n\tpublic GetPageId() : number { return 2005670949000; }\r\n\tpublic get CollectionId(): string | null { return null; }\r\n}","import { ListComponentBase } from \"codeshell/baseComponents\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { ResourcesService } from \"Example/Http\";\r\nimport { Shell } from \"codeshell/core\";\r\nimport { ResourceEditBase } from \"./ResourceEditBase\";\r\nimport { ComponentRequest } from \"codeshell/helpers\";\r\n\r\n@Injectable()\r\nexport abstract class ResourceListBase extends ListComponentBase {\r\n    get Service(): ResourcesService { return Shell.Injector.get(ResourcesService); }\r\n\r\n    Create() {\r\n        var req: ComponentRequest<ResourceEditBase> = { Identifier: \"AddModal\" };\r\n\r\n        this.GetComponent(req).then(comp => {\r\n            comp.DataSubmitted = res => {\r\n                comp.Show = false;\r\n                this.LoadData();\r\n            }\r\n            comp.BindAsync({}).then(d => {\r\n                comp.Show = true;\r\n            })\r\n        })\r\n    }\r\n\r\n    Edit(model: any) {\r\n        var req: ComponentRequest<ResourceEditBase> = { Identifier: \"EditModal\" };\r\n\r\n        this.GetComponent(req).then(comp => {\r\n            comp.DataSubmitted = res => {\r\n                comp.Show = false;\r\n                this.LoadData();\r\n            }\r\n            comp.FillAsync(model.id).then(d => {\r\n                comp.Show = true;\r\n            })\r\n        })\r\n    }\r\n}","module.exports = \"<div class=\\\"page-header container-fluid\\\" *ngIf=\\\"!IsEmbedded !HideHeader\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-5 col-xs-12\\\">\\r\\n            <h2>{{'Pages.Resources__ResourceList' | translate }}<span *ngIf=\\\"HeaderExtra\\\"> - {{HeaderExtra}}</span></h2>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-sm-7 col-xs-12\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n                <div class=\\\"col-md-12 col-xs-12 padTop padBottom\\\">\\r\\n                    <div class=\\\"pull-last btn-group\\\">\\r\\n\\r\\n                        \\r\\n    <button class=\\\"btn btn-success\\\"\\r\\n            (click)=\\\"Create()\\\"\\r\\n            \\r\\n            >\\r\\n        <i class=\\\"fa fa-plus\\\"></i> {{'Words.AddResource' | translate }}\\r\\n    </button>\\r\\n\\r\\n                        \\r\\n    <button class=\\\"btn btn-info margin-sides\\\"\\r\\n            (click)=\\\"Refresh()\\\"\\r\\n            \\r\\n            >\\r\\n        <i class=\\\"fa fa-redo\\\"></i> \\r\\n    </button>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"!IsEmbedded\\\">\\r\\n\\r\\n        <ol class=\\\"breadcrumb\\\">\\r\\n            <li>\\r\\n                <a routerLink=\\\"'/'\\\">{{'Words.Main' | translate }}</a>\\r\\n            </li>\\r\\n            <li>\\r\\n                {{'Pages.Resources__ResourceList' | translate }}\\r\\n            </li>\\r\\n        </ol>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-header section-header\\\" *ngIf=\\\"IsEmbedded && !HideHeader\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-8\\\">\\r\\n                {{'Pages.Resources__ResourceList' | translate }}<span *ngIf=\\\"HeaderExtra\\\"> - {{HeaderExtra}}</span>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div [ngClass]=\\\"IsEmbedded?'panel panel-default embedded body':'animated fadeInRight'\\\">\\r\\n    <div [ngClass]=\\\"IsEmbedded?'panel-body':'container-fluid content-block'\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-4\\\" style=\\\"padding: 10px 24px;color:#9B9B9B\\\">\\r\\n                <span><b>{{'Words.Count' | translate }}</b> : <span style=\\\"color:#9B9B9B\\\">{{totalCount}}</span></span>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-8\\\">\\r\\n                <search-group (termChange)=\\\"HeaderSearch($event)\\\"></search-group>\\r\\n            </div>\\r\\n        </div>\\r\\n        <paginate [showing]=\\\"options.Showing\\\" [total-count]=\\\"totalCount\\\" [max-pages]=\\\"10\\\" [(currentPage)]=\\\"pageIndex\\\" (pageChange)=\\\"PageSelected($event)\\\"></paginate>\\r\\n\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n                <th class=\\\"cursorPointer\\\" [ngClass]=\\\"GetHeaderClass('Name')\\\"  >\\r\\n        {{'Columns.Resource__Name' | translate }}\\r\\n        <i class=\\\"fa fa-sort\\\" (click)=\\\"SortBy('Name')\\\"></i>\\r\\n    </th>\\r\\n\\r\\n                <th class=\\\"cursorPointer\\\" [ngClass]=\\\"GetHeaderClass('Domain')\\\"  >\\r\\n        {{'Columns.Resource__Domain' | translate }}\\r\\n        <i class=\\\"fa fa-sort\\\" (click)=\\\"SortBy('Domain')\\\"></i>\\r\\n    </th>\\r\\n\\r\\n            <th></th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let model of list\\\">\\r\\n            <td  >\\r\\n    {{model.name}}\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        \\r\\n    </div>\\r\\n</td>\\r\\n            <td  >\\r\\n    {{model.domain}}\\r\\n    <div style=\\\"position:relative\\\">\\r\\n        \\r\\n    </div>\\r\\n</td>\\r\\n            <td>\\r\\n                <div class=\\\"btn-group btnResponsive \\\">\\r\\n            <button *ngIf=\\\"Permission.update\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"Edit(model)\\\">\\r\\n                <i class=\\\"fa fa-pen\\\"></i>\\r\\n            </button>\\r\\n\\r\\n\\r\\n                <a *ngIf=\\\"Permission.delete\\\" class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"Delete(model,model.id)\\\">\\r\\n                <i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            </a>\\r\\n\\r\\n</div>\\r\\n            </td>\\r\\n\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n        </div>\\r\\n\\r\\n        <paginate [showing]=\\\"options.Showing\\\" [total-count]=\\\"totalCount\\\" [max-pages]=\\\"10\\\" [(currentPage)]=\\\"pageIndex\\\" (pageChange)=\\\"PageSelected($event)\\\"></paginate>\\r\\n    </div>\\r\\n\\r\\n</div>\\n<div style='display:none' #lookupOptionsContainer values=''></div>\\n<div style='display:none' #viewParamsContainer values='{\\\"ModelType\\\":null,\\\"AddUrl\\\":null,\\\"EditUrl\\\":null,\\\"DetailsUrl\\\":null,\\\"ListUrl\\\":null,\\\"Fields\\\":[],\\\"Other\\\":{\\\"AddModal\\\":\\\"Resources/ResourceModal\\\",\\\"EditModal\\\":\\\"Resources/ResourceEditModal\\\"}}'></div>\";"],"sourceRoot":""}